---
title: "Hands-on Ex 1A"
subtitle: "Geospatial Data Science with R"
author: "Stephen Tay"
date: "24 Aug 2024"
output:
  html_document:
    number_sections: yes
    theme: united
    toc: yes
    toc_float: yes
  word_document:
    toc: yes
  pdf_document:
    toc: yes  
---

# Overview
This exercise will perform geospatial data science tasks in R using the **sf** package.

```{r}
pacman::p_load(sf, tidyverse)
```

# Importing Geospatial Data
We will be importing 3 geospatial dataset using [st_read()]
::: panel-tabset
## MP14_SUBZONE_WEB_PL
Importing polygon feature data in shapefile format
```{r}
mpsz <- st_read(dsn = "data/geospatial", 
                  layer = "MP14_SUBZONE_WEB_PL")
```
## CyclingPath
Importing polyline feature data in shapefile form
```{r}
cyclingpath <- st_read(dsn = "data/geospatial", 
                         layer = "CyclingPathGazette")
```
## PreSchoolsLocation
Importing GIS data in kml format
```{r}
preschool <- st_read("data/geospatial/PreSchoolsLocation.kml")
```
:::

# Checking the Content of A Simple Feature Data Frame

::: panel-tabset
## st_geometry()
```{r}
st_geometry(mpsz)
```

## glimpse()
```{r}
glimpse(mpsz)
```

## head()
```{r}
head(mpsz, n=5)
```
:::



# Plotting Geospatial Data
::: panel-tabset
## plot(mpsz)
```{r}
plot(mpsz)
```

## plot(st_geometry(mpsz))
```{r}
plot(st_geometry(mpsz))
```

## plot(mpsz["PLN_AREA_N"])
```{r}
plot(mpsz["PLN_AREA_N"])
```
:::

# Working with Projection
## Assigning EPSG code to a simple feature data frame
::: callout-important
It is important to check the coordinate system of the source data. One of the common issue that can happen during importing geospatial data into R is that the coordinate system of the source data was either missing (such as due to missing .proj for ESRI shapefile) or wrongly assigned during the importing process.
:::

Here's an example where the EPSG code in the [mpsz] dataset is incorrect. Although mpsz data frame is projected in svy21 but when we read until the end of the print, it indicates that the EPSG is 9001. This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414.

::: panel-tabset
## 1. Check the CRS
```{r}
st_crs(mpsz)
```

## 2. Assign the correct EPSG code
```{r}
mpsz3414 <- st_set_crs(mpsz, 3414)
```

## 3. Check the CRS again
Notice that the EPSG code is 3414 now.
```{r}
st_crs(mpsz3414)
```
::: 

## Preschool dataset
::: callout-important
It is important to transform data from geographic coordinate system to projected coordinate system. This is because geographic coordinate system is not appropriate if the analysis need to use distance or/and area measurements.
:::
Here's an example where we need to transform projection of the [preschool] dataset from wgs84 to svy21.

::: panel-tabset
## 1. Check the CRS
Notice that it is in wgs84 coordinate system.
```{r}
st_crs(preschool)
```

## 2. Projection transformation
```{r}
preschool3414 <- st_transform(preschool, 
                              crs = 3414)
st_geometry(preschool3414)
```

## 3. Check the CRS again
Notice that it is in svy21 projected coordinate system now.
```{r}
st_crs(preschool3414)
```
::: 

# Importing & Transforming Aspatial Data
## Importing
```{r}
listings <- read_csv("data/aspatial/listings.csv")
list(listings)
```

## Creating a simple feature data frame from an aspatial data frame
```{r}
listings_sf <- st_as_sf(listings, 
                       coords = c("longitude", "latitude"),
                       crs=4326) %>%
  st_transform(crs = 3414)
glimpse(listings_sf)
```

# Geoprocessing with sf package

## Buffering
```{r}
buffer_cycling <- st_buffer(cyclingpath, dist=5, nQuadSegs = 30)
buffer_cycling$AREA <- st_area(buffer_cycling)
```

```{r}
sum(buffer_cycling$AREA)
```

## Point-in-polygon count
```{r}
mpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))
```

```{r}
summary(mpsz3414$`PreSch Count`)
```

```{r}
top_n(mpsz3414, 1, `PreSch Count`)
```

```{r}
mpsz3414 <- mpsz3414 %>%
  mutate(Area = st_area(.)) %>%
  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)
```

```{r}
hist(mpsz3414$`PreSch Density`)
```

```{r}
ggplot(data=mpsz3414, 
       aes(x= as.numeric(`PreSch Density`)))+
  geom_histogram(bins=20, 
                 color="black", 
                 fill="light blue") +
  labs(title = "Are pre-school even distributed in Singapore?",
       subtitle= "There are many planning sub-zones with a single pre-school, on the other hand, \nthere are two planning sub-zones with at least 20 pre-schools",
      x = "Pre-school density (per km sq)",
      y = "Frequency")
```

```{r}
ggplot(data=mpsz3414, 
       aes(y = `PreSch Count`, 
           x= as.numeric(`PreSch Density`)))+
  geom_point(color="black", 
             fill="light blue") +
  xlim(0, 40) +
  ylim(0, 40) +
  labs(title = "",
      x = "Pre-school density (per km sq)",
      y = "Pre-school count")
```
