[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Geospatial Data Science & Analytics\n\n\nby Stephen Tay"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html",
    "href": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html",
    "title": "Hands-on Ex 1A",
    "section": "",
    "text": "This exercise will perform geospatial data science tasks using the sf package in R.\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "title": "Hands-on Ex 1A",
    "section": "5.1 Assigning EPSG code to a simple feature data frame",
    "text": "5.1 Assigning EPSG code to a simple feature data frame\n\n\n\n\n\n\nImportant\n\n\n\nIt is important to check the coordinate reference system (CRS) of the source data. One of the common issue that can happen when importing geospatial data into R is that the CRS of the source data was either missing (such as due to missing .proj for ESRI shapefile) or wrongly assigned during the importing process.\n\n\nHere’s an example where the EPSG code in the mpsz dataset is incorrect. Although mpsz data frame is projected in svy21 but the EPSG of the imported data is 9001. This is the wrong EPSG code because the correct EPSG code for svy21 should be 3414.\n\n1. Check the CRS2. Assign the correct EPSG code3. Check the CRS again\n\n\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\n\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n\n\n\nNotice that the EPSG code is 3414 now.\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html#projection-transformation",
    "href": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html#projection-transformation",
    "title": "Hands-on Ex 1A",
    "section": "5.2 Projection Transformation",
    "text": "5.2 Projection Transformation\n\n\n\n\n\n\nImportant\n\n\n\nIt is important to transform data from geographic coordinate system to projected coordinate system. This is because geographic coordinate system is not appropriate if the analysis needs to use distance and/or area measurements.\n\n\nHere’s an example where we need to transform projection of the preschool dataset from wgs84 to svy21.\n\n1. Check the CRS2. Projection transformation3. Check the CRS again\n\n\nNotice that it is in wgs84 coordinate system.\n\nst_geometry(preschool)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nPOINT Z (103.8072 1.299333 0)\n\n\nPOINT Z (103.826 1.312839 0)\n\n\nPOINT Z (103.8409 1.348843 0)\n\n\nPOINT Z (103.8048 1.435024 0)\n\n\nPOINT Z (103.839 1.33315 0)\n\n\n\n\nProjection transformation is the process of projecting a simple feature data frame from one coordinate system to another coordinate system. We use st_transform() to do so.\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)\nst_geometry(preschool3414)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nPOINT Z (25089.46 31299.16 0)\n\n\nPOINT Z (27189.07 32792.54 0)\n\n\nPOINT Z (28844.56 36773.76 0)\n\n\nPOINT Z (24821.92 46303.16 0)\n\n\nPOINT Z (28637.82 35038.49 0)\n\n\n\n\nNotice that it is in svy21 projected coordinate system now.\n\nst_geometry(preschool3414)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nPOINT Z (25089.46 31299.16 0)\n\n\nPOINT Z (27189.07 32792.54 0)\n\n\nPOINT Z (28844.56 36773.76 0)\n\n\nPOINT Z (24821.92 46303.16 0)\n\n\nPOINT Z (28637.82 35038.49 0)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html#importing",
    "href": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html#importing",
    "title": "Hands-on Ex 1A",
    "section": "6.1 Importing",
    "text": "6.1 Importing\nWe will be importing an aspatial dataset:\n\nSingapore Airbnb listing data from Inside Airbnb\n\nIt is aspatial because there are no geospatial objects, but among the data fields, there are two fields that capture the x- and y-coordinates of the data points.\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 3540 Columns: 75\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (26): listing_url, source, name, description, neighborhood_overview, pi...\ndbl  (38): id, scrape_id, host_id, host_listings_count, host_total_listings_...\nlgl   (6): host_is_superhost, host_has_profile_pic, host_identity_verified, ...\ndate  (5): last_scraped, host_since, calendar_last_scraped, first_review, la...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(listings)\n\nRows: 3,540\nColumns: 75\n$ id                                           &lt;dbl&gt; 71609, 71896, 71903, 2753…\n$ listing_url                                  &lt;chr&gt; \"https://www.airbnb.com/r…\n$ scrape_id                                    &lt;dbl&gt; 2.024063e+13, 2.024063e+1…\n$ last_scraped                                 &lt;date&gt; 2024-06-29, 2024-06-29, …\n$ source                                       &lt;chr&gt; \"previous scrape\", \"city …\n$ name                                         &lt;chr&gt; \"Ensuite Room (Room 1 & 2…\n$ description                                  &lt;chr&gt; \"For 3 rooms.Book room 1 …\n$ neighborhood_overview                        &lt;chr&gt; NA, NA, \"Quiet and view o…\n$ picture_url                                  &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_id                                      &lt;dbl&gt; 367042, 367042, 367042, 1…\n$ host_url                                     &lt;chr&gt; \"https://www.airbnb.com/u…\n$ host_name                                    &lt;chr&gt; \"Belinda\", \"Belinda\", \"Be…\n$ host_since                                   &lt;date&gt; 2011-01-29, 2011-01-29, …\n$ host_location                                &lt;chr&gt; \"Singapore\", \"Singapore\",…\n$ host_about                                   &lt;chr&gt; \"Hi My name is Belinda -H…\n$ host_response_time                           &lt;chr&gt; \"within an hour\", \"within…\n$ host_response_rate                           &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_acceptance_rate                         &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"99%…\n$ host_is_superhost                            &lt;lgl&gt; FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_picture_url                             &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_neighbourhood                           &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ host_listings_count                          &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49…\n$ host_total_listings_count                    &lt;dbl&gt; 11, 11, 11, 73, 73, 11, 8…\n$ host_verifications                           &lt;chr&gt; \"['email', 'phone']\", \"['…\n$ host_has_profile_pic                         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                &lt;chr&gt; NA, NA, \"Singapore, Singa…\n$ neighbourhood_cleansed                       &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ neighbourhood_group_cleansed                 &lt;chr&gt; \"East Region\", \"East Regi…\n$ latitude                                     &lt;dbl&gt; 1.34537, 1.34754, 1.34531…\n$ longitude                                    &lt;dbl&gt; 103.9589, 103.9596, 103.9…\n$ property_type                                &lt;chr&gt; \"Private room in villa\", …\n$ room_type                                    &lt;chr&gt; \"Private room\", \"Private …\n$ accommodates                                 &lt;dbl&gt; 3, 1, 2, 1, 1, 4, 2, 1, 1…\n$ bathrooms                                    &lt;dbl&gt; NA, 0.5, 0.5, 2.0, 2.5, N…\n$ bathrooms_text                               &lt;chr&gt; \"1 private bath\", \"Shared…\n$ bedrooms                                     &lt;dbl&gt; 2, 1, 1, 1, 1, 3, 2, 1, 1…\n$ beds                                         &lt;dbl&gt; NA, 1, 2, 1, 1, NA, 1, 1,…\n$ amenities                                    &lt;chr&gt; \"[\\\"Free parking on premi…\n$ price                                        &lt;chr&gt; NA, \"$80.00\", \"$80.00\", \"…\n$ minimum_nights                               &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights                               &lt;dbl&gt; 365, 365, 365, 999, 999, …\n$ minimum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ minimum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ maximum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ minimum_nights_avg_ntm                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights_avg_ntm                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ calendar_updated                             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              &lt;dbl&gt; 30, 30, 30, 28, 0, 29, 30…\n$ availability_60                              &lt;dbl&gt; 59, 53, 60, 58, 0, 58, 60…\n$ availability_90                              &lt;dbl&gt; 89, 83, 90, 62, 0, 88, 90…\n$ availability_365                             &lt;dbl&gt; 89, 148, 90, 62, 0, 88, 3…\n$ calendar_last_scraped                        &lt;date&gt; 2024-06-29, 2024-06-29, …\n$ number_of_reviews                            &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 1…\n$ number_of_reviews_ltm                        &lt;dbl&gt; 0, 0, 0, 0, 2, 0, 0, 1, 1…\n$ number_of_reviews_l30d                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ first_review                                 &lt;date&gt; 2011-12-19, 2011-07-30, …\n$ last_review                                  &lt;date&gt; 2020-01-17, 2019-10-13, …\n$ review_scores_rating                         &lt;dbl&gt; 4.44, 4.16, 4.41, 4.40, 4…\n$ review_scores_accuracy                       &lt;dbl&gt; 4.37, 4.22, 4.39, 4.16, 4…\n$ review_scores_cleanliness                    &lt;dbl&gt; 4.00, 4.09, 4.52, 4.26, 4…\n$ review_scores_checkin                        &lt;dbl&gt; 4.63, 4.43, 4.63, 4.47, 4…\n$ review_scores_communication                  &lt;dbl&gt; 4.78, 4.43, 4.64, 4.42, 4…\n$ review_scores_location                       &lt;dbl&gt; 4.26, 4.17, 4.50, 4.53, 4…\n$ review_scores_value                          &lt;dbl&gt; 4.32, 4.04, 4.36, 4.63, 4…\n$ license                                      &lt;chr&gt; NA, NA, NA, \"S0399\", \"S03…\n$ instant_bookable                             &lt;lgl&gt; FALSE, FALSE, FALSE, TRUE…\n$ calculated_host_listings_count               &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49…\n$ calculated_host_listings_count_entire_homes  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ calculated_host_listings_count_private_rooms &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 6, 49…\n$ calculated_host_listings_count_shared_rooms  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            &lt;dbl&gt; 0.12, 0.15, 0.29, 0.15, 0…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01A/Hands-on_Ex01A.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "title": "Hands-on Ex 1A",
    "section": "6.2 Creating a simple feature data frame from an aspatial data frame",
    "text": "6.2 Creating a simple feature data frame from an aspatial data frame\nTwo useful fields we are going to use are latitude and longitude. Note that they are in decimal degree format. As a best guess, we assume that the data is in wgs84 Geographic Coordinate System. We do so by using st_as_sf():\n\ncoords argument: provide the column name of the x-coordinates, followed by the column name of the y-coordinates.\ncrs argument: provide the coordinates system in epsg format. EPSG: 4326 is wgs84 Geographic Coordinate System and EPSG: 3414 is Singapore SVY21 Projected Coordinate System. You can search for other countries’ epsg code by referring to epsg.io.\n\nA new column called geometry has been added into the data frame, while the longitude and latitude columns have been dropped.\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nglimpse(listings_sf)\n\nRows: 3,540\nColumns: 74\n$ id                                           &lt;dbl&gt; 71609, 71896, 71903, 2753…\n$ listing_url                                  &lt;chr&gt; \"https://www.airbnb.com/r…\n$ scrape_id                                    &lt;dbl&gt; 2.024063e+13, 2.024063e+1…\n$ last_scraped                                 &lt;date&gt; 2024-06-29, 2024-06-29, …\n$ source                                       &lt;chr&gt; \"previous scrape\", \"city …\n$ name                                         &lt;chr&gt; \"Ensuite Room (Room 1 & 2…\n$ description                                  &lt;chr&gt; \"For 3 rooms.Book room 1 …\n$ neighborhood_overview                        &lt;chr&gt; NA, NA, \"Quiet and view o…\n$ picture_url                                  &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_id                                      &lt;dbl&gt; 367042, 367042, 367042, 1…\n$ host_url                                     &lt;chr&gt; \"https://www.airbnb.com/u…\n$ host_name                                    &lt;chr&gt; \"Belinda\", \"Belinda\", \"Be…\n$ host_since                                   &lt;date&gt; 2011-01-29, 2011-01-29, …\n$ host_location                                &lt;chr&gt; \"Singapore\", \"Singapore\",…\n$ host_about                                   &lt;chr&gt; \"Hi My name is Belinda -H…\n$ host_response_time                           &lt;chr&gt; \"within an hour\", \"within…\n$ host_response_rate                           &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_acceptance_rate                         &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"99%…\n$ host_is_superhost                            &lt;lgl&gt; FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_picture_url                             &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_neighbourhood                           &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ host_listings_count                          &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49…\n$ host_total_listings_count                    &lt;dbl&gt; 11, 11, 11, 73, 73, 11, 8…\n$ host_verifications                           &lt;chr&gt; \"['email', 'phone']\", \"['…\n$ host_has_profile_pic                         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                &lt;chr&gt; NA, NA, \"Singapore, Singa…\n$ neighbourhood_cleansed                       &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ neighbourhood_group_cleansed                 &lt;chr&gt; \"East Region\", \"East Regi…\n$ property_type                                &lt;chr&gt; \"Private room in villa\", …\n$ room_type                                    &lt;chr&gt; \"Private room\", \"Private …\n$ accommodates                                 &lt;dbl&gt; 3, 1, 2, 1, 1, 4, 2, 1, 1…\n$ bathrooms                                    &lt;dbl&gt; NA, 0.5, 0.5, 2.0, 2.5, N…\n$ bathrooms_text                               &lt;chr&gt; \"1 private bath\", \"Shared…\n$ bedrooms                                     &lt;dbl&gt; 2, 1, 1, 1, 1, 3, 2, 1, 1…\n$ beds                                         &lt;dbl&gt; NA, 1, 2, 1, 1, NA, 1, 1,…\n$ amenities                                    &lt;chr&gt; \"[\\\"Free parking on premi…\n$ price                                        &lt;chr&gt; NA, \"$80.00\", \"$80.00\", \"…\n$ minimum_nights                               &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights                               &lt;dbl&gt; 365, 365, 365, 999, 999, …\n$ minimum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ minimum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ maximum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ minimum_nights_avg_ntm                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights_avg_ntm                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ calendar_updated                             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              &lt;dbl&gt; 30, 30, 30, 28, 0, 29, 30…\n$ availability_60                              &lt;dbl&gt; 59, 53, 60, 58, 0, 58, 60…\n$ availability_90                              &lt;dbl&gt; 89, 83, 90, 62, 0, 88, 90…\n$ availability_365                             &lt;dbl&gt; 89, 148, 90, 62, 0, 88, 3…\n$ calendar_last_scraped                        &lt;date&gt; 2024-06-29, 2024-06-29, …\n$ number_of_reviews                            &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 1…\n$ number_of_reviews_ltm                        &lt;dbl&gt; 0, 0, 0, 0, 2, 0, 0, 1, 1…\n$ number_of_reviews_l30d                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ first_review                                 &lt;date&gt; 2011-12-19, 2011-07-30, …\n$ last_review                                  &lt;date&gt; 2020-01-17, 2019-10-13, …\n$ review_scores_rating                         &lt;dbl&gt; 4.44, 4.16, 4.41, 4.40, 4…\n$ review_scores_accuracy                       &lt;dbl&gt; 4.37, 4.22, 4.39, 4.16, 4…\n$ review_scores_cleanliness                    &lt;dbl&gt; 4.00, 4.09, 4.52, 4.26, 4…\n$ review_scores_checkin                        &lt;dbl&gt; 4.63, 4.43, 4.63, 4.47, 4…\n$ review_scores_communication                  &lt;dbl&gt; 4.78, 4.43, 4.64, 4.42, 4…\n$ review_scores_location                       &lt;dbl&gt; 4.26, 4.17, 4.50, 4.53, 4…\n$ review_scores_value                          &lt;dbl&gt; 4.32, 4.04, 4.36, 4.63, 4…\n$ license                                      &lt;chr&gt; NA, NA, NA, \"S0399\", \"S03…\n$ instant_bookable                             &lt;lgl&gt; FALSE, FALSE, FALSE, TRUE…\n$ calculated_host_listings_count               &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49…\n$ calculated_host_listings_count_entire_homes  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ calculated_host_listings_count_private_rooms &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 6, 49…\n$ calculated_host_listings_count_shared_rooms  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            &lt;dbl&gt; 0.12, 0.15, 0.29, 0.15, 0…\n$ geometry                                     &lt;POINT [m]&gt; POINT (41972.5 3639…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html",
    "href": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html",
    "title": "Hands-on Ex 1B",
    "section": "",
    "text": "This exercise will perform thematic mapping and geovisualisation of choropleth maps using the tmap package in R.\nThematic mapping is the use of map symbols to visualize selected properties of geographic features that are not naturally visible, such as population, temperature, crime rate, and property prices.\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#importing-data",
    "title": "Hands-on Ex 1B",
    "section": "2.1 Importing Data",
    "text": "2.1 Importing Data\nWe will be importing 2 datasets:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPopulation data of Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 from Department of Statistics, Singapore\n\n\nMaster Plan 2014 Subzone BoundaryPopulation data\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Hands-on_Ex/Hands-on_Ex01B/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\nThis is an aspatial data file. Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to MP14_SUBZONE_WEB_PL shapefile.\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#transforming-data",
    "href": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#transforming-data",
    "title": "Hands-on Ex 1B",
    "section": "2.2 Transforming Data",
    "text": "2.2 Transforming Data\nWe are preparing a data table with year 2020 values, including the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY. Here are some definitions to note:\n\nYOUNG: age group 0-4 until age group 20-24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age groups, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+rowSums(.[13:15])) %&gt;%\n  mutate(`AGED`=rowSums(.[16:21])) %&gt;%\n  mutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, \n         `AGED`, `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\nData cleaning to ensure PA and SZ fields are uppercase so that it can be joined to mpsz table using SUBZONE_N and SZ as the common identifier.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nSave to RDS file.\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#using-tmap-built-in-classification-methods",
    "href": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#using-tmap-built-in-classification-methods",
    "title": "Hands-on Ex 1B",
    "section": "5.1 Using tmap built-in classification methods",
    "text": "5.1 Using tmap built-in classification methods\ntmap provides several data classification methods under the style argument, such as:\n\nquantileequaljenkssdprettyhclustfisher\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"pretty\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"hclust\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"fisher\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#using-customised-breaks",
    "href": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#using-customised-breaks",
    "title": "Hands-on Ex 1B",
    "section": "5.2 Using customised breaks",
    "text": "5.2 Using customised breaks\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the breaks argument to the tm_fill(). It is important to note that, in tmap the breaks include a minimum and maximum. As a result, in order to end up with n categories, n+1 elements must be specified in the breaks option (the values must be in increasing order).\nStep 1: Get some descriptive statistics on the variable before setting the break points.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\nStep 2: We set break points. Based on the results above, our breaks vector is c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\nStep 3: Plot it!\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#varying-the-number-of-classes",
    "href": "Hands-on_Ex/Hands-on_Ex01B/Hands-on_Ex01B.html#varying-the-number-of-classes",
    "title": "Hands-on Ex 1B",
    "section": "5.3 Varying the number of classes",
    "text": "5.3 Varying the number of classes\nIn choropleth maps, you should not have less than 4 classes as you can’t see the statistical distribution well. Ideally, you should have 5-10 classes. Also, you should not have too many classes or more than 8 shades of the same color as readers won’t be able to differentiate the classes very well.\n\n2 classes6 classes10 classes20 classesk classes based on Sturges’ formula\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 2,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nSturges’ formula suggests the number of classes based on the number of values. k = 1 + 3.32 * log n\nwhere n = number of values, k = number of classes.\nIn this example, Sturges’ formula suggests 19 classes which are too many.\n\n(k &lt;- round(1 + 3.32 * log(n_distinct(mpsz_pop2020$DEPENDENCY)), 0))\n\n[1] 19\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = k,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "title": "In-class Ex 6",
    "section": "",
    "text": "Overview\nIn this exercise, we will perform an Emerging Hot Spot Analysis, a spatio-temporal method used to identify and describe the evolution of hot spots and cold spots over time. The analysis involves four main steps:\n\nBuilding a space-time cube.\nCalculating the Getis-Ord Gi* statistic for each bin using an FDR correction (there are some differences in calculating Gi* when we are using time series data).\nEvaluating hot and cold spot trends with the Mann-Kendall (MK) trend test.\nCategorising each study area location based on the trend’s z-score and p-value, along with the hot spot z-score and p-value.\n\nThe plotly package enables the creation of interactive plots, allowing you to explore and monitor trends over time. The Kendall package is used for conducting Mann-Kendall trend tests.\n\npacman::p_load(sf, sfdep, tmap, plotly, tidyverse, Kendall)\n\n\n\n1. Importing & Transforming Data\nTwo datasets will be used in this in-class exercise:\n\nHunan County Boundary Layer: A geospatial dataset in ESRI shapefile format.\nHunan_GDPPC.csv: A CSV file containing GDPPC indicator for Hunan counties, from 2005 to 2021.\n\n\nHunan shapefileHunan’s GDPPC\n\n\nIn this in-class exercise, there’s no need to convert the Geographical Coordinate System to a projected coordinate system.\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\") \n\nReading layer `Hunan' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex06/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nglimpse(hunan)\n\nRows: 88\nColumns: 8\n$ NAME_2     &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 211…\n$ NAME_3     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ ENGTYPE_3  &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Cou…\n$ Shape_Leng &lt;dbl&gt; 1.869074, 2.360691, 1.425620, 3.474325, 2.289506, 4.171918,…\n$ Shape_Area &lt;dbl&gt; 0.10056190, 0.19978745, 0.05302413, 0.18908121, 0.11450357,…\n$ County     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 …\n\n\n\n\n\nGDPPC &lt;- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\nglimpse(GDPPC)\n\nRows: 1,496\nColumns: 3\n$ Year   &lt;dbl&gt; 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 200…\n$ County &lt;chr&gt; \"Longshan\", \"Changsha\", \"Wangcheng\", \"Ningxiang\", \"Liuyang\", \"Z…\n$ GDPPC  &lt;dbl&gt; 3469, 24612, 14659, 11687, 13406, 8546, 10944, 8040, 7383, 1168…\n\n\n\n\n\n\n\n2. Creating a Time Series Cube\nspacetime() function of the sfdep package is used to create an spatio-temporal cube. In using the spacetime cube, the space entity (e.g. administrative boundary or the hexagon) must remain constant over time; only the attribute in the space entity changes over time. It is useful to verify that your object is a space-time cube object using the is_spacetime_cube() function.\nNote that your time field must be an integer (it cannot be a real number, e.g. you may have to drop the time values in order to make it an integer time value.)\n\nGDPPC_st &lt;- spacetime(GDPPC, # attribute datafile\n                      hunan, # geospatial datefile\n                      .loc_col = \"County\", # spatial field\n                      .time_col = \"Year\" # time field which must be in integer\n                      )\nis_spacetime_cube(GDPPC_st)\n\n[1] TRUE\n\n\n\n\n3. Computing Gi*\nWe are computing local Gi* statistics which includes self (Gi statistic does not include self). When computing Gi* over time, we need to activate the geometry context using activate(\"geometry\").\nThe code below identifies neighbours and derives inverse distance weights.\nWe use set_nbs() and set_wts() to copy the “nb” and “wt” columns to each time slice. This dataset now has neighbours and weights for each time-slice.\nDo not rearrange the rows as row order is very important in the analysis.\n\nGDPPC_nb &lt;- GDPPC_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wt = st_inverse_distance(nb, # we are using the inverse distance weight\n                             geometry,\n                             scale = 1,\n                             alpha = 1),\n    .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;% # we fix them as row order is very important \n  set_wts(\"wt\")\n\nNext, we calculate the local Gi* for each location by grouping the data by year and using the local_gstar_perm() function from the sfdep package. Then, we use unnest() to expand the gi_star column in the newly created gi_star data frame.\n\ngi_star &lt;- GDPPC_nb %&gt;%\n  group_by(Year) %&gt;%\n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %&gt;%\n  tidyr::unnest(gi_star)\n\n\n\n4. Mann-Kendall Test\nThe Mann-Kendall (MK) test is a statistical method used to confirm the presence of a monotonic trend in a time series. The hypotheses are as follows:\n\nH0: No monotonic trend.\nH1: A monotonic trend (increasing or decreasing) is present.\n\nWe reject the null hypothesis if the p-value is smaller than the chosen alpha level. The tau value, which ranges from -1 to 1, indicates the direction and strength of the trend:\n\n-1 represents a perfectly decreasing trend\n1 signifies a perfectly increasing trend.\n\nTo perform an MK test, at least 12 time periods of data are required.\n\nChangsha exampleChangsha’s interactive Mann-Kendall plotChangsha’s MK test reportDataframe of MK test for each locationSorting of dataframe\n\n\nUsing the computed local Gi* statistics, we can assess the trend at each location with the MK test.\nLet’s take Changsha County as an example and plot its Gi* statistics from 2005 to 2021.\n\ncbg &lt;- gi_star %&gt;%\n  ungroup() %&gt;%\n  filter(County == \"Changsha\") %&gt;%\n  select(County, Year, gi_star)\n\n\nggplot(data = cbg, aes(x = Year, y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\n\nWe can create an interactive MK plot using ggplotly() function from the plotly package.\n\np &lt;- ggplot(data = cbg, aes(x = Year, y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n\n\n\n\n\n\n\nIn the results, sl represents the p-value. Since the p-value is less than 0.05 and tau is greater than 0, we reject the null hypothesis, indicating a slight upward trend.\n\ncbg %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n    tau      sl     S     D  varS\n  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 0.485 0.00742    66  136.  589.\n\n\n\n\nWe can perform the Mann-Kendall test for all locations simultaneously at once using group_by(County).\nThe resulting dataframe reveals that some counties exhibit statistically significant trends, while others do not. Additionally, some show positive trends, while others display a decline.\n\nehsa &lt;- gi_star %&gt;%\n  group_by(County) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\nhead(ehsa)\n\n# A tibble: 6 × 6\n  County        tau        sl     S     D  varS\n  &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Anhua      0.191  0.303        26  136.  589.\n2 Anren     -0.294  0.108       -40  136.  589.\n3 Anxiang    0      1             0  136.  589.\n4 Baojing   -0.691  0.000128    -94  136.  589.\n5 Chaling   -0.0882 0.650       -12  136.  589.\n6 Changning -0.750  0.0000318  -102  136.  589.\n\n\n\n\nWe could sort the dataframe to show significant emerging hot/cold spots.\n\nemerging &lt;- ehsa %&gt;%\n  arrange(sl, abs(tau)) %&gt;%\n  slice(1:10)\nhead(emerging)\n\n# A tibble: 6 × 6\n  County        tau         sl     S     D  varS\n  &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Shuangfeng  0.868 0.00000143   118  136.  589.\n2 Xiangtan    0.868 0.00000143   118  136.  589.\n3 Xiangxiang  0.868 0.00000143   118  136.  589.\n4 Chengbu    -0.824 0.00000482  -112  136.  589.\n5 Dongan     -0.824 0.00000482  -112  136.  589.\n6 Wugang     -0.809 0.00000712  -110  136.  589.\n\n\n\n\n\n\n\n5. Emerging Hotspot Analysis\n\nemerging_hotspot_analysis()Visualising distribution of EHSA classesEHSA choropleth map\n\n\nLastly, we perform Emerging Hot Spot Analysis (EHSA) using the emerging_hotspot_analysis() function from the sfdep package. For the x argument, we pass the spacetime object (e.g., GDPPC_st), and for .var, we specify the variable of interest (e.g., GDPPC). The k argument, which sets the number of time lags, defaults to 1. In the nsim argument, we define the number of simulations to run; setting it to 99, for example, results in 100 simulations.\n\nehsa &lt;- emerging_hotspot_analysis(\n  x = GDPPC_st,\n  .var = \"GDPPC\",\n  k = 1,\n  nsim = 99\n)\n\n\n\nWe can visualise the distribution of EHSA classes using a bar chart.\nNote that this is a basic plot and does not account for statistical significance. If significance were considered, non-statistically significant areas would fall into the “no pattern detected” category.\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\n\nBefore plotting the geographic distribution of EHSA classes, we need to join the ehsa dataframe with the hunan sf dataframe.\nNext, we use the tmap functions to create a categorical choropleth map.\n\nhunan_ehsa &lt;- hunan %&gt;%\n  left_join(ehsa, by = join_by(County == location))\n\n\nehsa_sig &lt;- hunan_ehsa %&gt;%\n  filter(p_value &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(ehsa_sig) +\n  tm_fill(\"classification\") +\n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Ex 1",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse, ggstatsplot)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-dataset",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-dataset",
    "title": "In-class Ex 1",
    "section": "3.1 Importing dataset",
    "text": "3.1 Importing dataset\nIn this section, we will import the Master Plan Planning Subzone Data 2019 (MPSZ19) both in kml and shapefile format. As part of EDA, we should compare the two files to understand the data and identify any issues with the data before proceeding further.\n\nMPSZ19 KML file formatMPSZ19 shapefile format\n\n\nWe see that this dataset is not ideal for analysis as it only provides the simple feature geometry, but does not provide any useful details of each simple feature.\n\nmpsz19_kml &lt;- st_read(\"data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex01/data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nhead(mpsz19_kml)\n\nSimple feature collection with 6 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XYZ\nBounding box:  xmin: 103.8013 ymin: 1.274155 xmax: 103.8532 ymax: 1.286517\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n   Name\n1 kml_1\n2 kml_2\n3 kml_3\n4 kml_4\n5 kml_5\n6 kml_6\nescription\n1     &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;12&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;DEPOT ROAD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;BMSZ12&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;N&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;BUKIT MERAH&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;BM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;C22DED671DE2A940&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n2     &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;2&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;BUKIT MERAH&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;BMSZ02&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;N&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;BUKIT MERAH&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;BM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;085EF219A5A1AEAD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n3            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;CHINATOWN&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;OTSZ03&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;Y&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;OUTRAM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;OT&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;EF2B9A91AF49E025&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n4       &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;PHILLIP&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;DTSZ04&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;Y&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;DOWNTOWN CORE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;DT&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;615D4EDDEF809F8E&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n5 &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;5&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;RAFFLES PLACE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;DTSZ05&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;Y&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;DOWNTOWN CORE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;DT&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;72107B11807074F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n6         &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;CHINA SQUARE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;OTSZ04&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;Y&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;OUTRAM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;OT&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;B609DF5587626C8F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n                        geometry\n1 MULTIPOLYGON Z (((103.8145 ...\n2 MULTIPOLYGON Z (((103.8221 ...\n3 MULTIPOLYGON Z (((103.8438 ...\n4 MULTIPOLYGON Z (((103.8496 ...\n5 MULTIPOLYGON Z (((103.8525 ...\n6 MULTIPOLYGON Z (((103.8486 ...\n\n\n\n\nUnlike the kml file, the shapefile dataset provides the simple feature geometry, as well as the details of each simple feature.\n\nmpsz19_shp &lt;- st_read(dsn = \"data/geospatial\", \n                  layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nhead(mpsz14_shp)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6 29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297..."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#projection-transformation",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#projection-transformation",
    "title": "In-class Ex 1",
    "section": "3.2 Projection Transformation",
    "text": "3.2 Projection Transformation\nThe CRS of mpsz19 is in WGS 84, which is a Geographical Coordinate System, useful in GPS to pinpoint a specific location, and the unit of measurement is in decimal degree. However, it is not suitable for geospatial analysis as the distance measurement of decimal degree is distorted. We will need to transform it from geographic coordinate system to projected coordinate system.\nIn this code, we could build a pipe to import the data and transform it to projected coordinate system.\n\nmpsz19_shp &lt;- st_read(dsn = \"data/geospatial\", \n                  layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class Ex 2",
    "section": "",
    "text": "In this in-class exercise, we will address common challenges encountered when working with geospatial data or using R’s geospatial packages.\n\npacman::p_load(sf, spatstat, raster, maptools, tmap, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#retired-maptools",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#retired-maptools",
    "title": "In-class Ex 2",
    "section": "2.1 Retired maptools",
    "text": "2.1 Retired maptools\nThe as.SpatialGridDataFrame.im() function from the maptools package is used to convert KDE outputs into gridded kernel density objects. However, maptools has been retired, and its binary has been removed from CRAN, making it unavailable for installation through conventional methods. You can still download it from Posit Public Package Manager snapshots using the code chunk below.\n\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\nHere’s the gridded kernel density object using the as.SpatialGridDataFrame.im() function from the maptools package\n\ngridded_kde_childcareSG_bw &lt;- maptools::as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#spatstat.geom-alternative-to-as.spatialgriddataframe.im",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#spatstat.geom-alternative-to-as.spatialgriddataframe.im",
    "title": "In-class Ex 2",
    "section": "2.2 spatstat.geom alternative to as.SpatialGridDataFrame.im()",
    "text": "2.2 spatstat.geom alternative to as.SpatialGridDataFrame.im()\nIf you prefer not to use the retired maptools package, you can use spatstat.geom as an alternative to convert KDE outputs into gridded kernel density objects. The output will be the same.\n\ngridded_kde_childcareSG_bw_spatstat &lt;- as(kde_childcareSG.bw, \"SpatialGridDataFrame\")\nspplot(gridded_kde_childcareSG_bw_spatstat)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Ex 4",
    "section": "",
    "text": "In this in-class exercise, we will use R’s GWmodel package for spatial weight analysis. One key feature we will explore is the geographically weighted summary statistics.\n\npacman::p_load(sf, ggstatsplot, tmap, tidyverse, knitr, GWmodel)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#conventional-statistical-solution",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#conventional-statistical-solution",
    "title": "In-class Ex 4",
    "section": "5.1 Conventional Statistical Solution",
    "text": "5.1 Conventional Statistical Solution\nThe conventional approach to correlation involves calculating the relationship between two variables without considering geographic factors. While useful, this method is limited because it doesn’t reveal how the correlation varies across a region or how it may be influenced by neighboring areas.\n\nggscatterstats(\n  data = hunan2012, \n  x = Agri, \n  y = GDPPC,\n  xlab = \"Gross Agriculture Output\", ## label for the x-axis\n  ylab = \"GDP per capita\", \n  label.var = County, \n  label.expression = Agri &gt; 10000 & GDPPC &gt; 50000, \n  point.label.args = list(alpha = 0.7, size = 4, color = \"grey50\"),\n  xfill = \"#CC79A7\", \n  yfill = \"#009E73\", \n  title = \"Relationship between GDP PC and Gross Agriculture Output\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#geospatial-analytical-solution",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#geospatial-analytical-solution",
    "title": "In-class Ex 4",
    "section": "5.2 Geospatial Analytical Solution",
    "text": "5.2 Geospatial Analytical Solution\nA geospatial approach, such as geographically weighted correlation (GWC), adds deeper insights by accounting for spatial variability. To perform GWC, we first determine the appropriate bandwidth, then compute the geographically weighted correlation, and finally append the results to the hunan_sf data frame.\n\n# Step 1: Determining the bandwidth\nbw &lt;- bw.gwr(GDPPC ~ GIO, \n             data = hunan_sp, \n             approach = \"AICc\", \n             adaptive = TRUE)\n\nAdaptive bandwidth (number of nearest neighbours): 62 AICc value: 1870.235 \nAdaptive bandwidth (number of nearest neighbours): 46 AICc value: 1870.852 \nAdaptive bandwidth (number of nearest neighbours): 72 AICc value: 1869.744 \nAdaptive bandwidth (number of nearest neighbours): 78 AICc value: 1869.713 \nAdaptive bandwidth (number of nearest neighbours): 82 AICc value: 1869.604 \nAdaptive bandwidth (number of nearest neighbours): 84 AICc value: 1869.537 \nAdaptive bandwidth (number of nearest neighbours): 86 AICc value: 1869.647 \nAdaptive bandwidth (number of nearest neighbours): 83 AICc value: 1869.567 \nAdaptive bandwidth (number of nearest neighbours): 84 AICc value: 1869.537 \n\n\n\n# Step 2: Computing the geographical weighted correlation\ngwstats &lt;- gwss(data = hunan_sp,\n               vars = c(\"GDPPC\", \"GIO\"),\n               bw = bw,\n               kernel = \"bisquare\",\n               adaptive = TRUE,\n               longlat = TRUE)\n\n\n# Step 3: Extracting SDF data table from gwss output, and appending the results\ngwstat_df &lt;- as.data.frame(gwstats$SDF) %&gt;%\n  select(c(12,13)) %&gt;%\n  rename(gwCorr = Corr_GDPPC.GIO,\n         gwSpearman = Spearman_rho_GDPPC.GIO)\n\nhunan_Corr &lt;- cbind(hunan_sf, gwstat_df)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-local-correlation-using-spearman-rho",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-local-correlation-using-spearman-rho",
    "title": "In-class Ex 4",
    "section": "5.3 Visualising Local Correlation using Spearman Rho",
    "text": "5.3 Visualising Local Correlation using Spearman Rho\nWe use Spearman’s Rho because it is a non-parametric statistic, making it robust for handling non-linear relationships and ranked data.\n\ntm_shape(hunan_Corr) +\n  tm_fill(\"gwSpearman\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Local Spearman Rho\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.text.size = 0.6,\n            legend.height = 0.6, \n            legend.width = 0.6,\n            frame = TRUE)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Ex 3",
    "section": "",
    "text": "Overview\nIn this in-class exercise, we will highlight common mistakes and blind spots encountered when working with geospatial data or utilizing R’s geospatial packages.\n\npacman::p_load(sf, spNetwork, tmap, tidyverse)\n\n\n\n1. Importing & Transforming Data\nFirst, let’s import two geospatial datasets that we will be working with:\n\nPunggol_St: A line feature dataset representing the road network within the Punggol Planning Area.\nPunggol_CC: A point feature dataset representing the locations of childcare centers within the Punggol Planning Area.\n\n\n1.1 Punggol Road Network1.2 Punggol Childcare Centers (3D coordinates)1.3 Punggol Childcare Centers (transformed to 2D coordinates)\n\n\nThe road network is provided in ESRI shapefile format. We use st_read() to load the file, without the need to specify the shapefile extension.\n\nnetwork &lt;- st_read(dsn=\"data/geospatial\", \n                   layer=\"Punggol_St\")\n\nReading layer `Punggol_St' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\nUsing st_read() to load the childcare shapefile returned a message indicating that the coordinate dimension is XYZ, meaning it is in 3D. However, for our analysis with the spNetwork package, the coordinates must be 2-dimensional; otherwise, the analysis will not work.\n\nchildcare &lt;- st_read(dsn=\"data/geospatial\", layer=\"Punggol_CC\")\n\nReading layer `Punggol_CC' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\nThe 3D point coordinates can be converted to 2-dimensional by using the st_zm() function, which removes the z-coordinates.\n\nchildcare &lt;- st_read(dsn=\"data/geospatial\", layer=\"Punggol_CC\") %&gt;%\n  st_zm(drop = TRUE, what = \"ZM\")\n\nReading layer `Punggol_CC' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\n\n\nchildcare\n\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n      Name                  geometry\n1   kml_10 POINT (36173.81 42550.33)\n2   kml_99 POINT (36479.56 42405.21)\n3  kml_100 POINT (36618.72 41989.13)\n4  kml_101 POINT (36285.37 42261.42)\n5  kml_122  POINT (35414.54 42625.1)\n6  kml_161 POINT (36545.16 42580.09)\n7  kml_172 POINT (35289.44 44083.57)\n8  kml_188 POINT (36520.56 42844.74)\n9  kml_205  POINT (36924.01 41503.6)\n10 kml_222 POINT (37141.76 42326.36)\n\n\n\n\n\n\n\n2. GeoVisualisation\n\nNote #1 on plot()Note #2 on plot()Note #3 on tmapNote #4 on tmap\n\n\nAlways plot the road network first, then the points. Use add = TRUE to overlay the points on the road network.\n\nplot(st_geometry(network))\nplot(childcare, add=TRUE, col='red', pch = 19)\n\n\n\n\n\n\nIf you use plot(network) instead of plot(st_geometry(network)), it will attempt to plot every column in the network sf dataset, which is not useful. Therefore, the correct approach is to use plot(st_geometry(network)).\nIf the color for the point sf dataset has been specified (e.g. ‘red’), there’s no need to use plot(st_geometry(childcare)), as the color is already applied to each column in the childcare sf dataset.\n\nplot(network)\nplot(childcare, add=TRUE, col='red', pch = 19)\n\n\n\n\n\n\n\ntmap_mode('plot') generates a static map.\nFor each layer, you need to specify the map layer using tm_shape().\nUse tm_symbols() or tm_markers() when customizing point images with PNG files.\nFor standard point displays, use tm_square(), tm_bubbles(), or tm_dots().\n\n\ntmap_mode('plot')\ntm_shape(childcare) + \n  tm_dots(col = 'red') + \n  tm_shape(network) +\n  tm_lines()\n\n\n\n\n\n\ntmap_mode('view') generates an interactive map. Remember to switch back to static mode by ending with tmap_mode('plot').\n\ntmap_mode('view')\ntm_shape(childcare) + \n  tm_dots() + \n  tm_shape(network) +\n  tm_lines()\n\n\n\n\n\ntmap_mode('plot')\n\n\n\n\n\n\n3. Network Kernel Density Estimation (NKDE) Analysis\n\nNote #1 on lixelsNote #2 on lixelsNote #3 on NKDE\n\n\nA lixel length of 700m was chosen based on research regarding walkable distances in the Singaporean environment. The minimum distance was set at 350m, which is arbitrarily half of the 700m.\nThe road network contains 2,642 line geometries. With a lixel length of 700m and a minimum distance of 350m, 2,645 lixels are generated.\n\nlixels &lt;- lixelize_lines(network, \n                         lx_length = 700, \n                         mindist = 350)\nnrow(lixels)\n\n[1] 2645\n\n\nWhen the minimum distance is reduced to 50m, 2,648 lixels are generated.\n\nlixels &lt;- lixelize_lines(network, \n                         lx_length = 700, \n                         mindist = 50)\nnrow(lixels)\n\n[1] 2648\n\n\nWith a lixel length of 1000m and a minimum distance of 150m, 2,645 lixels are generated\n\nlixels &lt;- lixelize_lines(network, \n                         lx_length = 1000, \n                         mindist = 150)\nnrow(lixels)\n\n[1] 2645\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThe lixel length should be meaningful and reflective of real-world phenomena (e.g., 700m for walkable distance). It’s also important that the lixel length is not shorter than the distance between data points. Best practice: Use the nearest neighbor method and test the 10th, 20th, or 25th percentile of the distance between points to determine the optimal lixel length.\n\n\n\n\nYou may plot your lixels using the code chunk below:\n\nsamples &lt;- lines_center(lixels) \n\ntmap_mode('view')\ntm_shape(lixels) + \n  tm_lines() + \n  tm_shape(samples) +\n  tm_dots(size = 0.01)\n\n\n\n\n\ntmap_mode('plot')\n\n\n\nThere are three methods for computing NKDE: method = \"simple\" for the simple method, method = \"discontinuous\" for the discontinuous method, and method = \"continuous\" for the continuous method.\nThe continuous method works best for grid networks, but it is very time-consuming. For networks consisting of parallel straight highways, any of the methods will yield similar results.\nIn the code chunk below, the simple method is used.\n\nsimple_densities &lt;- nkde(lines = network, events = childcare,\n                  w = rep(1, nrow(childcare)), samples = samples,\n                  kernel_name = \"quartic\", bw = 300, \n                  div= \"bw\", method = \"simple\", \n                  digits = 1, tol = 1,\n                  grid_shape = c(1,1), max_depth = 8,\n                  agg = 5, sparse = TRUE,\n                  verbose = FALSE)\n\nThe densities represent the number of childcare centers per meter, but it is more meaningful to express them as centers per kilometer. Since the network consists of line geometries, you can convert the density by multiplying by 1,000. (Note: for planar KDE, where densities are measured per square meter, the conversion would require multiplying by 1,000 * 1,000).\n\nsamples$simple_density &lt;- simple_densities*1000\nlixels$simple_density &lt;- simple_densities*1000\n\ntmap_mode('view')\ntm_shape(lixels) +\n  tm_lines(col=\"simple_density\") +\n  tm_shape(childcare) +\n  tm_dots()\n\n\n\n\n\ntmap_mode('plot')\n\n\n\n\n\n\n4. Network-constrained G- and K-function analysis\nA test for complete spatial randomness (CSR) can be conducted using network-constrained G- and K-functions, both of which can be implemented with spNetwork’s kfunctions().\n\nNote #1 on simulationsNote #2 on K-functionNote #3 on G-function\n\n\nNote that the simulation index starts at 0, so to perform 1,000 Monte Carlo simulations, you should set nsim to 999.\n\nset.seed(2024)\nkfun_childcare &lt;- kfunctions(network, \n                             childcare,\n                             start = 0, \n                             end = 1000, \n                             step = 50, \n                             width = 50, \n                             nsim = 999, \n                             resolution = 50,\n                             verbose = FALSE, \n                             conf_int = 0.05)\n\n\n\nThe output of kfunctions() includes both the K-function and G-function plots. Use the code below to generate the K-function plot.\nHere’s how to interpret the plot: The blue line represents the empirical network K-function of the childcare centers in Punggol, while the gray area shows the results of 1,000 simulations within the 2.5% - 97.5% confidence interval. Since the blue line falls below the lower boundary of the envelope between the 200-400m distance range, it indicates a regular pattern of childcare center locations along the Punggol road network. The childcare centers are regularly spaced between 200-400m.\n\nkfun_childcare$plotk\n\n\n\n\n\n\nThe output of kfunctions() includes both the K-function and G-function plots. Use the code below to generate the G-function plot.\n\nkfun_childcare$plotg"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Ex 5",
    "section": "",
    "text": "In this in-class exercise, we will use R’s sfdep package for global and local measures of spatial association analysis.\n\npacman::p_load(sf, sfdep, tmap, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#deriving-queens-contiguity-weights",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#deriving-queens-contiguity-weights",
    "title": "In-class Ex 5",
    "section": "Deriving Queen’s contiguity weights",
    "text": "Deriving Queen’s contiguity weights\n\nwm_q &lt;- hunan_gdppc %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, style = \"W\"),\n         .before = 1) # insert these two columns before column 1\n\nglimpse(wm_q)\n\nRows: 88\nColumns: 9\n$ nb        &lt;nb&gt; &lt;2, 3, 4, 57, 85&gt;, &lt;1, 57, 58, 78, 85&gt;, &lt;1, 4, 5, 85&gt;, &lt;1, 3,…\n$ wt        &lt;list&gt; &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0.25…\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-global-morans-i",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-global-morans-i",
    "title": "In-class Ex 5",
    "section": "Computing Global Moran’s I",
    "text": "Computing Global Moran’s I\n\nmoranI &lt;- global_moran(wm_q$GDPPC, wm_q$nb, wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#performing-global-morans-i-test",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#performing-global-morans-i-test",
    "title": "In-class Ex 5",
    "section": "Performing Global Moran’s I Test",
    "text": "Performing Global Moran’s I Test\nFrom the results, Moran’s I is 0.30, which is greater than 0, indicating positive spatial autocorrelation (although it is a relative weak autocorrelation). Since the p-value is less than .001, the result is statistically significant. This means that the observations are not randomly distributed but are spatially clustered, with similar values tending to be near each other.\n\nglobal_moran_test(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#performing-global-morans-i-permutation-test",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#performing-global-morans-i-permutation-test",
    "title": "In-class Ex 5",
    "section": "Performing Global Moran’s I Permutation Test",
    "text": "Performing Global Moran’s I Permutation Test\n\nset.seed(1234)\nglobal_moran_perm(wm_q$GDPPC, wm_q$nb, wm_q$wt, nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-local-morans-i",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-local-morans-i",
    "title": "In-class Ex 5",
    "section": "Computing Local Moran’s I",
    "text": "Computing Local Moran’s I\nWe compute local Moran’s I of GDPPC at county level by using local_moran() of sfdep package.\n\nii: The local Moran’s I statistic.\neii: The expected value of the local Moran’s I under the randomization hypothesis.\nvar_ii: The variance of the local Moran’s I under the randomization hypothesis.\nz_ii: The standardized value (z-score) of the local Moran’s I.\np_ii_sim: The p-value of the local Moran’s I, indicating the statistical significance.\np_folded_sim: The p-value based on pysal.\nmean / median / pysal: quandrant labels. You can use mean if your variable is normally distributed, otherwise use median.\n\n\nlisa &lt;- wm_q %&gt;%\n  mutate(local_moran = local_moran(GDPPC, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\nglimpse(lisa)\n\nRows: 88\nColumns: 21\n$ ii           &lt;dbl&gt; -1.468468e-03, 2.587817e-02, -1.198765e-02, 1.022468e-03,…\n$ eii          &lt;dbl&gt; -2.286452e-04, -8.339379e-03, 1.043839e-02, -3.476473e-04…\n$ var_ii       &lt;dbl&gt; 5.014443e-04, 1.043494e-02, 1.138011e-01, 4.000506e-06, 1…\n$ z_ii         &lt;dbl&gt; -0.05536664, 0.33496852, -0.06647821, 0.68501414, 0.30263…\n$ p_ii         &lt;dbl&gt; 9.558464e-01, 7.376488e-01, 9.469971e-01, 4.933350e-01, 7…\n$ p_ii_sim     &lt;dbl&gt; 0.82, 0.84, 0.88, 0.46, 0.62, 0.74, 0.08, 0.14, 0.02, 0.1…\n$ p_folded_sim &lt;dbl&gt; 0.41, 0.42, 0.44, 0.23, 0.31, 0.37, 0.04, 0.07, 0.01, 0.0…\n$ skewness     &lt;dbl&gt; -0.9009228, -0.7655438, 1.2688241, 0.9180172, 1.0918201, …\n$ kurtosis     &lt;dbl&gt; 0.76230509, 0.72077974, 2.55764113, -0.06014856, 1.076715…\n$ mean         &lt;fct&gt; Low-High, Low-Low, High-Low, High-High, High-High, High-L…\n$ median       &lt;fct&gt; High-High, High-High, High-High, High-High, High-High, Hi…\n$ pysal        &lt;fct&gt; Low-High, Low-Low, High-Low, High-High, High-High, High-L…\n$ nb           &lt;nb&gt; &lt;2, 3, 4, 57, 85&gt;, &lt;1, 57, 58, 78, 85&gt;, &lt;1, 4, 5, 85&gt;, &lt;1,…\n$ wt           &lt;list&gt; &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0…\n$ NAME_2       &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"C…\n$ ID_3         &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2…\n$ NAME_3       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", …\n$ ENGTYPE_3    &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"C…\n$ County       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", …\n$ GDPPC        &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7…\n$ geometry     &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.228…\n\n\n\ntmap_mode('plot')\ntm_shape(lisa) +\n  tm_fill(\"ii\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I of GDPPC\",\n            main.title.size = 1)\n\n\n\n\n\ntmap_mode('plot')\ntm_shape(lisa) +\n  tm_fill(\"p_ii\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Local Moran's I\",\n            main.title.size = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualisation-local-morans-i-and-p-value",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualisation-local-morans-i-and-p-value",
    "title": "In-class Ex 5",
    "section": "Visualisation Local Moran’s I and p-value",
    "text": "Visualisation Local Moran’s I and p-value\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I of GDPPC\",\n            main.title.size = 1)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"n.s\")) +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Local Moran's I\",\n            main.title.size = 1)\n\ntmap_arrange(map1, map2, ncol=2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-lisa-map",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-lisa-map",
    "title": "In-class Ex 5",
    "section": "Visualising LISA Map",
    "text": "Visualising LISA Map\n\nlisa_sig &lt;- lisa %&gt;%\n  filter(p_ii &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"mean\") +\n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-local-gi-statistics",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-local-gi-statistics",
    "title": "In-class Ex 5",
    "section": "Computing Local Gi* Statistics",
    "text": "Computing Local Gi* Statistics\n\nwm_idw &lt;- hunan_gdppc %&gt;%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wts = st_inverse_distance(nb, geometry, scale = 1, alpha =1),\n    .before = 1)\nglimpse(wm_idw)\n\nRows: 88\nColumns: 9\n$ nb        &lt;nb&gt; &lt;1, 2, 3, 4, 57, 85&gt;, &lt;1, 2, 57, 58, 78, 85&gt;, &lt;1, 3, 4, 5, 85…\n$ wts       &lt;list&gt; &lt;0.00000000, 0.01526149, 0.03515537, 0.02176677, 0.02836978…\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-local-gi-statistics-1",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-local-gi-statistics-1",
    "title": "In-class Ex 5",
    "section": "Computing Local Gi* Statistics",
    "text": "Computing Local Gi* Statistics\n\nHCSA &lt;- wm_idw %&gt;%\n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wts, nsim = 99),\n    .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 88 features and 18 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 19\n    gi_star cluster     e_gi  var_gi std_dev p_value p_sim p_folded_sim skewness\n      &lt;dbl&gt; &lt;fct&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.261   Low     0.00132  1.82e-7  0.0839 9.33e-1  0.7          0.35    1.20 \n 2 -0.276   Low     0.00102  7.98e-8 -0.266  7.90e-1  0.92         0.46    0.717\n 3  0.00573 High    0.00148  2.25e-7  0.0920 9.27e-1  0.72         0.36    1.54 \n 4  0.528   High    0.00147  2.72e-7  0.506  6.13e-1  0.38         0.19    1.55 \n 5  0.466   High    0.00140  2.76e-7  0.337  7.36e-1  0.48         0.24    1.46 \n 6 -0.445   High    0.000928 8.31e-8 -0.321  7.48e-1  0.9          0.45    1.21 \n 7  2.99    High    0.000676 4.28e-8  3.17   1.54e-3  0.04         0.02    1.29 \n 8  2.04    High    0.00148  1.25e-7  2.11   3.49e-2  0.1          0.05    1.32 \n 9  4.42    High    0.00132  1.32e-7  3.93   8.49e-5  0.02         0.01    1.27 \n10  1.21    Low     0.00180  1.46e-7  1.24   2.15e-1  0.28         0.14    0.521\n# ℹ 78 more rows\n# ℹ 10 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, NAME_2 &lt;chr&gt;,\n#   ID_3 &lt;int&gt;, NAME_3 &lt;chr&gt;, ENGTYPE_3 &lt;chr&gt;, County &lt;chr&gt;, GDPPC &lt;dbl&gt;,\n#   geometry &lt;POLYGON [°]&gt;"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-gi",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-gi",
    "title": "In-class Ex 5",
    "section": "Visualising Gi*",
    "text": "Visualising Gi*\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-p-value-of-hcsa",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-p-value-of-hcsa",
    "title": "In-class Ex 5",
    "section": "Visualising p-value of HCSA",
    "text": "Visualising p-value of HCSA\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-hot-spot-and-cold-spot-areas",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-hot-spot-and-cold-spot-areas",
    "title": "In-class Ex 5",
    "section": "Visualising Hot Spot and Cold Spot Areas",
    "text": "Visualising Hot Spot and Cold Spot Areas\n\nHCSA_sig &lt;- HCSA %&gt;%\n  filter(p_sim &lt; 0.05)\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"cluster\") +\n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "title": "In-class Ex 7",
    "section": "",
    "text": "In this in-class exercise, we build a hedonic pricing model for condominiums using Geographically Weighted Regression (GWR) to account for spatial non-stationarity, where relationships between variables differ across geographic locations. This exercise builds on hands-on exercise 7, with additional emphasis on other R packages relevant to GWR\n\npacman::p_load(olsrr, ggstatsplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, performance, see, sfdep)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#correlation-analysis",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#correlation-analysis",
    "title": "In-class Ex 7",
    "section": "3.1 Correlation Analysis",
    "text": "3.1 Correlation Analysis\nTo prevent multicollinearity, it is essential to examine relationships between variables to identify those with high correlations. While immediate removal isn’t necessary, these variables should be closely monitored during the multicollinearity test later.\nAs an alternative to the corrplot package, the ggcorrmat() function from the ggstatsplot package can also be used for correlation analysis.\n\nggcorrmat(condo_resale[, 5:23])"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#initial-hedonic-pricing-model-using-mlr",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#initial-hedonic-pricing-model-using-mlr",
    "title": "In-class Ex 7",
    "section": "3.2 Initial Hedonic Pricing Model Using MLR",
    "text": "3.2 Initial Hedonic Pricing Model Using MLR\nWe begin by building an initial MLR model with all variables deemed relevant for predicting the selling price. We will assess the model in the next step.\n\ncondo_mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD + \n                  LEASEHOLD_99YR, \n                data=condo_resale_sf)\nsummary(condo_mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD + \n    LEASEHOLD_99YR, data = condo_resale_sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3471036  -286903   -22426   239412 12254549 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           543071.4   136210.9   3.987 7.03e-05 ***\nAREA_SQM               12688.7      370.1  34.283  &lt; 2e-16 ***\nAGE                   -24566.0     2766.0  -8.881  &lt; 2e-16 ***\nPROX_CBD              -78122.0     6791.4 -11.503  &lt; 2e-16 ***\nPROX_CHILDCARE       -333219.0   111020.3  -3.001 0.002734 ** \nPROX_ELDERLYCARE      170950.0    42110.8   4.060 5.19e-05 ***\nPROX_URA_GROWTH_AREA   38507.6    12523.7   3.075 0.002147 ** \nPROX_HAWKER_MARKET     23801.2    29299.9   0.812 0.416739    \nPROX_KINDERGARTEN     144098.0    82738.7   1.742 0.081795 .  \nPROX_MRT             -322775.9    58528.1  -5.515 4.14e-08 ***\nPROX_PARK             564487.9    66563.0   8.481  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      186170.5    65515.2   2.842 0.004553 ** \nPROX_TOP_PRIMARY_SCH    -477.1    20598.0  -0.023 0.981525    \nPROX_SHOPPING_MALL   -207721.5    42855.5  -4.847 1.39e-06 ***\nPROX_SUPERMARKET      -48074.7    77145.3  -0.623 0.533273    \nPROX_BUS_STOP         675755.0   138552.0   4.877 1.20e-06 ***\nNO_Of_UNITS             -216.2       90.3  -2.394 0.016797 *  \nFAMILY_FRIENDLY       142128.3    47055.1   3.020 0.002569 ** \nFREEHOLD              300646.5    77296.5   3.890 0.000105 ***\nLEASEHOLD_99YR        -77137.4    77570.9  -0.994 0.320192    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1416 degrees of freedom\nMultiple R-squared:  0.652, Adjusted R-squared:  0.6474 \nF-statistic: 139.6 on 19 and 1416 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#model-assessment-using-olsrr",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#model-assessment-using-olsrr",
    "title": "In-class Ex 7",
    "section": "3.3 Model Assessment (using olsrr)",
    "text": "3.3 Model Assessment (using olsrr)\nIn model assessment, we evaluate the model’s p-value and R² to determine overall significance and explanatory power. Next, we assess individual variables to identify any that are non-significant, as these should be removed to enhance the model’s robustness.\nThe olsrr package is used to generate a comprehensive, tidy report for assessing the MLR model. The summary report indicates that the model is statistically significant (p &lt; 0.05) and explains 64.7% of the variance in the dependent variable. However, since some independent variables are not statistically significant, they should be excluded from the final model.\n\nols_regress(condo_mlr)\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     750537.537 \nR-Squared                    0.652       MSE                571262902261.220 \nAdj. R-Squared               0.647       Coef. Var                    43.160 \nPred R-Squared               0.637       AIC                       42971.173 \nMAE                     412117.987       SBC                       43081.835 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.515738e+15          19        7.977571e+13    139.648    0.0000 \nResidual      8.089083e+14        1416    571262902261.220                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     543071.420    136210.918                   3.987    0.000     275874.535     810268.305 \n            AREA_SQM      12688.669       370.119        0.579     34.283    0.000      11962.627      13414.710 \n                 AGE     -24566.001      2766.041       -0.166     -8.881    0.000     -29991.980     -19140.022 \n            PROX_CBD     -78121.985      6791.377       -0.267    -11.503    0.000     -91444.227     -64799.744 \n      PROX_CHILDCARE    -333219.036    111020.303       -0.087     -3.001    0.003    -551000.984    -115437.089 \n    PROX_ELDERLYCARE     170949.961     42110.748        0.083      4.060    0.000      88343.803     253556.120 \nPROX_URA_GROWTH_AREA      38507.622     12523.661        0.059      3.075    0.002      13940.700      63074.545 \n  PROX_HAWKER_MARKET      23801.197     29299.923        0.019      0.812    0.417     -33674.725      81277.120 \n   PROX_KINDERGARTEN     144097.972     82738.669        0.030      1.742    0.082     -18205.570     306401.514 \n            PROX_MRT    -322775.874     58528.079       -0.123     -5.515    0.000    -437586.937    -207964.811 \n           PROX_PARK     564487.876     66563.011        0.148      8.481    0.000     433915.162     695060.590 \n    PROX_PRIMARY_SCH     186170.524     65515.193        0.072      2.842    0.005      57653.253     314687.795 \nPROX_TOP_PRIMARY_SCH       -477.073     20597.972       -0.001     -0.023    0.982     -40882.894      39928.747 \n  PROX_SHOPPING_MALL    -207721.520     42855.500       -0.109     -4.847    0.000    -291788.613    -123654.427 \n    PROX_SUPERMARKET     -48074.679     77145.257       -0.012     -0.623    0.533    -199405.956     103256.599 \n       PROX_BUS_STOP     675755.044    138551.991        0.133      4.877    0.000     403965.817     947544.272 \n         NO_Of_UNITS       -216.180        90.302       -0.046     -2.394    0.017       -393.320        -39.040 \n     FAMILY_FRIENDLY     142128.272     47055.082        0.056      3.020    0.003      49823.107     234433.438 \n            FREEHOLD     300646.543     77296.529        0.117      3.890    0.000     149018.525     452274.561 \n      LEASEHOLD_99YR     -77137.375     77570.869       -0.030     -0.994    0.320    -229303.551      75028.801 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#checking-multicollinearity",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#checking-multicollinearity",
    "title": "In-class Ex 7",
    "section": "3.4 Checking Multicollinearity",
    "text": "3.4 Checking Multicollinearity\nWe use the following code to compute the Variance Inflation Factor (VIF) to help us identify multicollinearity. A VIF between 5 and 10 indicates moderate multicollinearity and requires monitoring, while a VIF above 10 suggests severe multicollinearity, warranting variable elimination.\nAs all VIF values are below 10, no variables need to be removed.\n\nols_vif_tol(condo_mlr)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8601326 1.162611\n2                   AGE 0.7011585 1.426211\n3              PROX_CBD 0.4575471 2.185567\n4        PROX_CHILDCARE 0.2898233 3.450378\n5      PROX_ELDERLYCARE 0.5922238 1.688551\n6  PROX_URA_GROWTH_AREA 0.6614081 1.511926\n7    PROX_HAWKER_MARKET 0.4373874 2.286303\n8     PROX_KINDERGARTEN 0.8356793 1.196631\n9              PROX_MRT 0.4949877 2.020252\n10            PROX_PARK 0.8015728 1.247547\n11     PROX_PRIMARY_SCH 0.3823248 2.615577\n12 PROX_TOP_PRIMARY_SCH 0.4878620 2.049760\n13   PROX_SHOPPING_MALL 0.4903052 2.039546\n14     PROX_SUPERMARKET 0.6142127 1.628100\n15        PROX_BUS_STOP 0.3311024 3.020213\n16          NO_Of_UNITS 0.6543336 1.528272\n17      FAMILY_FRIENDLY 0.7191719 1.390488\n18             FREEHOLD 0.2728521 3.664990\n19       LEASEHOLD_99YR 0.2645988 3.779307"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#variable-selection",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#variable-selection",
    "title": "In-class Ex 7",
    "section": "3.5 Variable Selection",
    "text": "3.5 Variable Selection\nWe use the ols_step_forward_p() function to perform stepwise forward selection. Although there are other criteria that could guide the selection process, we prioritise the p-value to ensure that all variables included in the final model are statistically significant.\nWe can visualise the stepwise forward selection process using the plot() function, which displays the incremental changes in Adjusted R², AIC, and RMSE throughout the selection process.\n\ncondo_fw_mlr &lt;- ols_step_forward_p(condo_mlr,\n                                   p_val = 0.05,\n                                   details = FALSE)\n\n\nplot(condo_fw_mlr)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-model-parameters",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-model-parameters",
    "title": "In-class Ex 7",
    "section": "3.6 Visualising Model Parameters",
    "text": "3.6 Visualising Model Parameters\nThe following method allows us to visualise all the model parameters.\n\nggcoefstats(condo_mlr, sort = \"ascending\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#testing-for-non-linearity",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#testing-for-non-linearity",
    "title": "In-class Ex 7",
    "section": "3.7 Testing for Non-linearity",
    "text": "3.7 Testing for Non-linearity\nIt is important to test the assumption of linearity and additivity in the relationship between the dependent and independent variables. The figure shows that most data points are scattered around the zero line, indicating that the relationships between the dependent and independent variables are linear.\n\nols_plot_resid_fit(condo_fw_mlr$model)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#testing-normality-of-residuals",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#testing-normality-of-residuals",
    "title": "In-class Ex 7",
    "section": "3.8 Testing Normality of Residuals",
    "text": "3.8 Testing Normality of Residuals\nWe use ols_plot_resid_hist() and ols_test_normality() to check the normality of the residuals.\n\nols_plot_resid_hist(condo_fw_mlr$model)\n\n\n\n\n\nols_test_normality(condo_fw_mlr$model)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#testing-for-spatial-autocorrelation",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#testing-for-spatial-autocorrelation",
    "title": "In-class Ex 7",
    "section": "3.9 Testing for Spatial Autocorrelation",
    "text": "3.9 Testing for Spatial Autocorrelation\nThe hedonic model incorporates geographically referenced attributes, making it essential to visualize the residuals. To test for spatial autocorrelation, we must convert the condo_resale.sf dataset from an sf object to a SpatialPointsDataFrame.\nFirst, we export the residuals from the hedonic pricing model and save them as a data frame.\n\nmlr_output &lt;- as.data.frame(condo_fw_mlr$model$residuals) %&gt;%\n  rename(`FW_MLR_RES` = `condo_fw_mlr$model$residuals`)\n\nNext, we will join the newly created dataframe with condo_resale_sf object.\n\ncondo_resale_sf &lt;- cbind(condo_resale_sf,\n                         mlr_output$FW_MLR_RES) %&gt;%\n  rename(`MLR_RES` = `mlr_output.FW_MLR_RES`)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#map-plot-of-residuals",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#map-plot-of-residuals",
    "title": "In-class Ex 7",
    "section": "3.10 Map Plot of Residuals",
    "text": "3.10 Map Plot of Residuals\nWe plot the residuals on a map to identify areas of overestimation and underestimation. Visible clusters of over- or under-estimated prices may indicate the presence of spatial autocorrelation.\n\ntmap_mode(\"view\")\n#tmap_options(check.and.fix = TRUE) -- add this code here to fix any layers with problematic lines/polygons.\n\ntm_shape(mpsz) +\n  tmap_options(check.and.fix = TRUE) + # add this line here to explicitly fix problematic polygons in this specific layer.\n  tm_polygons(alpha = 0.4) +\n  tm_shape(condo_resale_sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#spatial-stationarity-test",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#spatial-stationarity-test",
    "title": "In-class Ex 7",
    "section": "3.11 Spatial Stationarity Test",
    "text": "3.11 Spatial Stationarity Test\nWe compute the distance-based weight matrix using sfdep package.\n\ncondo_resale_sf &lt;- condo_resale_sf %&gt;%\n  mutate(nb = st_knn(geometry, k = 6, longlat = FALSE),\n         wt = st_weights(nb, style = \"W\"),\n         .before = 1)\n\nTo confirm the presence of spatial autocorrelation, we perform the Moran’s I test.\n\nH₀: The residuals are randomly distributed (spatially stationary).\nH₁: The residuals exhibit spatial dependence (spatially non-stationary).\n\nWe conduct a Global Moran’s I permutation test to determine whether spatial autocorrelation exists in the residuals.\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed. Since the Observed Global Moran I = 0.25586 which is greater than 0, we can infer than the residuals resemble cluster distribution.\n\nglobal_moran_perm(condo_resale_sf$MLR_RES,\n                  condo_resale_sf$nb,\n                  condo_resale_sf$wt,\n                  alternative = \"two.sided\",\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.32254, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#fixed-bandwidth-gwr-model",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#fixed-bandwidth-gwr-model",
    "title": "In-class Ex 7",
    "section": "4.1 Fixed Bandwidth GWR Model",
    "text": "4.1 Fixed Bandwidth GWR Model\nIn the code below, the bw.gwr() function from the GWmodel package is used to determine the optimal fixed bandwidth for the model. Setting the adaptive argument to FALSE specifies that a fixed bandwidth will be used.\nThere are two methods to define the stopping rule: the cross-validation (CV) approach and the AIC corrected (AICc) approach. We define the stopping rule using approach agreement.\n\nbw_fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE +\n                     PROX_CBD + PROX_CHILDCARE + \n                     PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n                     PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                     NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale_sf,\n                   approach=\"CV\",\n                   kernel = \"gaussian\",\n                   adaptive = FALSE,\n                   longlat = FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.379526e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3396 CV score: 4.721292e+14 \nFixed bandwidth: 971.3402 CV score: 4.721292e+14 \nFixed bandwidth: 971.3398 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3399 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \n\n\nWe use the code chunk below to build the fixed bandwidth GWR model. There are observable improvements in R2 and the AICc. (Note: AICc is robust for small dataset.)\n\ngwr_fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE +\n                         PROX_CBD + PROX_CHILDCARE + \n                         PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n                         PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                         NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale_sf, \n                       bw=bw_fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\ngwr_fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-20 22:10:02.780804 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale_sf, bw = bw_fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.34 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3599e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7426e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5001e+06 -1.5970e+05  3.1970e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8074e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112794435\n   AREA_SQM                 21575\n   AGE                     434203\n   PROX_CBD               2704604\n   PROX_CHILDCARE         1654086\n   PROX_ELDERLYCARE      38867861\n   PROX_URA_GROWTH_AREA  78515805\n   PROX_MRT               3124325\n   PROX_PARK             18122439\n   PROX_PRIMARY_SCH       4637517\n   PROX_SHOPPING_MALL     1529953\n   PROX_BUS_STOP         11342209\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720745\n   FREEHOLD               6073642\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3807 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6193 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.534069e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430418 \n\n   ***********************************************************************\n   Program stops at: 2024-10-20 22:10:03.33087"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#adaptive-bandwidth-gwr-model",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#adaptive-bandwidth-gwr-model",
    "title": "In-class Ex 7",
    "section": "4.2 Adaptive Bandwidth GWR Model",
    "text": "4.2 Adaptive Bandwidth GWR Model\nThe following code is similar to the one used for computing fixed bandwidth, except that the adaptive argument is set to TRUE. The recommended number of data points to use is 30.\n\nbw_adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE +\n                     PROX_CBD + PROX_CHILDCARE + \n                     PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n                     PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                     NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale_sf,\n                   approach=\"CV\",\n                   kernel = \"gaussian\",\n                   adaptive = TRUE,\n                   longlat = FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nWe use the code chunk below to build the adaptive bandwidth GWR model. The report shows that the AICc the adaptive distance gwr is 41982.22 which is even smaller than the AICc of the fixed distance gwr of 42263.61.\n\ngwr_adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE +\n                            PROX_CBD + PROX_CHILDCARE + \n                            PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n                            PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n                            PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                         data=condo_resale_sf, \n                         bw=bw_adaptive,\n                         kernel = 'gaussian', \n                         adaptive=TRUE,\n                         longlat = FALSE)\ngwr_adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-20 22:10:07.97842 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale_sf, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2024-10-20 22:10:08.617753"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-sdf-fields",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-sdf-fields",
    "title": "In-class Ex 7",
    "section": "4.3 Visualising SDF Fields",
    "text": "4.3 Visualising SDF Fields\nTo visualise the fields in SDF, we need to first covert it into sf data.frame by using the code chunk below.\n\ngwr_adaptive_output &lt;- as.data.frame(gwr_adaptive$SDF) %&gt;%\n  select(-c(2:15))\n\ngwr_sf_adaptive &lt;- cbind(condo_resale_sf,\n                         gwr_adaptive_output)\nglimpse(gwr_sf_adaptive)\n\nRows: 1,436\nColumns: 63\n$ nb                      &lt;nb&gt; &lt;66, 77, 123, 238, 239, 343&gt;, &lt;21, 162, 163, 19…\n$ wt                      &lt;list&gt; &lt;0.1666667, 0.1666667, 0.1666667, 0.1666667, …\n$ POSTCODE                &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ MLR_RES                 &lt;dbl&gt; -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…\n$ geometry.1              &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nLocal R2Coefficient estimatesLocal R2 in Central Region\n\n\nThe code chunks below is used to create an interactive point symbol map of local R2\n\ntmap_mode(\"view\")\ntm_shape(mpsz)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(gwr_sf_adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\n\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"view\")\nAREA_SQM_SE &lt;- tm_shape(mpsz)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(gwr_sf_adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(gwr_sf_adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz[mpsz$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(gwr_sf_adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex01/data/geospatial/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html",
    "title": "Hands-on Ex 2A",
    "section": "",
    "text": "Point pattern analysis examines the spatial distribution of points and the underlying characteristics of these patterns. The properties of point patterns are typically categorised into two main types:\n\nFirst-order properties: These focus on the distribution and variation of individual locations across space, assessing how the intensity of points varies over the study area.\nSecond-order properties: These consider the interactions between points, analyzing how points influence each other and how these interactions shape the overall pattern.\n\nThis exercise is centered on first-order properties. In general, density-based methods, such as kernel density estimation, primarily address first-order properties by examining the spatial intensity of points across the study area. In addition to the geospatial tools introduced in previous hands-on exercises, we will also utilize the spatstat, raster, and maptools packages.\n\npacman::p_load(sf, spatstat, raster, maptools, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#handling-duplicated-points",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#handling-duplicated-points",
    "title": "Hands-on Ex 2A",
    "section": "4.4 Handling duplicated points",
    "text": "4.4 Handling duplicated points\n\nCheck for any duplicated pointsCount the number of duplicated pointsView locations of duplicated pointsJittering approach\n\n\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\n\n\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 0\n\n\n\n\n\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\n\nThe simplest way to handle duplicated points is to delete them, but this approach may result in the loss of valuable data. Alternatively, you can use jittering, which applies a small perturbation to the duplicate points, ensuring they do not occupy the exact same location.\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\nsum(multiplicity(childcare_ppp_jit) &gt; 1)\n\n[1] 0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#create-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#create-owin-object",
    "title": "Hands-on Ex 2A",
    "section": "4.5 Create owin object",
    "text": "4.5 Create owin object\nWhen analyzing spatial point patterns, it is good practice to confine the analysis within a geographical boundary. This involves converting a spatial polygon into an owin object for use with the spatstat package later.\n\nsg_owin &lt;- as.owin(sg_sf)\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#combine-owin-object-with-point-events",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#combine-owin-object-with-point-events",
    "title": "Hands-on Ex 2A",
    "section": "4.6 Combine owin object with point events",
    "text": "4.6 Combine owin object with point events\nIn this final step of geospatial data wrangling, we will extract childcare events located within Singapore boundary using the code chunk below. The resulting object combines both point and polygon features into a single ppp object.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1545 character character \n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 1545 symbols are shown in the symbol map"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#introduction-to-kde",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#introduction-to-kde",
    "title": "Hands-on Ex 2A",
    "section": "5.1 Introduction to KDE",
    "text": "5.1 Introduction to KDE\nThe code chunk below computes kernel density using the following configurations in the density() function:\n\nsigma: Specifies the automatic bandwidth selection method. Recommended methods are bw.diggle, bw.ppl, bw.CvL, or bw.scott.\nkernel: Specifies the smoothing method to be used, e.g. “gaussian”, “epanechnikov”, “quartic” or “disc”.\nedge: If set to TRUE, the intensity estimate is corrected for edge effect bias using the method described by Jones (1993) and Diggle (2010, equation 18.9).\n\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              kernel=\"gaussian\",\n                              edge=TRUE) \n\nThis is how the KDE plot looks like. The density values in the output range from 0 to 0.00003, which is too small to easily interpret. This occurs because the default unit of measurement in the SVY21 coordinate system is meters. Consequently, the computed density values are in “number of points per square meter”.\n\nplot(kde_childcareSG_bw)\n\n\n\n\nTo check the bandwidth used to compute the KDE layer, use the code chunk below.\n\nbw.diggle(childcareSG_ppp)\n\n   sigma \n298.4095"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#rescaling-kde-values",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#rescaling-kde-values",
    "title": "Hands-on Ex 2A",
    "section": "5.2 Rescaling KDE values",
    "text": "5.2 Rescaling KDE values\nrescale.ppp() is used to convert the unit of measurement from meter to kilometer.\n\nchildcareSG_ppp.km &lt;- rescale.ppp(childcareSG_ppp, 1000, \"km\")\n\nNotice that output image looks identical to the earlier version, the only changes in the data values (refer to the legend).\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km, sigma=bw.diggle, kernel=\"gaussian\", edge=TRUE)\nplot(kde_childcareSG.bw)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#working-with-different-automatic-bandwidth-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#working-with-different-automatic-bandwidth-methods",
    "title": "Hands-on Ex 2A",
    "section": "5.3 Working with different automatic bandwidth methods",
    "text": "5.3 Working with different automatic bandwidth methods\n\nBandwidth CalculationComparing KDEs of Various Automatic Bandwidth Methods\n\n\nLet’s take a look at the bandwidth of the various automatic bandwidth methods.\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897114 \n\n\n\nbw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\n\n\n\nHere, we will compare the KDEs generated by various automatic bandwidth selection methods. Baddeley et al. (2016) recommend using the bw.ppl algorithm, as their experience shows it tends to produce more appropriate values when the point pattern consists predominantly of tight clusters.\n\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, sigma=bw.ppl, kernel=\"gaussian\", edge=TRUE)\nkde_childcareSG.cvl &lt;- density(childcareSG_ppp.km, sigma=bw.CvL, kernel=\"gaussian\", edge=TRUE)\nkde_childcareSG.sct &lt;- density(childcareSG_ppp.km, sigma=bw.scott, kernel=\"gaussian\", edge=TRUE)\n\npar(mfrow=c(2,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\nplot(kde_childcareSG.cvl, main = \"bw.CvL\")\nplot(kde_childcareSG.sct, main = \"bw.scott\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#working-with-different-kernel-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#working-with-different-kernel-methods",
    "title": "Hands-on Ex 2A",
    "section": "5.4 Working with different kernel methods",
    "text": "5.4 Working with different kernel methods\nBy default, the kernel method used in density.ppp() is Gaussian. However, there are three other options available: Epanechnikov, Quartic, and Disc.\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#fixed-and-adaptive-kde",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#fixed-and-adaptive-kde",
    "title": "Hands-on Ex 2A",
    "section": "5.5 Fixed and Adaptive KDE",
    "text": "5.5 Fixed and Adaptive KDE\nYou could also compute KDE using fixed or adaptive bandwidths.\n\nFixed bandwidthAdapative bandwidthComparing fixed vs adapative KDE\n\n\nExample: defining a bandwidth of 600 meter. Sigma value is 0.6, as the unit of measurement is kilometers.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\nThe fixed bandwidth method is highly sensitive to skewed distributions of spatial point patterns, such as those found in urban versus rural areas. To address this issue, an adaptive bandwidth method can be used instead.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#convert-kde-output-into-grid-object",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#convert-kde-output-into-grid-object",
    "title": "Hands-on Ex 2A",
    "section": "5.6 Convert KDE Output into Grid Object",
    "text": "5.6 Convert KDE Output into Grid Object\nWe convert the KDE output so that it is suitable for mapping purposes.\n\n1. Convert to gridded kernal density objects2. Convert gridded output to raster3. Assign projection system4. Visualise the output in tmap\n\n\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\nNotice that the crs property is NA.\n\nkde_childcareSG_bw_raster &lt;- raster(kde_childcareSG.bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : layer \nvalues     : -1.005814e-14, 28.51831  (min, max)\n\n\n\n\nThe code chunk includes the CRS information onto the raster. Notice that the crs property is completed.\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -1.005814e-14, 28.51831  (min, max)\n\n\n\n\nFinally, we will display the raster in cartographic quality map using tmap package.\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"layer\", palette = \"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#comparing-kdes-by-planning-areas",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02A.html#comparing-kdes-by-planning-areas",
    "title": "Hands-on Ex 2A",
    "section": "5.7 Comparing KDEs by Planning Areas",
    "text": "5.7 Comparing KDEs by Planning Areas\nIn this section, we will compare KDE of childcare locations at Punggol, Tampines, Choa Chu Kang and Jurong West planning areas.\n\n1. Extracting area of study2A. Plotting Punggol2B. Plotting Tampines2C. Plotting Choa Chu Kang2D. Plotting Jurong West3. Creating owin object for each area4. Extracting childcare points for each area5. Rescaling unit of measurement6. Plotting childcare locations7A. Computing KDE using bw.diggle7B. Computing KDE using fixed bandwidth\n\n\n\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\n\n\n\nplot(pg, main = \"Punggol\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\nWarning: plotting the first 10 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\npg_owin = as.owin(pg)\ntm_owin = as.owin(tm)\nck_owin = as.owin(ck)\njw_owin = as.owin(jw)\n\n\n\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\n\n\nchildcare_pg_ppp.km = rescale.ppp(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale.ppp(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale.ppp(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale.ppp(childcare_jw_ppp, 1000, \"km\")\n\n\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 61 symbols are shown in the symbol map\n\nplot(childcare_tm_ppp.km, main=\"Tampines\")\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 89 symbols are shown in the symbol map\n\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 61 symbols are shown in the symbol map\n\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 88 symbols are shown in the symbol map\n\n\n\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\nFor comparison purposes, we use 250m as the bandwidth.\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html",
    "title": "Hands-on Ex 2B",
    "section": "",
    "text": "This exercise focuses on second-order properties of spatial point patterns. Second-order properties examine the interactions between points, analyzing how these interactions influence the overall pattern. An example of a second-order property is the degree of dispersion — whether a point pattern is clustered, dispersed, or random. In general, distance-based methods, which consider the distances between pairs of points, are used to measure second-order properties.\nAs in the previous hands-on exercise on first-order spatial point pattern analysis, we will use the same geospatial R packages.\n\npacman::p_load(sf, spatstat, raster, maptools, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#convert-into-spatstats-ppp-format",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#convert-into-spatstats-ppp-format",
    "title": "Hands-on Ex 2B",
    "section": "4.1. Convert into spatstat’s ppp format",
    "text": "4.1. Convert into spatstat’s ppp format\nHere, we convert the childcare dataset into ppp format. We will also plot it and show the summary statistics of the created ppp object.\n\nchildcare_ppp &lt;- as.ppp(childcare_sf)\n\nWarning in as.ppp.sf(childcare_sf): only first attribute column is used for\nmarks\n\nchildcare_ppp\n\nMarked planar point pattern: 1545 points\nmarks are of storage type  'character'\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 1545 symbols are shown in the symbol map\n\n\n\n\n\n\nsummary(childcare_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1545 character character \n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#checking-and-handling-duplicated-points",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#checking-and-handling-duplicated-points",
    "title": "Hands-on Ex 2B",
    "section": "4.2 Checking and handling duplicated points",
    "text": "4.2 Checking and handling duplicated points\n\nCheck for any duplicated pointsCount the number of duplicated pointsView locations of duplicated pointsJittering approach\n\n\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\n\n\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 0\n\n\n\n\n\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(childcare_sf) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\n\nThe simplest way to handle duplicated points is to delete them, but this approach may result in the loss of valuable data. Alternatively, you can use jittering, which applies a small perturbation to the duplicate points, ensuring they do not occupy the exact same location.\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#create-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#create-owin-object",
    "title": "Hands-on Ex 2B",
    "section": "4.3 Create owin object",
    "text": "4.3 Create owin object\nWhen analyzing spatial point patterns, it is good practice to confine the analysis within a geographical boundary. This involves converting a spatial polygon into an owin object for use with the spatstat package later.\n\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#combine-owin-object-with-point-events",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#combine-owin-object-with-point-events",
    "title": "Hands-on Ex 2B",
    "section": "4.4 Combine owin object with point events",
    "text": "4.4 Combine owin object with point events\nIn this final step of geospatial data wrangling, we will extract childcare events located within Singapore boundary using the code chunk below. The resulting object combines both point and polygon features into a single ppp object.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1545 character character \n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 1545 symbols are shown in the symbol map"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#extracting-area-of-study",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02B.html#extracting-area-of-study",
    "title": "Hands-on Ex 2B",
    "section": "4.5 Extracting Area of Study",
    "text": "4.5 Extracting Area of Study\nWe will study the following areas: Punggol, Tampines, Choa Chu Kang and Jurong West planning areas.\n\n1. Extracting area of study2A. Plotting Punggol2B. Plotting Tampines2C. Plotting Choa Chu Kang2D. Plotting Jurong West3. Creating owin object for each area4. Extracting childcare points for each area5. Rescaling unit of measurement6. Plotting childcare locations\n\n\n\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\n\n\n\nplot(pg, main = \"Punggol\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\nWarning: plotting the first 10 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\npg_owin = as.owin(pg)\ntm_owin = as.owin(tm)\nck_owin = as.owin(ck)\njw_owin = as.owin(jw)\n\n\n\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\n\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 61 symbols are shown in the symbol map\n\nplot(childcare_tm_ppp.km, main=\"Tampines\")\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 89 symbols are shown in the symbol map\n\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 61 symbols are shown in the symbol map\n\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 88 symbols are shown in the symbol map"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Ex 3",
    "section": "",
    "text": "Network-constrained spatial point pattern analysis (NetSPAA) focuses on studying events that occur along networks, such as roads and rivers, rather than across open spaces. Unlike traditional spatial analysis, which assumes events can happen anywhere and measures distances in straight lines, this method addresses phenomena restricted to networks, like traffic accidents or store locations. It is especially important for its accurate in detecting event clusters that occur along these networks.\nThe spNetwork package is a crucial geospatial R tool for conducting NetSPAA, specifically for:\n\nNetwork Kernel Density Estimation (NKDE), and\nNetwork-based G-function and K-function analysis.\n\n\npacman::p_load(sf, spNetwork, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#prepare-lixels",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#prepare-lixels",
    "title": "Hands-on Ex 3",
    "section": "4.1 Prepare lixels",
    "text": "4.1 Prepare lixels\nBefore computing NKDE, the SpatialLines object must be segmented into lixels with a specified minimum distance. The lixel length (lx_length) is set to 700m, and the minimum length (mindist) is set to 350m. After segmentation, if the final lixel is shorter than the minimum distance, it is merged with the previous lixel.\n\nlixels &lt;- lixelize_lines(network, \n                         lx_length = 700, \n                         mindist = 350)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#compute-lines-center-point",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#compute-lines-center-point",
    "title": "Hands-on Ex 3",
    "section": "4.2 Compute lines’ center point",
    "text": "4.2 Compute lines’ center point\nNext, lines_center() from the spNetwork package will be used to generate a SpatialPointsDataFrame with points positioned at the center of each line, based on the line’s length, as shown in the code below.\n\nsamples &lt;- lines_center(lixels)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#perform-nkde",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#perform-nkde",
    "title": "Hands-on Ex 3",
    "section": "4.3 Perform NKDE",
    "text": "4.3 Perform NKDE\nWe are ready to computer the NKDE. There are 3 methods in computing NKDE:\n\n4.3.1 Simple Method4.3.2 Discontinuous Method4.3.3 Continuous Method\n\n\nThe simple method, proposed by Xie and Yan (2008), differs from classical KDE in two key ways:\n\nEvents are snapped to a network.\nDistances between sampling points and events are measured along the network (i.e., not using Euclidean distances).\n\nLet’s examine the NKDE plot using the simple method below!\n\nsimple_densities &lt;- nkde(lines = network, events = childcare,\n                  w = rep(1, nrow(childcare)), samples = samples,\n                  kernel_name = \"quartic\", bw = 300, \n                  div= \"bw\", method = \"simple\", \n                  digits = 1, tol = 1,\n                  grid_shape = c(1,1), max_depth = 8,\n                  agg = 5, sparse = TRUE,\n                  verbose = FALSE)\n\n\nsamples$simple_density &lt;- simple_densities*1000\nlixels$simple_density &lt;- simple_densities*1000\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(lixels) +\n  tm_lines(col=\"simple_density\") +\n  tm_shape(childcare) +\n  tm_dots()\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\n\nThe simple method has a limitation: the event’s mass is multiplied by the number of edges at an intersection, causing the kernel not to integrate to 1. To address this, Okabe and Sugihara (2012) proposed the discontinuous NKDE, which was further extended by Sugihara, Satoh, and Okabe (2010) for networks with cycles shorter than the bandwidth.\nSee the NKDE plot using the discontinuous method below!\n\ndiscontinuous_densities &lt;- nkde(lines = network, events = childcare,\n                  w = rep(1, nrow(childcare)), samples = samples,\n                  kernel_name = \"quartic\", bw = 300, \n                  div= \"bw\", method = \"discontinuous\", \n                  digits = 1, tol = 1,\n                  grid_shape = c(1,1), max_depth = 8,\n                  agg = 5, sparse = TRUE,\n                  verbose = FALSE)\n\n\nsamples$discontinuous_density &lt;- discontinuous_densities*1000\nlixels$discontinuous_density &lt;- discontinuous_densities*1000\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(lixels) +\n  tm_lines(col=\"discontinuous_density\") +\n  tm_shape(childcare) +\n  tm_dots()\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\n\nDiscontinuous NKDE can be counterintuitive, resulting in sharp differences between density values across the network, particularly problematic in networks with many closely spaced intersections. The continuous method adjusts NKDE values at intersections to ensure the kernel integrates to one, applying a backward correction to maintain continuity in density values. However, this method is recursive and computationally time-consuming.\nSee the NKDE plot using the continuous method below!\n\ncontinuous_densities &lt;- nkde(lines = network, events = childcare,\n                  w = rep(1, nrow(childcare)), samples = samples,\n                  kernel_name = \"quartic\", bw = 300, \n                  div= \"bw\", method = \"continuous\", \n                  digits = 1, tol = 1,\n                  grid_shape = c(1,1), max_depth = 8,\n                  agg = 5, sparse = TRUE,\n                  verbose = FALSE)\n\n\nsamples$continuous_density &lt;- continuous_densities*1000\nlixels$continuous_density &lt;- continuous_densities*1000\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(lixels) +\n  tm_lines(col=\"continuous_density\") +\n  tm_shape(childcare) +\n  tm_dots()\n\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-on Ex 7",
    "section": "",
    "text": "Geographically Weighted Regression (GWR) is a spatial statistical technique designed to account for spatial non-stationarity, where relationships between variables vary across geographic locations. GWR models local relationships between independent variables (such as climate, demographic factors, and physical environment characteristics) and a dependent variable, providing insights into how these factors influence the outcome of interest at different spatial scales.\nThis study constructs a hedonic pricing model for condominiums GWR. The hedonic pricing model is a method commonly used in real estate economics to estimate the value of a property based on its characteristics. It breaks down the price into various attributes, such as location, size, number of rooms, proximity to amenities, and other features that impact a property’s market value. By applying GWR, the model allows for an understanding of how the influence of these factors varies across different geographic locations, providing localized insights into what drives property prices.\nIn addition to the standard R packages for geospatial analysis, we will load the following R packages specifically used GWR:\n\nolsrr: For building Ordinary Least Squares (OLS) models and conducting diagnostic tests.\nGWmodel: For calibrating the geographically weighted family of models, including GWR.\ncorrplot: For visualising and analysing multivariate data through correlation plots.\n\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#simple-linear-regression",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#simple-linear-regression",
    "title": "Hands-on Ex 7",
    "section": "4.1 Simple linear regression",
    "text": "4.1 Simple linear regression\nWe build a simple linear regression model of selling price against area (square meter). The summary output reveals that the selling price is explained by the area (square meter) with the following formula: Selling Price = -258121 + 14719 x Area\nThis model has a R-square of 0.45, meaning that the independent variable could explain about 45% of the resale prices. Since the p-value is &lt; .05, we reject the null hypothesis and infer that the regression model is a good estimator of selling price.\nLooking at the coefficients, both the intercept and the area (square meter) have p-values &lt; .05, indicating that they are good parameter estimates.\n\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nWe plot the line of best fit against the scatter plot as follows:\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualise-relationships-of-independent-variables",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualise-relationships-of-independent-variables",
    "title": "Hands-on Ex 7",
    "section": "4.2 Visualise relationships of independent variables",
    "text": "4.2 Visualise relationships of independent variables\nBefore building a multiple regression model, it is crucial to check that the independent variables are not highly correlated. Using highly correlated variables can lead to multicollinearity, which compromises model quality. A correlation matrix is a common tool for visualising relationships between independent variables.\nMatrix reordering is crucial for uncovering hidden structures and patterns. In corrplot, the four reordering methods available (AOE, FPC, hclust, alphabet) help achieve this. We applied the AOE method, which orders variables using the angular order of eigenvectors (as suggested by Michael Friendly).\nFrom the matrix, Freehold is highly correlated with LEASE_99YEAR. To avoid multicollinearity, only one should be included in the model, and LEASE_99YEAR is excluded.\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#using-mlr-to-build-hedonic-pricing-model",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#using-mlr-to-build-hedonic-pricing-model",
    "title": "Hands-on Ex 7",
    "section": "4.3 Using MLR to build hedonic pricing model",
    "text": "4.3 Using MLR to build hedonic pricing model\nA multiple linear regression model is used to build the hedonic pricing model. The summary report reveals that not all the independent variables are statistically significant.\n\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#refining-the-hedonic-pricing-model",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#refining-the-hedonic-pricing-model",
    "title": "Hands-on Ex 7",
    "section": "4.4 Refining the hedonic pricing model",
    "text": "4.4 Refining the hedonic pricing model\nWe will remove those variables that are not statistically significant and rebuild the MLR model. This time round, we will use ols_regress() to generate publication quality report.\n\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.592 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.592                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#gtsummary-publication-quality-report",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#gtsummary-publication-quality-report",
    "title": "Hands-on Ex 7",
    "section": "4.5 gtsummary publication quality report",
    "text": "4.5 gtsummary publication quality report\nWe can also use gtsummary package to generate publication quality report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nAdditional notes or model statistics could be appended to the table using add_glance_source_note() or add_glance_table(), respectively.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#checking-assumptions",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#checking-assumptions",
    "title": "Hands-on Ex 7",
    "section": "4.6 Checking assumptions",
    "text": "4.6 Checking assumptions\nWe will now check if any assumptions of MLR have been violated as follows:\n\nMulticollinearityNon-linearityNormality of residuals\n\n\nThe following code checks for signs of multicollinearity. Since the Variance Inflation Factor (VIF) for all independent variables is below 10, we can conclude that there is no multicollinearity present.\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\n\nIt is important to test the assumption of linearity and additivity in the relationship between the dependent and independent variables. The figure shows that most data points are scattered around the zero line, indicating that the relationships between the dependent and independent variables are linear.\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\n\n\nThe following checks that the residuals of MLR have a normal distribution. ols_test_normality() conducts statistical test on the normality of the residuals. The summary table reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\n\nols_test_normality(condo.mlr1)\n\nWarning in ks.test.default(y, \"pnorm\", mean(y), sd(y)): ties should not be\npresent for the one-sample Kolmogorov-Smirnov test\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#testing-for-spatial-autocorrelation",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#testing-for-spatial-autocorrelation",
    "title": "Hands-on Ex 7",
    "section": "4.7 Testing for spatial autocorrelation",
    "text": "4.7 Testing for spatial autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame. And then, we will join the newly created data frame with condo_resale.sf object.\nNext, we convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\n\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %&gt;%\n  rename(`MLR_RES` = `condo.mlr1.residuals`)\n\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nWe can use tmap package to display the distribution of the residuals on an interactive map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\nVariable(s) \"MLR_RES\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\nThe map reveals that there is sign of spatial autocorrelation. Moran’s I test will be performed to confirm this observation.\nFirst, we compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation. The Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution.\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#fixed-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#fixed-bandwidth-gwr-model",
    "title": "Hands-on Ex 7",
    "section": "5.1 Fixed bandwidth GWR model",
    "text": "5.1 Fixed bandwidth GWR model\n\nDetermine optimal fixed bandwidthBuild GWR model\n\n\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model.To do so, we set the argument adaptive to FALSE.\nWe can use either CV cross-validation approach or AIC corrected (AICc) approach to determine the stopping rule in the approach argument. The recommended bandwidth is 971.3405 metres.\n\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.379526e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3396 CV score: 4.721292e+14 \nFixed bandwidth: 971.3402 CV score: 4.721292e+14 \nFixed bandwidth: 971.3398 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3399 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \n\n\n\n\nThe code chunk below calibrates the GWR model using fixed bandwidth and gaussian kernel. The output of the model is shown below.\nThe report shows that the AICc of the fixed bandwidth GWR model is 42263.61 which is significantly smaller than the global MLR model of 42967.1.\n\ngwr.fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-20 22:56:22.909433 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.34 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3599e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7426e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5001e+06 -1.5970e+05  3.1970e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8074e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112794435\n   AREA_SQM                 21575\n   AGE                     434203\n   PROX_CBD               2704604\n   PROX_CHILDCARE         1654086\n   PROX_ELDERLYCARE      38867861\n   PROX_URA_GROWTH_AREA  78515805\n   PROX_MRT               3124325\n   PROX_PARK             18122439\n   PROX_PRIMARY_SCH       4637517\n   PROX_SHOPPING_MALL     1529953\n   PROX_BUS_STOP         11342209\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720745\n   FREEHOLD               6073642\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3807 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6193 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.534069e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430418 \n\n   ***********************************************************************\n   Program stops at: 2024-10-20 22:56:23.466167"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#adaptive-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#adaptive-bandwidth-gwr-model",
    "title": "Hands-on Ex 7",
    "section": "5.2 Adaptive bandwidth GWR model",
    "text": "5.2 Adaptive bandwidth GWR model\n\nDetermine optimal number of data pointsBuild GWR model\n\n\nSimilar to the earlier section, we use bw.gwr() to determine the recommended number of data points to use.\nThe code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE. The result shows that the recommended number of data points to use is 30.\n\nbw.adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\n\n\nThe code chunk below calibrates the GWR model using adaptive bandwidth and gaussian kernel. The output of the model is shown below.\nThe report shows that the AICc of the adaptive bandwidth GWR model is 41982.22 which is even smaller than the AICc of the fixed bandwidth GWR model of 42263.61.\n\ngwr.adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-20 22:56:28.066998 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2024-10-20 22:56:28.705354"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#converting-gwr-model-output-into-sf-dataframe",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#converting-gwr-model-output-into-sf-dataframe",
    "title": "Hands-on Ex 7",
    "section": "5.3 Converting GWR model output into sf dataframe",
    "text": "5.3 Converting GWR model output into sf dataframe\nThe output of GWR model contains a SpatialPointDataFrame (SDF) object with fields such as the residuals, observed and predicted y values, and local R2. To visualise the fields of SDF, we need to convert it into sf data.frame.\n\ncondo_resale.sf.adaptive &lt;- st_as_sf(gwr.adaptive$SDF) %&gt;%\n  st_transform(crs=3414)\n\ncondo_resale.sf.adaptive.svy21 &lt;- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.95        0   -0.72065801   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output &lt;- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive &lt;- cbind(condo_resale.res.sf,  as.matrix(gwr.adaptive.output))\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       &lt;dbl&gt; 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 &lt;dbl&gt; -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              &lt;dbl&gt; 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   &lt;dbl&gt; -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              &lt;dbl&gt; -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        &lt;dbl&gt; 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      &lt;dbl&gt; -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  &lt;dbl&gt; -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              &lt;dbl&gt; -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             &lt;dbl&gt; -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      &lt;dbl&gt; 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    &lt;dbl&gt; 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         &lt;dbl&gt; 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           &lt;dbl&gt; 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       &lt;dbl&gt; -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              &lt;dbl&gt; 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               &lt;dbl&gt; 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               &lt;dbl&gt; 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-local-r2",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-local-r2",
    "title": "Hands-on Ex 7",
    "section": "5.4 Visualising local R2",
    "text": "5.4 Visualising local R2\nThe map of local R2 is plotted below.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-coefficient-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-coefficient-estimates",
    "title": "Hands-on Ex 7",
    "section": "5.5 Visualising coefficient estimates",
    "text": "5.5 Visualising coefficient estimates\nThe map of the coefficient estimates of AREA_SQM_SE and AREA_SQM_TV are plotted below.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nAREA_SQM_SE &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-local-r2-by-ura-planning-region",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-local-r2-by-ura-planning-region",
    "title": "Hands-on Ex 7",
    "section": "5.6 Visualising local R2 by URA planning region",
    "text": "5.6 Visualising local R2 by URA planning region\nThe map of local R2 in Central Region of Singapore is plotted below.\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take Home Ex 2: Spatial and Spatio-Temporal Analysis of COVID-19’s Impact on Thailand’s Tourism Economy",
    "section": "",
    "text": "Tourism is a cornerstone of Thailand’s economy, contributing approximately 20% to the nation’s gross domestic product (GDP). In 2019, the country’s tourism sector generated USD 90 billion in revenue from both domestic and international visitors. However, the COVID-19 pandemic severely disrupted the industry, causing revenues to plummet to USD 24 billion in 2020 due to travel restrictions, lockdowns, and public health concerns.\nSince September 2021, tourism revenues have shown gradual recovery as international borders reopened and domestic travel resumed, yet the impacts of the pandemic have not been evenly distributed across the country. Provincial-level disparities in the recovery trajectory raise important questions about the spatial and spatio-temporal dynamics of Thailand’s tourism economy during and after the pandemic.\n\n\nThis study employs spatial and spatio-temporal statistical methods at the provincial level to achieve the following objectives:\n\nTo determine whether key indicators of Thailand’s tourism economy exhibit spatial and spatio-temporal dependencies.\nIf such dependencies are present, to identify clusters, outliers, and emerging hot/cold spots.\n\n\n\n\nThe following R packages are loaded for this study:\n\npacman::p_load(sf, sfdep, spdep, Kendall, plotly, tmap, tidyverse, classInt)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#objectives",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#objectives",
    "title": "Take Home Ex 2: Spatial and Spatio-Temporal Analysis of COVID-19’s Impact on Thailand’s Tourism Economy",
    "section": "",
    "text": "This study employs spatial and spatio-temporal statistical methods at the provincial level to achieve the following objectives:\n\nTo determine whether key indicators of Thailand’s tourism economy exhibit spatial and spatio-temporal dependencies.\nIf such dependencies are present, to identify clusters, outliers, and emerging hot/cold spots."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#r-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#r-packages",
    "title": "Take Home Ex 2: Spatial and Spatio-Temporal Analysis of COVID-19’s Impact on Thailand’s Tourism Economy",
    "section": "",
    "text": "The following R packages are loaded for this study:\n\npacman::p_load(sf, sfdep, spdep, Kendall, plotly, tmap, tidyverse, classInt)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#geospatial-data-provincial-boundaries",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#geospatial-data-provincial-boundaries",
    "title": "Take Home Ex 2: Spatial and Spatio-Temporal Analysis of COVID-19’s Impact on Thailand’s Tourism Economy",
    "section": "2.1. Geospatial Data: Provincial Boundaries",
    "text": "2.1. Geospatial Data: Provincial Boundaries\nThe following steps were undertaken to import and prepare the geospatial data for analysis.\n\n1. Import and Data Overview2. Provincial Map Plot3. Data Wrangling & Transformation4. Check Centroids within Land5. Geovisualisation of Province Boundaries and Centroids\n\n\nFrom Take-Home Exercise 1, we learnt that tha_admbnda_adm1_rtsd_20220121 shapefile contains the multipolygon features of Thailand’s provinces. We import this layer using st_read(). The output shows that the geometries are in WGS 84 geographical coordinate system.\n\nprovinces &lt;- st_read(dsn = \"data/geospatial\", \n                  layer = \"tha_admbnda_adm1_rtsd_20220121\")\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Take-home_Ex/Take-home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\n\nThe sf dataframe contains a number of fields, of which only ADM1_EN and geometry are relevant to the study.\n\nglimpse(provinces)\n\nRows: 77\nColumns: 17\n$ Shape_Leng &lt;dbl&gt; 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area &lt;dbl&gt; 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.6139 13..., MULTIPOLYGON (…\n\n\n\n\nWe use the tmap package to plot the provincial boundaries.\n\ntmap_mode('plot')\ntm_shape(provinces) +\n  tm_borders()\n\n\n\n\n\n\nWe use select() to select the two relevant fields:\n\nADM1_EN renamed to province\ngeometry\n\nAs the shapefile is in WGS geographical coordinate system, we use st_transform() to transform them to the projected coordinate system, EPSG 32647. We then use st_centroid to compute the centroid for each province.\n\nprovinces2 &lt;- provinces %&gt;%\n  select(\"province\" = \"ADM1_EN\", \"geometry\")  %&gt;%\n  st_transform(crs = 32647) %&gt;%\n  mutate(centroid = st_centroid(geometry))\nglimpse(provinces2)\n\nRows: 77\nColumns: 3\n$ province &lt;chr&gt; \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"Phr…\n$ geometry &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((674339.8 15..., MULTIPOLYGON (((…\n$ centroid &lt;POINT [m]&gt; POINT (675514.6 1523087), POINT (685033.7 1503755), POI…\n\n\nA check on the Coordinate Reference System using st_crs() revealed that it is now in projected coordinate system.\n\nst_crs(provinces2)\n\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n\n\n\n\nTo ensure that all centroids are correctly positioned within the land area of each province, we use the st_within() function. This function checks whether each centroid falls within its corresponding provincial boundary. For each province, the output will be TRUE if the centroid is within the land and FALSE if it is not.\nWe then apply rowSums() to count the number of TRUE values across all 77 provinces. A row sum of 1 indicates the centroid is within the land boundary, while any other value suggests an issue. Finally, we use filter() to identify any centroid that does not fall within the land boundary (i.e., cases where the row sum is not equal to 1).\nThe output shows that all centroids fall within land.\n\nprovinces2 %&gt;%\n  mutate(centroid_within_land = rowSums(st_within(centroid, geometry, sparse = FALSE))) %&gt;%\n  filter(centroid_within_land != 1)\n\nSimple feature collection with 0 features and 2 fields\nActive geometry column: geometry\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: WGS 84 / UTM zone 47N\n[1] province             geometry             centroid            \n[4] centroid_within_land\n&lt;0 rows&gt; (or 0-length row.names)\n\n\n\n\nThe interactive plot below shows the provincial boundaries along with the computed centroids.\n\ntmap_mode('view')\ntm_shape(provinces2) +\n  tm_borders() +\n  tm_shape(st_sf(geometry = provinces2$centroid)) +\n  tm_dots(col = \"red\")\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#aspatial-data-tourism-statistics",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#aspatial-data-tourism-statistics",
    "title": "Take Home Ex 2: Spatial and Spatio-Temporal Analysis of COVID-19’s Impact on Thailand’s Tourism Economy",
    "section": "2.2 Aspatial Data: Tourism Statistics",
    "text": "2.2 Aspatial Data: Tourism Statistics\nThe following steps were undertaken to import, detect any data-related issues, and prepare the Thailand Tourism Statistics dataset for analysis.\n\n1. Import and Data Overview2. Check Missing Data 13. Check for Mismatched Provincial Names4. Data Wrangling5. Check Missing Data 2\n\n\nThe thailand_domestic_tourism_2019_2023_ver2.csv file was imported using read_csv(). A preview of the dataset using glimpse() revealed that it contains 30,800 rows with 7 columns. The data is structured in long format, with all tourism economic indicators stored in the variable and value columns.\n\ntourism &lt;- read_csv(\"data/aspatial/thailand_domestic_tourism_2019_2023_ver2.csv\")\nglimpse(tourism)\n\nRows: 30,800\nColumns: 7\n$ date          &lt;date&gt; 2019-01-01, 2019-01-01, 2019-01-01, 2019-01-01, 2019-01…\n$ province_thai &lt;chr&gt; \"กรุงเทพมหานคร\", \"ลพบุรี\", \"พระนครศรีอยุธยา\", \"สระบุรี\", \"ชัยนาท…\n$ province_eng  &lt;chr&gt; \"Bangkok\", \"Lopburi\", \"Phra Nakhon Si Ayutthaya\", \"Sarab…\n$ region_thai   &lt;chr&gt; \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"…\n$ region_eng    &lt;chr&gt; \"central\", \"central\", \"central\", \"central\", \"central\", \"…\n$ variable      &lt;chr&gt; \"ratio_tourist_stay\", \"ratio_tourist_stay\", \"ratio_touri…\n$ value         &lt;dbl&gt; 93.37, 61.32, 73.37, 67.33, 79.31, 71.70, 64.65, 71.21, …\n\n\n\n\nThe combined use of colMeans() and is.na() functions was employed to check for any missing data. The output shows that the dataset does not contain any missing data.\n\ncolMeans(is.na(tourism))\n\n         date province_thai  province_eng   region_thai    region_eng \n            0             0             0             0             0 \n     variable         value \n            0             0 \n\n\n\n\nWe used anti_join() to identify any provincial names in the tourism dataset that did not match those in the geospatial dataset. The output revealed 8 unmatched provinces.\n\ntourism %&gt;% \n  anti_join(provinces2, by = c(\"province_eng\" = \"province\")) %&gt;% \n  distinct(province_eng) %&gt;% \n  arrange(province_eng)\n\n# A tibble: 8 × 1\n  province_eng   \n  &lt;chr&gt;          \n1 Buriram        \n2 Chainat        \n3 Chonburi       \n4 Lopburi        \n5 Nong Bua Lamphu\n6 Phang Nga      \n7 Prachinburi    \n8 Sisaket        \n\n\nNext, we reversed the process by using anti_join() again to check for unmatched provincial names in the geospatial dataset compared to the tourism dataset. This also showed 8 unmatched provinces. The mismatches were due to differences in spelling, such as spaces in provincial names. This highlighted the need to correct the inconsistencies to ensure the datasets can be accurately joined later.\n\nprovinces2 %&gt;% \n  anti_join(tourism, by = c(\"province\" = \"province_eng\")) %&gt;%\n  arrange(province)\n\nSimple feature collection with 8 features and 1 field\nActive geometry column: geometry\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 349324.1 ymin: 856050.4 xmax: 1137931 ymax: 1959175\nProjected CRS: WGS 84 / UTM zone 47N\n          province                       geometry                  centroid\n1         Buri Ram MULTIPOLYGON (((921217 1750...  POINT (925999.3 1642136)\n2         Chai Nat MULTIPOLYGON (((620165.4 17...  POINT (610397.7 1673394)\n3        Chon Buri MULTIPOLYGON (((714273.8 13...  POINT (738611.9 1459351)\n4         Lop Buri MULTIPOLYGON (((751293.3 17...  POINT (704948.7 1671114)\n5 Nong Bua Lam Phu MULTIPOLYGON (((848689.2 19...  POINT (851354.4 1902623)\n6         Phangnga MULTIPOLYGON (((457515.4 85... POINT (436009.4 958730.6)\n7     Prachin Buri MULTIPOLYGON (((768228.7 15...  POINT (786246.3 1554649)\n8        Si Sa Ket MULTIPOLYGON (((1047999 172...   POINT (1078388 1649384)\n\n\n\n\nThe following sub-steps were undertaken to transform the tourism dataset:\n\nSelected the necessary variables for the study using select(), and simultaneously renamed province_eng to province.\nPivoted the dataset from long to wide format using spread(), ensuring each economic indicator occupies its own column in the wide table.\nCorrected the 8 misspelled provinces to ensure consistency with the provincial names in the geospatial dataset. This was done using mutate() and case_when().\n\n\ntourism1 &lt;- tourism %&gt;%\n  select(c(\"date\", \"province\" = \"province_eng\", \"variable\", \"value\")) %&gt;%\n  spread(key = variable, value = value, fill = NA) %&gt;%\n  mutate(province = case_when(province == \"Buriram\" ~ \"Buri Ram\",\n                              province == \"Chainat\" ~ \"Chai Nat\",\n                              province == \"Chonburi\" ~ \"Chon Buri\",\n                              province == \"Lopburi\" ~ \"Lop Buri\",\n                              province == \"Nong Bua Lamphu\" ~ \"Nong Bua Lam Phu\",\n                              province == \"Phang Nga\" ~ \"Phangnga\",\n                              province == \"Prachinburi\" ~ \"Prachin Buri\",\n                              province == \"Sisaket\" ~ \"Si Sa Ket\",\n                              TRUE ~ province))\nglimpse(tourism1)\n\nRows: 3,850\nColumns: 10\n$ date               &lt;date&gt; 2019-01-01, 2019-01-01, 2019-01-01, 2019-01-01, 20…\n$ province           &lt;chr&gt; \"Amnat Charoen\", \"Ang Thong\", \"Bangkok\", \"Bueng Kan…\n$ no_tourist_all     &lt;dbl&gt; 21790, 104097, 5959075, 65978, 185563, 270438, 7907…\n$ no_tourist_foreign &lt;dbl&gt; 818, 5281, 2425014, 278, 5487, 3731, 559, 718, 6956…\n$ no_tourist_stay    &lt;dbl&gt; 8551, 19140, 3334971, 37974, 113655, 38687, 27141, …\n$ no_tourist_thai    &lt;dbl&gt; 20972, 98816, 3534061, 65700, 180076, 266707, 78514…\n$ ratio_tourist_stay &lt;dbl&gt; 65.15, 71.21, 93.37, 72.95, 71.26, 59.40, 79.31, 65…\n$ revenue_all        &lt;dbl&gt; 34510000, 132070000, 81926490000, 137810000, 364160…\n$ revenue_foreign    &lt;dbl&gt; 1870000, 5750000, 52183910000, 670000, 8250000, 478…\n$ revenue_thai       &lt;dbl&gt; 32640000, 126320000, 29742580000, 137140000, 355910…\n\n\n\n\nWe check whether the wide table contains any missing data, and the output shows that it does not contain any missing data.\n\ncolMeans(is.na(tourism1))\n\n              date           province     no_tourist_all no_tourist_foreign \n                 0                  0                  0                  0 \n   no_tourist_stay    no_tourist_thai ratio_tourist_stay        revenue_all \n                 0                  0                  0                  0 \n   revenue_foreign       revenue_thai \n                 0                  0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#exploratory-data-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#exploratory-data-analysis",
    "title": "Take Home Ex 2: Spatial and Spatio-Temporal Analysis of COVID-19’s Impact on Thailand’s Tourism Economy",
    "section": "2.3 Exploratory Data Analysis",
    "text": "2.3 Exploratory Data Analysis\nAdditionally, Exploratory Data Analysis (EDA) was performed to gain deeper insights into the data and to ensure that the final prepared dataset is robust and suitable for subsequent analysis. Interactive plots of all the economic indicators were developed using the plotly package.\n\n1. Total Number of Tourists2. Number of Foreign Tourists3. Number of Domestic Tourists4. Number of Tourists with Travel Accommodation5. Occupancy Rate6. Total Tourism Revenue7. Revenue by Foreign Tourists8. Revenue by Domestic Tourists\n\n\nThe plot shows that the total number of tourists (both domestic and international) was highest in Bangkok. All provinces were significantly affected by COVID-19 restrictions, with tourist numbers plummeting starting in January 2020. A brief rebound occurred, followed by another decline between May and August 2021. A steady recovery is observed after the lifting of restrictions in September 2022.\n\nplot_ly(tourism1, x = ~date, y = ~no_tourist_all, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Total Number of Tourists by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Total Number of Tourists\"))\n\n\n\n\n\n\n\nThe plot on the number of foreign tourists is similar to the previous one on the total number of tourists. The key difference was the lack of foreign tourists during the heavy pandemic restrictions between Apr 2020 to Nov 2021.\n\nplot_ly(tourism1, x = ~date, y = ~no_tourist_foreign, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Number of Foreign Tourists by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Number of Foreign Tourists\"))\n\n\n\n\n\n\n\nThe plot on the number of domestic tourists is similar to the plot on the total number of tourists.\n\nplot_ly(tourism1, x = ~date, y = ~no_tourist_thai, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Number of Domestic Tourists by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Number of Domestic Tourists\"))\n\n\n\n\n\n\n\nThe plot showing the number of tourists who stayed in travel accommodations closely mirrors the plot for the total number of tourists, though it’s noteworthy that the rate of growth and decline in accommodation figures differs slightly from the overall tourist numbers.\n\nplot_ly(tourism1, x = ~date, y = ~no_tourist_stay, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Number of Tourists with Travel Accommodation by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Number of Tourists with Travel Accommodation\"))\n\n\n\n\n\n\n\nWe see similar impact of COVID-19 restrictions on occupancy rate. We observed more fluctuations in occupancy rate compared to other tourism economic indicators.\n\nplot_ly(tourism1, x = ~date, y = ~ratio_tourist_stay, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Occupancy Rate by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Occupancy Rate (%)\"))\n\n\n\n\n\n\n\nThe plot shows that the total tourism revenue (both domestic and international) was highest in Bangkok, followed by Phuket. We see similar impact of COVID-19 restrictions on the overall trend. However, it seems that total revenue were growing slower than total number of tourists during the later stage of the pandemic and post-Covid.\n\nplot_ly(tourism1, x = ~date, y = ~revenue_all, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Total Tourism Revenue by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Total Tourism Revenue\"))\n\n\n\n\n\n\n\nThe plot on the revenue generated by foreign tourists is similar to the plot on the total revenue. The key difference was the diminished revenue during the heavy pandemic restrictions between Apr 2020 to Nov 2021.\n\nplot_ly(tourism1, x = ~date, y = ~revenue_foreign, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Revenue Generated by Foreign Tourists by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Revenue Generated by Foreign Tourists\"))\n\n\n\n\n\n\n\nThe general trend on the revenue generated by domestic tourists is similar to the plot on the number of domestic tourists.\n\nplot_ly(tourism1, x = ~date, y = ~revenue_thai, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Revenue Generated by Domestic Tourists by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Revenue Generated by Domestic Tourists\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#selected-key-tourism-economic-indicators",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#selected-key-tourism-economic-indicators",
    "title": "Take Home Ex 2: Spatial and Spatio-Temporal Analysis of COVID-19’s Impact on Thailand’s Tourism Economy",
    "section": "2.4 Selected Key Tourism Economic Indicators",
    "text": "2.4 Selected Key Tourism Economic Indicators\nBased on the EDA, the following key indicators were selected to analyse the impact of COVID-19 on Thailand’s tourism economy. To ensure the scope of the study remained focused, we removed similar indicators and prioritised those that offer distinct insights into tourism demand and economic impact.\n\nTotal Number of Tourists (Domestic and Foreigners): This captures overall tourism demand and helps track the effects of COVID-19 restrictions and recovery across provinces.\nPercentage of Tourists who are Foreigners: This metric highlights the contribution of international tourism and reflects how travel restrictions impacted foreign visitor flows.\nOccupancy Rate: This indicates the usage and health of the hospitality sector.\nTotal Revenue (Domestic and Foreigners): This measures the revenue generation from the tourism industry.\nAverage Revenue per Tourist:This helps assess the spending behavior of tourists.\n\n\n1. Data Wrangling2. EDA: Percentage of Foreign Tourists3. EDA: Revenue per Tourist\n\n\nThe following sub-steps were further undertaken to transform the tourism dataset:\n\nCreated two new fields using mutate(): “Percentage of Tourists who are Foreigners” and “Average Revenue per Tourist”\nReplace missing values in the two new fields with 0. The are missing values due to denominator being 0. We replaced the missing values with 0 on grounds that there were indeed no foreign tourists and no tourist expenditure, respectively.\nSelected the necessary variables for the study using select(), and simultaneously renamed ratio_tourist_stay to occupancy_rate.\n\n\ntourism2 &lt;- tourism1 %&gt;%\n  mutate(percentage_foreign = no_tourist_foreign / no_tourist_all,\n         revenue_per_tourist = revenue_all / no_tourist_all,\n         percentage_foreign = replace_na(percentage_foreign, 0),\n         revenue_per_tourist = replace_na(revenue_per_tourist, 0)) %&gt;%\n  select(c(\"date\", \"province\", \"no_tourist_all\", \"no_tourist_foreign\", \"percentage_foreign\", \"occupancy_rate\" = \"ratio_tourist_stay\", \"revenue_all\", \"revenue_per_tourist\"))\nglimpse(tourism2)\n\nRows: 3,850\nColumns: 8\n$ date                &lt;date&gt; 2019-01-01, 2019-01-01, 2019-01-01, 2019-01-01, 2…\n$ province            &lt;chr&gt; \"Amnat Charoen\", \"Ang Thong\", \"Bangkok\", \"Bueng Ka…\n$ no_tourist_all      &lt;dbl&gt; 21790, 104097, 5959075, 65978, 185563, 270438, 790…\n$ no_tourist_foreign  &lt;dbl&gt; 818, 5281, 2425014, 278, 5487, 3731, 559, 718, 695…\n$ percentage_foreign  &lt;dbl&gt; 0.037540156, 0.050731529, 0.406944702, 0.004213526…\n$ occupancy_rate      &lt;dbl&gt; 65.15, 71.21, 93.37, 72.95, 71.26, 59.40, 79.31, 6…\n$ revenue_all         &lt;dbl&gt; 34510000, 132070000, 81926490000, 137810000, 36416…\n$ revenue_per_tourist &lt;dbl&gt; 1583.754, 1268.721, 13748.189, 2088.727, 1962.460,…\n\n\nWe checked that all columns do not have any missing values.\n\ncolMeans(is.na(tourism2))\n\n               date            province      no_tourist_all  no_tourist_foreign \n                  0                   0                   0                   0 \n percentage_foreign      occupancy_rate         revenue_all revenue_per_tourist \n                  0                   0                   0                   0 \n\n\n\n\nWe see similar impact of COVID restrictions on the percentage of foreign tourists. However, it is also observed that this indicator had more fluctuations.\n\nplot_ly(tourism2, x = ~date, y = ~percentage_foreign, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"% Tourists who are Foreigners by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"% Tourists who are Foreigners\"))\n\n\n\n\n\n\n\nOn the other hand, we see that the revenue per tourist is generally stable, except for a spike in Apr 2020. We also observed that there was an increasing trend in expenditure for tourists visiting Phuket during post-Covid.\n\nplot_ly(tourism2, x = ~date, y = ~revenue_per_tourist, color = ~province, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Revenue per Tourist by Province (2019-2023)\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Revenue per Tourist\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#cross-sectional-dataset",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#cross-sectional-dataset",
    "title": "Take Home Ex 2: Spatial and Spatio-Temporal Analysis of COVID-19’s Impact on Thailand’s Tourism Economy",
    "section": "2.5. Cross-sectional Dataset",
    "text": "2.5. Cross-sectional Dataset\nFor the cross-sectional analysis, we classified the monthly data into three distinct time periods based on the Thai government’s response to the COVID-19 pandemic (https://en.wikipedia.org/wiki/COVID-19_pandemic_in_Thailand):\n\nPre-Covid (up to December 2019): Prior to January 2020, Thailand experienced no significant impacts from COVID-19, as the virus had not yet spread globally. Economic and social activities proceeded as normal until the end of 2019.\nCovid (January 2020 to April 2022): During this period, strict travel restrictions were imposed, significantly affecting tourism and related economic activities.\nPost-Covid (from May 2022 onward): Starting May 1, 2022, fully vaccinated travelers no longer required RT-PCR tests upon arrival, and the Thailand Pass system remained in place. ATK testing became voluntary, signaling a shift toward relaxed travel regulations and a gradual return to normalcy.\n\n\n1. Aggregation to Time Period2. Combining Datasets\n\n\nWe use case_when() to classify the months to the three time periods. We then use group_by() and summarise() to aggregate the variables by averaging the monthly data.\n\ntourism_period &lt;- tourism2 %&gt;%\n  mutate(period = case_when(date &lt;= ymd(\"2019-12-01\") ~ \"Pre-covid\",\n                            date &gt;= ymd(\"2022-05-01\") ~ \"Post-covid\",\n                            TRUE ~ \"Covid\")) %&gt;%\n  group_by(period, province) %&gt;%\n  summarise(avg_no_tourist_all = mean(no_tourist_all),\n            avg_percentage_foreign = sum(no_tourist_foreign) / sum(no_tourist_all),\n            avg_occupancy_rate = mean(occupancy_rate),\n            avg_revenue_all = mean(revenue_all),\n            avg_revenue_per_tourist = sum(revenue_all) / sum(no_tourist_all)) %&gt;%\n  ungroup()\nglimpse(tourism_period)\n\nRows: 231\nColumns: 7\n$ period                  &lt;chr&gt; \"Covid\", \"Covid\", \"Covid\", \"Covid\", \"Covid\", \"…\n$ province                &lt;chr&gt; \"Amnat Charoen\", \"Ang Thong\", \"Bangkok\", \"Buen…\n$ avg_no_tourist_all      &lt;dbl&gt; 12180.68, 30466.68, 1662699.18, 28004.96, 9144…\n$ avg_percentage_foreign  &lt;dbl&gt; 0.005265951, 0.009697949, 0.133531263, 0.00386…\n$ avg_occupancy_rate      &lt;dbl&gt; 21.53821, 17.84571, 22.17143, 28.09714, 29.318…\n$ avg_revenue_all         &lt;dbl&gt; 15132500, 32557500, 13380411429, 40460714, 177…\n$ avg_revenue_per_tourist &lt;dbl&gt; 1242.336, 1068.626, 8047.404, 1444.769, 1936.2…\n\n\n\n\nWe use left_join() to combine the aggregated dataset to the geospatial dataset.\n\nprovince_tourism_period &lt;- provinces2 %&gt;%\n  left_join(tourism_period, by = \"province\") \nglimpse(province_tourism_period)\n\nRows: 231\nColumns: 9\n$ province                &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Samut Prakan…\n$ period                  &lt;chr&gt; \"Covid\", \"Post-covid\", \"Pre-covid\", \"Covid\", \"…\n$ avg_no_tourist_all      &lt;dbl&gt; 1662699.18, 3783036.10, 5580546.83, 82272.54, …\n$ avg_percentage_foreign  &lt;dbl&gt; 0.133531263, 0.352713896, 0.371718575, 0.17966…\n$ avg_occupancy_rate      &lt;dbl&gt; 22.17143, 58.41800, 82.20333, 16.21857, 39.562…\n$ avg_revenue_all         &lt;dbl&gt; 13380411429, 40450215000, 88984480000, 1316175…\n$ avg_revenue_per_tourist &lt;dbl&gt; 8047.404, 10692.527, 15945.477, 1599.774, 1432…\n$ geometry                &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((674339.8 15..., M…\n$ centroid                &lt;POINT [m]&gt; POINT (675514.6 1523087), POINT (675514.…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands-on Ex 8",
    "section": "",
    "text": "Geospatial predictive modeling is based on the understanding that events or phenomena are not randomly or uniformly distributed across space. Instead, their occurrences are influenced by a variety of geospatial factors such as infrastructure, sociocultural dynamics, topography, and environmental conditions. These factors constrain and shape where events are likely to occur. Geospatial predictive modeling aims to capture these influences by analysing the spatial correlations between historical event locations and the environmental variables that represent these constraints and influences.\nIn this exercise, we will undertake the following steps to build a predictive model using the geographical random forest method:\n\nPrepare Train and Test Datasets using appropriate data sampling methods.\nCalibrate Predictive Models using both geospatial statistical learning and machine learning methods.\nCompare and Select the Best Model which provides the most accurate predictions.\nPredict Future Outcomes using the best-calibrated model.\n\nThe following R packages will be used in geospatial predictive modelling.\n\npacman::p_load(sf, spdep, GWmodel, SpatialML, tmap, rsample, Metrics, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#convert-sf-train-dataframe-to-sp-dataframe",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#convert-sf-train-dataframe-to-sp-dataframe",
    "title": "Hands-on Ex 8",
    "section": "1. Convert sf train dataframe to sp dataframe",
    "text": "1. Convert sf train dataframe to sp dataframe\n\ntrain_data_sp &lt;- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.38, 42623.68, 28217.3, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#computing-adaptive-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#computing-adaptive-bandwidth",
    "title": "Hands-on Ex 8",
    "section": "2. Computing adaptive bandwidth",
    "text": "2. Computing adaptive bandwidth\n\nbw_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 6395 CV score: 3.60536e+13 \nAdaptive bandwidth: 3960 CV score: 3.320316e+13 \nAdaptive bandwidth: 2455 CV score: 2.928339e+13 \nAdaptive bandwidth: 1524 CV score: 2.550955e+13 \nAdaptive bandwidth: 950 CV score: 1.956318e+13 \nAdaptive bandwidth: 593 CV score: 1.583469e+13 \nAdaptive bandwidth: 375 CV score: 1.310038e+13 \nAdaptive bandwidth: 237 CV score: 1.113155e+13 \nAdaptive bandwidth: 155 CV score: 9.572071e+12 \nAdaptive bandwidth: 101 CV score: 8.456967e+12 \nAdaptive bandwidth: 71 CV score: 7.605094e+12 \nAdaptive bandwidth: 49 CV score: 6.965773e+12 \nAdaptive bandwidth: 38 CV score: 1.181786e+13 \nAdaptive bandwidth: 58 CV score: 7.275194e+12 \nAdaptive bandwidth: 45 CV score: 6.872011e+12 \nAdaptive bandwidth: 41 CV score: 6.793687e+12 \nAdaptive bandwidth: 40 CV score: 6.780976e+12 \nAdaptive bandwidth: 38 CV score: 1.181786e+13 \nAdaptive bandwidth: 40 CV score: 6.780976e+12"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adpative-bandwith-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adpative-bandwith-gwr-model",
    "title": "Hands-on Ex 8",
    "section": "3. Building adpative bandwith GWR model",
    "text": "3. Building adpative bandwith GWR model\n\ngwr_adaptive &lt;- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\ngwr_adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-21 07:12:41.855848 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data_sp, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 10335\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\n   Coefficients:\n                              Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)              107601.073  10601.261  10.150  &lt; 2e-16 ***\n   floor_area_sqm             2780.698     90.579  30.699  &lt; 2e-16 ***\n   storey_order              14299.298    339.115  42.167  &lt; 2e-16 ***\n   remaining_lease_mths        344.490      4.592  75.027  &lt; 2e-16 ***\n   PROX_CBD                 -16930.196    201.254 -84.124  &lt; 2e-16 ***\n   PROX_ELDERLYCARE         -14441.025    994.867 -14.516  &lt; 2e-16 ***\n   PROX_HAWKER              -19265.648   1273.597 -15.127  &lt; 2e-16 ***\n   PROX_MRT                 -32564.272   1744.232 -18.670  &lt; 2e-16 ***\n   PROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\n   PROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\n   PROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\n   WITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  &lt; 2e-16 ***\n   WITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  &lt; 2e-16 ***\n   WITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\n   WITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  &lt; 2e-16 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 61650 on 10320 degrees of freedom\n   Multiple R-squared: 0.7373\n   Adjusted R-squared: 0.737 \n   F-statistic:  2069 on 14 and 10320 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 3.922202e+13\n   Sigma(hat): 61610.08\n   AIC:  257320.2\n   AICc:  257320.3\n   BIC:  247249\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 40 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -3.7385e+08 -4.7734e+05 -8.2999e+03  5.5034e+05\n   floor_area_sqm           -2.8629e+04  1.4475e+03  2.2999e+03  3.3897e+03\n   storey_order              3.3187e+03  8.5905e+03  1.0826e+04  1.3396e+04\n   remaining_lease_mths     -1.4438e+03  2.6062e+02  3.9049e+02  5.2861e+02\n   PROX_CBD                 -1.0842e+07 -5.7712e+04 -1.3792e+04  2.6532e+04\n   PROX_ELDERLYCARE         -3.6203e+07 -4.0637e+04  1.0567e+04  6.1073e+04\n   PROX_HAWKER              -2.3969e+08 -5.1360e+04  2.9612e+03  6.4265e+04\n   PROX_MRT                 -1.2808e+07 -1.0489e+05 -4.9352e+04  5.0924e+03\n   PROX_PARK                -6.5948e+06 -4.8678e+04 -8.7189e+02  5.3407e+04\n   PROX_MALL                -1.8125e+07 -7.4216e+04 -1.3974e+04  4.9828e+04\n   PROX_SUPERMARKET         -4.5733e+06 -6.3446e+04 -1.7445e+04  3.5572e+04\n   WITHIN_350M_KINDERGARTEN -4.4285e+05 -6.0020e+03  9.1166e+01  4.7236e+03\n   WITHIN_350M_CHILDCARE    -1.0274e+05 -2.2353e+03  2.6660e+02  2.6409e+03\n   WITHIN_350M_BUS          -1.1794e+05 -1.4726e+03  1.1618e+02  1.7595e+03\n   WITHIN_1KM_PRISCH        -6.6487e+05 -5.5955e+03  2.6942e+02  5.7472e+03\n                                  Max.\n   Intercept                1.6501e+08\n   floor_area_sqm           5.1150e+04\n   storey_order             2.9540e+04\n   remaining_lease_mths     1.8122e+03\n   PROX_CBD                 2.5687e+07\n   PROX_ELDERLYCARE         8.2802e+07\n   PROX_HAWKER              5.9665e+06\n   PROX_MRT                 2.0175e+08\n   PROX_PARK                1.6737e+07\n   PROX_MALL                1.0485e+07\n   PROX_SUPERMARKET         3.9830e+06\n   WITHIN_350M_KINDERGARTEN 6.7207e+05\n   WITHIN_350M_CHILDCARE    1.0791e+05\n   WITHIN_350M_BUS          3.7317e+04\n   WITHIN_1KM_PRISCH        5.1539e+05\n   ************************Diagnostic information*************************\n   Number of data points: 10335 \n   Effective number of parameters (2trace(S) - trace(S'S)): 1730.084 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 8604.916 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 238870.5 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 237035.5 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 238207.6 \n   Residual sum of squares: 4.828564e+12 \n   R-square value:  0.9676612 \n   Adjusted R-square value:  0.9611585 \n\n   ***********************************************************************\n   Program stops at: 2024-10-21 07:13:19.376598"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#convert-sf-test-dataframe-to-sp-dataframe",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#convert-sf-test-dataframe-to-sp-dataframe",
    "title": "Hands-on Ex 8",
    "section": "4. Convert sf test dataframe to sp dataframe",
    "text": "4. Convert sf test dataframe to sp dataframe\n\ntest_data_sp &lt;- test_data %&gt;%\n  as_Spatial()\ntest_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 5566 \nextent      : 11597.25, 42623.72, 28287.71, 48669.68  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,         PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       230888,             74,            1,                  546, 1.00583660772922, 3.34897933104965e-07, 0.0474019664161957, 0.0414043955932523, 0.0502664084494264, 0.0907500295577619,                0, 4.55547870890763e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1050000,            138,           14,                 1151,  19.632402730488,     3.30163731686804,   2.83106651960209,   2.13060636038504,   2.41313695915468,   10.6169590126272, 2.26056404492346,     0.79249074802552,     1.53786629004208,                        7,                    16, ..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#computing-adaptive-bandwidth-for-test-set",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#computing-adaptive-bandwidth-for-test-set",
    "title": "Hands-on Ex 8",
    "section": "5. Computing adaptive bandwidth for test set",
    "text": "5. Computing adaptive bandwidth for test set\n\ngwr_bw_test_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 3447 CV score: 1.902156e+13 \nAdaptive bandwidth: 2138 CV score: 1.752645e+13 \nAdaptive bandwidth: 1328 CV score: 1.556298e+13 \nAdaptive bandwidth: 828 CV score: 1.357496e+13 \nAdaptive bandwidth: 518 CV score: 1.03075e+13 \nAdaptive bandwidth: 327 CV score: 8.348382e+12 \nAdaptive bandwidth: 208 CV score: 6.860524e+12 \nAdaptive bandwidth: 135 CV score: 5.969492e+12 \nAdaptive bandwidth: 89 CV score: 5.242263e+12 \nAdaptive bandwidth: 62 CV score: 4.742763e+12 \nAdaptive bandwidth: 43 CV score: 4.357877e+12 \nAdaptive bandwidth: 34 CV score: 4.125835e+12 \nAdaptive bandwidth: 25 CV score: 4.044162e+12 \nAdaptive bandwidth: 23 CV score: 3.159454e+13 \nAdaptive bandwidth: 30 CV score: 4.07489e+12 \nAdaptive bandwidth: 25 CV score: 4.044162e+12"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#predicting-values-from-test-set",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#predicting-values-from-test-set",
    "title": "Hands-on Ex 8",
    "section": "6. Predicting values from test set",
    "text": "6. Predicting values from test set\n\ngwr_pred &lt;- gwr.predict(formula = resale_price ~\n                          floor_area_sqm + storey_order +\n                          remaining_lease_mths + PROX_CBD + \n                          PROX_ELDERLYCARE + PROX_HAWKER + \n                          PROX_MRT + PROX_PARK + PROX_MALL + \n                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                          WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n                          WITHIN_1KM_PRISCH, \n                        data = train_data_sp, \n                        predictdata = test_data_sp, \n                        bw=40, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extracting-coordinates-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extracting-coordinates-data",
    "title": "Hands-on Ex 8",
    "section": "1. Extracting coordinates data",
    "text": "1. Extracting coordinates data\n\ncoords &lt;- st_coordinates(mdata)\ncoords_train &lt;- st_coordinates(train_data)\ncoords_test &lt;- st_coordinates(test_data)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drop-geometry-field",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drop-geometry-field",
    "title": "Hands-on Ex 8",
    "section": "2. Drop geometry field",
    "text": "2. Drop geometry field\n\ntrain_data &lt;- train_data %&gt;% \n  st_drop_geometry()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-random-forest-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-random-forest-model",
    "title": "Hands-on Ex 8",
    "section": "3. Building random forest model",
    "text": "3. Building random forest model\n\nset.seed(1234)\nrf &lt;- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data)\nrf\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       731404460 \nR squared (OOB):                  0.9493789"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-geographical-random-forest-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-geographical-random-forest-model",
    "title": "Hands-on Ex 8",
    "section": "4. Building geographical random forest model",
    "text": "4. Building geographical random forest model\n\nset.seed(1234)\ngwRF_adaptive &lt;- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n\n\nNumber of Observations: 10335\n\n\nNumber of Independent Variables: 14\n\n\nKernel: Adaptive\nNeightbours: 55\n\n\n\n--------------- Global ML Model Summary ---------------\n\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data, num.trees = 500, mtry = 4, importance = \"impurity\",      num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       697593819 \nR squared (OOB):                  0.9517189 \n\n\n\nImportance:\n\n\n          floor_area_sqm             storey_order     remaining_lease_mths \n            7.413197e+12             1.538950e+13             2.890637e+13 \n                PROX_CBD         PROX_ELDERLYCARE              PROX_HAWKER \n            5.310066e+13             7.285092e+12             5.568548e+12 \n                PROX_MRT                PROX_PARK                PROX_MALL \n            7.369745e+12             4.894344e+12             4.223286e+12 \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n            2.793853e+12             1.018586e+12             1.710374e+12 \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n            1.589501e+12             6.794634e+12 \n\n\n\nMean Square Error (Not OOB): 173951416.766\n\n\nR-squared (Not OOB) %: 98.796\n\n\nAIC (Not OOB): 196129.252\n\n\nAICc (Not OOB): 196129.299\n\n\n\n--------------- Local Model Summary ---------------\n\n\n\nResiduals OOB:\n\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-223741.4  -13987.3     606.2     235.3   15192.3  335750.0 \n\n\n\nResiduals Predicted (Not OOB):\n\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-78149.08  -3485.95     39.62     49.72   3926.34  84269.20 \n\n\n\nLocal Variable Importance:\n\n\n                                  Min          Max        Mean         StD\nfloor_area_sqm           0.000000e+00 408884506367 18191949743 41412533072\nstorey_order             3.053347e+08 239214766919 16395601085 23778099968\nremaining_lease_mths     7.023156e+08 534922967842 34099078923 70259552098\nPROX_CBD                 3.886558e+07 386692469195 12146833994 29269645438\nPROX_ELDERLYCARE         4.521523e+07 345248816471 10598515632 24593733481\nPROX_HAWKER              5.561952e+07 339839272417 10560193464 23403507902\nPROX_MRT                 4.048051e+07 301168924268  9885134568 21109287484\nPROX_PARK                4.422850e+07 325569863261  9351515558 19533500221\nPROX_MALL                4.860853e+07 431018019989 11258946900 27548669307\nPROX_SUPERMARKET         4.706035e+07 418122867028 10814817194 26591511435\nWITHIN_350M_KINDERGARTEN 0.000000e+00 177280085005  2850795615 12912278804\nWITHIN_350M_CHILDCARE    0.000000e+00 257049952363  5522999260 18066548688\nWITHIN_350M_BUS          9.523810e+00 190493316497  4741930075 11856144082\nWITHIN_1KM_PRISCH        0.000000e+00 188535556592  1782218071  7231444059\n\n\n\nMean squared error (OOB): 844625879.862\n\n\nR-squared (OOB) %: 94.154\n\n\nAIC (OOB): 212459.769\n\n\nAICc (OOB): 212459.815\n\n\nMean squared error Predicted (Not OOB): 73850751.028\n\n\nR-squared Predicted (Not OOB) %: 99.489\n\n\nAIC Predicted (Not OOB): 187274.949\n\n\nAICc Predicted (Not OOB): 187274.995\n\n\n\nCalculation time (in seconds): 3.26"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#predicting-values-from-test-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#predicting-values-from-test-data",
    "title": "Hands-on Ex 8",
    "section": "5. Predicting values from test data",
    "text": "5. Predicting values from test data\n\ntest_data &lt;- cbind(test_data, coords_test) %&gt;%\n  st_drop_geometry()\n\n\ngwRF_pred &lt;- predict.grf(gwRF_adaptive, \n                           test_data, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#convert-predicting-output-into-dataframe",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#convert-predicting-output-into-dataframe",
    "title": "Hands-on Ex 8",
    "section": "6. Convert predicting output into dataframe",
    "text": "6. Convert predicting output into dataframe\n\nGRF_pred_df &lt;- as.data.frame(gwRF_pred)\ntest_data_p &lt;- cbind(test_data, GRF_pred_df)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#evaluating-using-root-mean-square-error",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#evaluating-using-root-mean-square-error",
    "title": "Hands-on Ex 8",
    "section": "7. Evaluating using root mean square error",
    "text": "7. Evaluating using root mean square error\n\nrmse(test_data_p$resale_price, \n     test_data_p$gwRF_pred)\n\n[1] 27335.05"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-predicted-valued",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-predicted-valued",
    "title": "Hands-on Ex 8",
    "section": "8. Visualising predicted valued",
    "text": "8. Visualising predicted valued\n\nggplot(data = test_data_p,\n       aes(x = gwRF_pred,\n           y = resale_price)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05B.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05B.html",
    "title": "Hands-on Ex 5B",
    "section": "",
    "text": "1. Overview\nThis exercise introduces Local Measures of Spatial Autocorrelation (LMSA), which are tools used to examine how observations in a dataset relate to their nearby surroundings. Unlike global measures, which summarize patterns across an entire map, LMSA provides a more detailed look by calculating scores for individual locations, helping us understand local spatial structures and variations.\nThe key idea behind LMSA is similar to global spatial autocorrelation, where we assess how similar or dissimilar values are when compared with their neighbors. In some cases, the global measures can even be broken down into a set of local measures, allowing for a more granular analysis. For example, Local Indicators of Spatial Association (LISA) are a type of LMSA that decomposes global spatial patterns into local components, showing where clusters of similar or dissimilar values occur.\nAdditionally, we’ll explore Getis-Ord’s Gi* statistics as another LMSA method. This provides complementary information, helping us identify hot and cold spots of geographically referenced data, further enriching our understanding of spatial relationships.\nA key R package for LMSA analysis is the spdep package.\n\npacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n2. Importing & Transforming Data\nTwo datasets will be used in this hands-on exercise:\n\nHunan County Boundary Layer: A geospatial dataset in ESRI shapefile format.\nHunan_2012.csv: A CSV file containing selected local development indicators for Hunan in 2012.\n\n\nHunan shapefileHunan 2012 development indicatorsCombining datasets\n\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\") \n\nReading layer `Hunan' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Hands-on_Ex/Hands-on_Ex05/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n# crs = 4549 if need to convert\n\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(hunan2012)\n\nRows: 88\nColumns: 29\n$ County      &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changn…\n$ City        &lt;chr&gt; \"Yiyang\", \"Chenzhou\", \"Changde\", \"Hunan West\", \"Zhuzhou\", …\n$ avg_wage    &lt;dbl&gt; 30544, 28058, 31935, 30843, 31251, 28518, 54540, 28597, 33…\n$ deposite    &lt;dbl&gt; 10967.0, 4598.9, 5517.2, 2250.0, 8241.4, 10860.0, 24332.0,…\n$ FAI         &lt;dbl&gt; 6831.7, 6386.1, 3541.0, 1005.4, 6508.4, 7920.0, 33624.0, 1…\n$ Gov_Rev     &lt;dbl&gt; 456.72, 220.57, 243.64, 192.59, 620.19, 769.86, 5350.00, 1…\n$ Gov_Exp     &lt;dbl&gt; 2703.0, 1454.7, 1779.5, 1379.1, 1947.0, 2631.6, 7885.5, 11…\n$ GDP         &lt;dbl&gt; 13225.0, 4941.2, 12482.0, 4087.9, 11585.0, 19886.0, 88009.…\n$ GDPPC       &lt;dbl&gt; 14567, 12761, 23667, 14563, 20078, 24418, 88656, 10132, 17…\n$ GIO         &lt;dbl&gt; 9276.90, 4189.20, 5108.90, 3623.50, 9157.70, 37392.00, 513…\n$ Loan        &lt;dbl&gt; 3954.90, 2555.30, 2806.90, 1253.70, 4287.40, 4242.80, 4053…\n$ NIPCR       &lt;dbl&gt; 3528.3, 3271.8, 7693.7, 4191.3, 3887.7, 9528.0, 17070.0, 3…\n$ Bed         &lt;dbl&gt; 2718, 970, 1931, 927, 1449, 3605, 3310, 582, 2170, 2179, 1…\n$ Emp         &lt;dbl&gt; 494.310, 290.820, 336.390, 195.170, 330.290, 548.610, 670.…\n$ EmpR        &lt;dbl&gt; 441.4, 255.4, 270.5, 145.6, 299.0, 415.1, 452.0, 127.6, 21…\n$ EmpRT       &lt;dbl&gt; 338.0, 99.4, 205.9, 116.4, 154.0, 273.7, 219.4, 94.4, 174.…\n$ Pri_Stu     &lt;dbl&gt; 54.175, 33.171, 19.584, 19.249, 33.906, 81.831, 59.151, 18…\n$ Sec_Stu     &lt;dbl&gt; 32.830, 17.505, 17.819, 11.831, 20.548, 44.485, 39.685, 7.…\n$ Household   &lt;dbl&gt; 290.4, 104.6, 148.1, 73.2, 148.7, 211.2, 300.3, 76.1, 139.…\n$ Household_R &lt;dbl&gt; 234.5, 121.9, 135.4, 69.9, 139.4, 211.7, 248.4, 59.6, 110.…\n$ NOIP        &lt;dbl&gt; 101, 34, 53, 18, 106, 115, 214, 17, 55, 70, 44, 84, 74, 17…\n$ Pop_R       &lt;dbl&gt; 670.3, 243.2, 346.0, 184.1, 301.6, 448.2, 475.1, 189.6, 31…\n$ RSCG        &lt;dbl&gt; 5760.60, 2386.40, 3957.90, 768.04, 4009.50, 5220.40, 22604…\n$ Pop_T       &lt;dbl&gt; 910.8, 388.7, 528.3, 281.3, 578.4, 816.3, 998.6, 256.7, 45…\n$ Agri        &lt;dbl&gt; 4942.253, 2357.764, 4524.410, 1118.561, 3793.550, 6430.782…\n$ Service     &lt;dbl&gt; 5414.5, 3814.1, 14100.0, 541.8, 5444.0, 13074.6, 17726.6, …\n$ Disp_Inc    &lt;dbl&gt; 12373, 16072, 16610, 13455, 20461, 20868, 183252, 12379, 1…\n$ RORP        &lt;dbl&gt; 0.7359464, 0.6256753, 0.6549309, 0.6544614, 0.5214385, 0.5…\n$ ROREmp      &lt;dbl&gt; 0.8929619, 0.8782065, 0.8041262, 0.7460163, 0.9052651, 0.7…\n\n\n\n\nThe GDP per Capita (GDPCC) from hunan2012 is needed to be added into hunan’s sf dataframe. The datasets are joined by County.\n\nhunan &lt;- left_join(hunan, hunan2012, by = \"County\") %&gt;%\n  select(1:4, 7, 15)\nglimpse(hunan)\n\nRows: 88\nColumns: 7\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…\n\n\n\n\n\n\n\n3. Geovisualisation & Choropleth Map\nA basemap and a choropleth map displaying GDP per capita are plotted.\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n4. Preparing for Local Indicators of Spatial Association (LISA)\nBefore we can compute local spatial autocorrelation statistics, we need to perform the following steps:\n\n1. Compute contiguity spatial weights2. Compute row-standardised weights matrix\n\n\nThe following computes the Queen contiguity weight matrix.\nThe summary report indicates that there are 88 area units in Hunan. The most connected unit has 11 neighboring units, while two units have only one neighbor each.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\nNext, we need to assign weights to each neighboring polygon. In this case, we will use equal weights (style = “W”), meaning each neighbor receives a weight of 1/(no. of neighbors). These weights are then used to calculate the weighted sum of income values from neighboring counties. While this method is straightforward and intuitive, it has a limitation: polygons on the edges of the study area may have fewer neighbors, which can lead to over- or under-estimation of spatial autocorrelation. For simplicity, we’ll use the “W” option here, but it’s worth noting that more robust alternatives, such as style = “B”, are available.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n5. Local Moran’s I\n\n1. Compute local Moran’s I2. Map local Moran’s I3. Map local Moran’s I p-values4. Mapping both local Moran’s I values and p-values\n\n\nThe localmoran() function from the spdep package is used to compute local Moran’s I values, based on the given set of zi values and a listw object containing neighborhood weights.\nThe code chunks below compute local Moran’s I for GDPPC2012 at the county level.\n\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nThe code chunk below list the content of the local Moran matrix derived by using printCoefmat(). The columns are as follows:\n\nIi: The local Moran’s I statistic.\nE.Ii: The expected value of the local Moran’s I under the randomization hypothesis.\nVar.Ii: The variance of the local Moran’s I under the randomization hypothesis.\nZ.Ii: The standardized value (z-score) of the local Moran’s I.\nPr(): The p-value of the local Moran’s I, indicating the statistical significance.\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n\nWe append the local Moran’s I dataframe (localMI) to the hunan SpatialPolygonDataFrame.\n\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\nThe choropleth of local Moran’s I values can be plotted as follows:\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nThe choropleth shows evidence of both positive and negative Ii values. However, it’s important to consider the p-values associated with these values, as mentioned above.\nThe code chunks below generate a choropleth map of Moran’s I p-values using functions from the tmap package.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nFor effective interpretation, it’s best to display both the local Moran’s I values map and the corresponding p-values map side by side.\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n6. LISA Cluster Map\nThe LISA Cluster Map displays significant locations, color-coded by the type of spatial autocorrelation. Before generating the LISA cluster map, the first step is to plot the Moran scatterplot.\n\n1. Moran scatterplot2. Moran scatterplot with standardised variable3. Prepare LISA map classes4. Plot LISA map5. Plot both Moran’s I and LISA map6. Key takeaways\n\n\nThe Moran scatterplot illustrates the relationship between the values of a chosen attribute at each location and the average value of that attribute in neighboring locations.\nThe Moran scatterplot is divided into four quadrants. The top-right quadrant represents areas with high GDPPC, surrounded by other areas with similarly high GDPPC. These are the “high-high” locations\n\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\nFirst, we use the scale() function to center and scale the variable. Centering is done by subtracting the mean (excluding NAs) from each value, and scaling is achieved by dividing the centered values by their standard deviations.\n\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector()\n\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\nThe following steps are performed before plotting the LISA cluster map:\n\nDerive the spatially lagged variable of interest (GDPPC) and center it around its mean.\nCenter the local Moran’s I values around their mean.\nSet a statistical significance level for the local Moran’s I at 0.05.\nDefine the categories: low-low (1), low-high (2), high-low (3), and high-high (4).\nFinally, assign non-significant Moran’s I values to category 0.\n\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I &lt;- localMI[,1]   \nsignif &lt;- 0.05       \nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4    \nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\nWe plot the LISA map as follows:\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\nFor effective interpretation, it’s best to display both GDPCC values map and the corresponding LISA cluster map side by side.\nHere’s the observations of the LISA map:\n\nRed Areas (High-High Clusters): These are areas with high GDPPC values surrounded by other areas with similarly high GDPPC. In the northeastern part of the region, you can see the high-GDPPC cluster that aligns with the darker orange areas in the GDPPC map.\nBlue Areas (Low-Low Clusters): These represent areas with low GDPPC surrounded by similarly low GDPPC values. In this case, the cluster to the west is consistent with the lighter-colored areas (lower GDPPC) on the GDPPC map.\nLight Blue Areas (Low-High Outliers): These areas have low GDPPC but are surrounded by areas with higher GDPPC values. This signifies outlier behavior where local GDPPC is lower than expected compared to its neighbors.\nWhite Areas (Insignificant): These areas are not statistically significant in terms of spatial autocorrelation, meaning there is no strong clustering pattern.\n\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\n\n\nKey takeaways:\n\nHigh-High Cluster (Northeast): The high GDPPC area in the northeast is a clear high-high cluster, which means this area has high economic performance relative to surrounding areas, and this pattern is statistically significant.\nLow-Low Cluster (West): The low GDPPC areas in the west are part of a low-low cluster, indicating a region where GDPPC values are consistently low in relation to their neighbors.\nOutliers: The low-high outlier (light blue) suggests an area that underperforms in GDPPC relative to surrounding areas, which might warrant further investigation for potential disparities.\n\n\n\n\n\n\n7. Hot Spot and Cold Spot Area Analysis\nIn addition to detecting clusters and outliers, localized spatial statistics can also be used to identify hot spots and cold spots. The term “hot spot” is commonly used across various disciplines to describe a region with values significantly higher than those of its surroundings.\nAn alternative spatial statistic for detecting spatial anomalies is the Getis-Ord G-statistic. This method examines neighbors within a defined proximity to identify clusters of either high or low values. Statistically significant hot spots are identified as areas where high values cluster, meaning neighboring areas also exhibit high values.\nThe analysis involves three steps:\n\nDeriving the spatial weight matrix\nComputing the Gi statistic\nMapping the Gi statistic\n\n\n1. Derive the centroid2. Determine the upper limit cut-off distance3. Compute fixed distance weight matrix4. Compute adaptive distance weight matrix\n\n\nWhile spatial autocorrelation is based on units sharing borders, the Getis-Ord statistic defines neighbors based on distance. Therefore, we need points associated with each polygon to create a connectivity graph. To extract longitude values, we apply the st_centroid() function to the geometry column of us.bound, accessing the first value of each centroid using [[1]]. Similarly, we extract latitude by accessing the second value with [[2]]. Finally, we use cbind to combine longitude and latitude into a single object.\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\n\n\n\nSetting an upper limit for the distance band is crucial for the Getis-Ord statistic because it defines the spatial extent for considering neighboring relationships. This cut-off distance determines which areas are considered “neighbors” in the analysis. If the distance is too small, you might exclude relevant neighboring points, while setting it too large can dilute the significance of local clusters. The goal is to define a meaningful range that reflects the spatial scale of interaction for identifying hot spots and cold spots.\nTo determine the upper limit for the distance band:\n\nUse knearneigh() to find the k-nearest neighbors for each point.\nConvert the knn object to a neighbors list (nb) with knn2nb().\nCalculate neighbor distances using nbdists(), returned in coordinate units or kilometers.\nFlatten the list using unlist().\n\nThe summary report indicates that the largest first nearest neighbor distance is 61.79 km. Using this as the upper threshold ensures that every unit will have at least one neighbor.\n\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\nThere are two types of distance-based proximity matrices:\n\nFixed distance weight matrix\nAdaptive distance weight matrix\n\nWe compute the distance weight matrix using the dnearneigh() function, as shown in the code chunk below.\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nNext, the nb2listw() function is used to convert the nb object into a spatial weights object.\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\nA key characteristic of the fixed distance weight matrix is that densely populated areas (typically urban) tend to have more neighbors, while less densely populated areas (typically rural) tend to have fewer. This results in more smoothing of neighbor relationships in densely settled areas.\nYou can control the number of neighbors directly using k-nearest neighbors, allowing for either asymmetric relationships or enforcing symmetry, as demonstrated in the code chunk below.\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nNext, the nb2listw() function is used to convert the nb object into a spatial weights object.\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014\n\n\n\n\n\n\n\n8. Compute Gi Statistics\n\n1. Gi statistics using fixed distance2. Map Gi values with fixed distance weights3. Gi statistics using adaptive distance4. Map Gi values with adaptive distance weights\n\n\nThe output of localG() is a vector of G or G* values, with attributes indicating whether “gstari” is TRUE or FALSE, the “call” to the function, and class “localG”.\nThe Gi statistic is represented as a Z-score. Higher values indicate stronger clustering, with the sign (positive or negative) indicating whether the cluster is of high or low values.\n\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below. The code chunk performs three tasks:\n\nit convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix().\ncbind() is used to join hunan data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi.\nthe field name of the gi values is renamed to gstat_fixed by using rename().\n\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\nThe following visualise the locations of hot spot and cold spot areas. The choropleth mapping functions of tmap package will be used to map the Gi values.\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05A.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05A.html",
    "title": "Hands-on Ex 5A",
    "section": "",
    "text": "1. Overview\nThis exercise introduces methods for computing Global Measures of Spatial Autocorrelation (GMSA). GMSA provides a summary of the overall spatial patterns within a dataset, showing whether similar values cluster together or if there is a random distribution across the entire map.\nSpatial autocorrelation measures how one location’s data is related to nearby locations. With global measures, we look at the entire dataset as a whole, asking questions like: Are similar values (high or low) generally located near each other? Or are values spread out randomly? GMSA gives us a single statistic that answers these questions, giving insight into the spatial structure of our data.\nOne common example is Moran’s I, a widely used GMSA method. It provides a value that indicates whether there is clustering (positive autocorrelation), a dispersed pattern (negative autocorrelation), or no clear pattern (no autocorrelation). These global measures help us identify broad spatial trends, which we can later break down into more detailed local measures.\nA key R package for GMSA analysis is the spdep package.\n\npacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n2. Importing & Transforming Data\nTwo datasets will be used in this hands-on exercise:\n\nHunan County Boundary Layer: A geospatial dataset in ESRI shapefile format.\nHunan_2012.csv: A CSV file containing selected local development indicators for Hunan in 2012.\n\n\nHunan shapefileHunan 2012 development indicatorsCombining datasets\n\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\") \n\nReading layer `Hunan' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Hands-on_Ex/Hands-on_Ex05/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n# crs = 4549 if need to convert\n\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(hunan2012)\n\nRows: 88\nColumns: 29\n$ County      &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changn…\n$ City        &lt;chr&gt; \"Yiyang\", \"Chenzhou\", \"Changde\", \"Hunan West\", \"Zhuzhou\", …\n$ avg_wage    &lt;dbl&gt; 30544, 28058, 31935, 30843, 31251, 28518, 54540, 28597, 33…\n$ deposite    &lt;dbl&gt; 10967.0, 4598.9, 5517.2, 2250.0, 8241.4, 10860.0, 24332.0,…\n$ FAI         &lt;dbl&gt; 6831.7, 6386.1, 3541.0, 1005.4, 6508.4, 7920.0, 33624.0, 1…\n$ Gov_Rev     &lt;dbl&gt; 456.72, 220.57, 243.64, 192.59, 620.19, 769.86, 5350.00, 1…\n$ Gov_Exp     &lt;dbl&gt; 2703.0, 1454.7, 1779.5, 1379.1, 1947.0, 2631.6, 7885.5, 11…\n$ GDP         &lt;dbl&gt; 13225.0, 4941.2, 12482.0, 4087.9, 11585.0, 19886.0, 88009.…\n$ GDPPC       &lt;dbl&gt; 14567, 12761, 23667, 14563, 20078, 24418, 88656, 10132, 17…\n$ GIO         &lt;dbl&gt; 9276.90, 4189.20, 5108.90, 3623.50, 9157.70, 37392.00, 513…\n$ Loan        &lt;dbl&gt; 3954.90, 2555.30, 2806.90, 1253.70, 4287.40, 4242.80, 4053…\n$ NIPCR       &lt;dbl&gt; 3528.3, 3271.8, 7693.7, 4191.3, 3887.7, 9528.0, 17070.0, 3…\n$ Bed         &lt;dbl&gt; 2718, 970, 1931, 927, 1449, 3605, 3310, 582, 2170, 2179, 1…\n$ Emp         &lt;dbl&gt; 494.310, 290.820, 336.390, 195.170, 330.290, 548.610, 670.…\n$ EmpR        &lt;dbl&gt; 441.4, 255.4, 270.5, 145.6, 299.0, 415.1, 452.0, 127.6, 21…\n$ EmpRT       &lt;dbl&gt; 338.0, 99.4, 205.9, 116.4, 154.0, 273.7, 219.4, 94.4, 174.…\n$ Pri_Stu     &lt;dbl&gt; 54.175, 33.171, 19.584, 19.249, 33.906, 81.831, 59.151, 18…\n$ Sec_Stu     &lt;dbl&gt; 32.830, 17.505, 17.819, 11.831, 20.548, 44.485, 39.685, 7.…\n$ Household   &lt;dbl&gt; 290.4, 104.6, 148.1, 73.2, 148.7, 211.2, 300.3, 76.1, 139.…\n$ Household_R &lt;dbl&gt; 234.5, 121.9, 135.4, 69.9, 139.4, 211.7, 248.4, 59.6, 110.…\n$ NOIP        &lt;dbl&gt; 101, 34, 53, 18, 106, 115, 214, 17, 55, 70, 44, 84, 74, 17…\n$ Pop_R       &lt;dbl&gt; 670.3, 243.2, 346.0, 184.1, 301.6, 448.2, 475.1, 189.6, 31…\n$ RSCG        &lt;dbl&gt; 5760.60, 2386.40, 3957.90, 768.04, 4009.50, 5220.40, 22604…\n$ Pop_T       &lt;dbl&gt; 910.8, 388.7, 528.3, 281.3, 578.4, 816.3, 998.6, 256.7, 45…\n$ Agri        &lt;dbl&gt; 4942.253, 2357.764, 4524.410, 1118.561, 3793.550, 6430.782…\n$ Service     &lt;dbl&gt; 5414.5, 3814.1, 14100.0, 541.8, 5444.0, 13074.6, 17726.6, …\n$ Disp_Inc    &lt;dbl&gt; 12373, 16072, 16610, 13455, 20461, 20868, 183252, 12379, 1…\n$ RORP        &lt;dbl&gt; 0.7359464, 0.6256753, 0.6549309, 0.6544614, 0.5214385, 0.5…\n$ ROREmp      &lt;dbl&gt; 0.8929619, 0.8782065, 0.8041262, 0.7460163, 0.9052651, 0.7…\n\n\n\n\nThe GDP per Capita (GDPCC) from hunan2012 is needed to be added into hunan’s sf dataframe. The datasets are joined by County.\n\nhunan &lt;- left_join(hunan, hunan2012, by = \"County\") %&gt;%\n  select(1:4, 7, 15)\nglimpse(hunan)\n\nRows: 88\nColumns: 7\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…\n\n\n\n\n\n\n\n3. Geovisualisation & Choropleth Map\nA basemap and a choropleth map showing the distribution of GDP per capita are plotted.\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n4. Preparing for Global Measures of Spatial Autocorrelation\nBefore we can compute global spatial autocorrelation statistics, we need to perform the following steps:\n\n1. Compute contiguity spatial weights2. Compute row-standardised weights matrix\n\n\nSpatial weights define the neighborhood relationships between geographical units (e.g., counties) in the study area. In the code chunk below, the poly2nb() function from the spdep package is used to compute contiguity-based weight matrices for the study area. This function creates a list of neighboring regions by identifying those that share common boundaries. The following computes the Queen contiguity weight matrix.\nThe summary report indicates that there are 88 area units in Hunan. The most connected unit has 11 neighboring units, while two units have only one neighbor each.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\nNext, we need to assign weights to each neighboring polygon. In this case, we will use equal weights (style = “W”), meaning each neighbor receives a weight of 1/(no. of neighbors). These weights are then used to calculate the weighted sum of income values from neighboring counties. While this method is straightforward and intuitive, it has a limitation: polygons on the edges of the study area may have fewer neighbors, which can lead to over- or under-estimation of spatial autocorrelation. For simplicity, we’ll use the “W” option here, but it’s worth noting that more robust alternatives, such as style = “B”, are available.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n5. GMSA: Moran’s I\nIn this section, we will perform Moran’s I statistical testing.\n\n1. Moran’s I test2. Monte Carlo Moran’s I test3. Visualising Monte Carlo Moran’s I\n\n\nWe conduct Moran’s I statistical test using the moran.test() function from the spdep package. From the results, Moran’s I is 0.30, which is greater than 0, indicating positive spatial autocorrelation. Since the p-value is less than .001, the result is statistically significant. This means that the observations are not randomly distributed but are spatially clustered, with similar values tending to be near each other.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\nThe Monte Carlo Moran’s I test is used to assess the significance of spatial autocorrelation by comparing the observed Moran’s I to a distribution of Moran’s I values generated through random permutations. It helps determine whether the observed spatial pattern is significantly different from what could be expected under randomness.\nA permutation test for Moran’s I statistic conducted using moran.mc() function from the spdep package, with 1,000 simulations. This Monte Carlo approach generates a distribution of Moran’s I values by randomly shuffling the spatial data and recalculating Moran’s I for each simulation. It allows us to compare the observed Moran’s I against this randomized distribution to assess its significance.\nFrom the results, the observed Moran’s I statistic is 0.30, which is greater than 0, indicating positive spatial autocorrelation. Since the p-value is 0.001, the result is statistically significant. This means that the observed spatial pattern is unlikely to have occurred by chance; there is spatial clustering, where similar values tend to be located near each other.\n\nset.seed(1234)\nbperm = moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\nIt is good practice to examine the simulated Moran’s I test statistics in greater detail. This can be done by plotting the distribution of these values as a histogram.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\ndata &lt;- data.frame(simulated_I = bperm$res)\n\n# Plot the histogram using ggplot2\nggplot(data, aes(x = simulated_I)) +\n  geom_histogram(binwidth = diff(range(bperm$res))/20, fill=\"lightblue\", color=\"black\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"dashed\") +\n  geom_vline(xintercept = 0.30075, color = \"purple\") +\n  annotate(\"text\", x = 0.30075, y = 100,\n           label = \"Observed Moran's I\", color = \"purple\", vjust = 0.5, hjust = 1.1) +\n  labs(x = \"Simulated Moran's I\", y = \"Frequency\", title = \"Histogram of Simulated Moran's I\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n6. GMSA: Geary’s C\nIn this section, we will perform Geary’s C statistical testing.\n\n1. Geary’s C test2. Monte Carlo Geary’s C test3. Visualising Monte Carlo Geary’s C\n\n\nWe conduct Geary’s C statistical test using the geary.test() function from the spdep package. From the results, Geary’s C is 0.69, which is less than 1. This indicates positive spatial autocorrelation, meaning that neighboring areas tend to have similar values. Since the p-value is less than 0.001, the result is statistically significant, suggesting that the observed spatial pattern is unlikely due to random chance. Therefore, the data shows spatial clustering, where similar values tend to be located near each other.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\nA permutation test for Geary’s C statistic was conducted using the geary.mc() function from the spdep package, with 1,000 simulations. This Monte Carlo approach creates a distribution of Geary’s C values by randomly shuffling the spatial data and recalculating Geary’s C for each simulation. This allows us to compare the observed Geary’s C against the randomized distribution to assess the significance of the spatial autocorrelation.\nFrom the results, the observed Geary’s C statistic is 0.69, which is less than 1, indicating positive spatial autocorrelation. Since the p-value is 0.001, the result is statistically significant, meaning the observed spatial pattern is unlikely to have occurred by chance. Therefore, the data shows spatial clustering, where similar values are more likely to be found near each other.\n\nset.seed(1234)\nbperm = geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\nNext, we plot a histogram to reveal the distribution of the simulated values.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\ndata &lt;- data.frame(simulated_C = bperm$res)\n\n# Plot the histogram using ggplot2\nggplot(data, aes(x = simulated_C)) +\n  geom_histogram(binwidth = diff(range(bperm$res))/20, fill=\"lightblue\", color=\"black\") +\n  geom_vline(xintercept = 1, color = \"red\", linetype = \"dashed\") +\n  geom_vline(xintercept = 0.69072, color = \"purple\") +\n  annotate(\"text\", x = 0.69072, y = 100,\n           label = \"Observed Geary's C\", color = \"purple\", vjust = 0.5, hjust = -0.1) +\n  labs(x = \"Simulated Geary's C\", y = \"Frequency\", title = \"Histogram of Simulated Geary's C\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n7. Spatial Correlogram\nA spatial correlogram is a tool used to assess and visualize spatial autocorrelation against increasing distances (lags) between spatial observations. It plots a measure of spatial autocorrelation, such as Moran’s I or Geary’s C, against distance, allowing us to see how relationships between spatial observations change as the distance between them increases. Correlograms help identify how far spatial dependence extends and whether it weakens, strengthens, or fluctuates with distance.\n\n1. Moran’s I correlogram2. Geary’s C correlogram\n\n\nThe sp.correlogram() function from the spdep package is used to compute a 6-lag spatial correlogram for GDP per capita (GDPPC), with Moran’s I as the measure of global spatial autocorrelation.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nPlotting the output alone may not provide a complete interpretation, as not all autocorrelation values are statistically significant. Therefore, it’s important to review the full analysis by printing the results, as shown in the code chunk below.\nThe results reveal that:\n\nSpatial Clustering at Short Distances: There is evidence of spatial clustering of similar GDP per capita values within shorter distances (lags 1-3). Neighboring areas are likely to have similar economic performance.\nDiminishing Spatial Autocorrelation with Distance: Beyond lag 3, spatial autocorrelation weakens and eventually becomes insignificant at larger distances. This suggests that the relationship between neighboring areas becomes weaker as the distance between them increases.\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nIn the code chunk below, the sp.correlogram() function from the spdep package is used to compute a 6-lag spatial correlogram for GDP per capita (GDPPC), using Geary’s C as the measure of global spatial autocorrelation.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\nThe results reveal that:\n\nSpatial Clustering at Short Distances: There is evidence of spatial clustering of similar GDP per capita values within shorter distances (lags 1-2). Neighboring areas are likely to have similar economic performance.\nDiminishing Spatial Autocorrelation with Distance: Beyond lag 2, spatial autocorrelation weakens and eventually becomes insignificant at larger distances. This suggests that the relationship between neighboring areas becomes weaker as the distance between them increases.\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05A.html#gearys-c-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05A.html#gearys-c-correlogram",
    "title": "Hands-on Ex 5A",
    "section": "2. Geary’s C correlogram",
    "text": "2. Geary’s C correlogram\nIn the code chunk below, the sp.correlogram() function from the spdep package is used to compute a 6-lag spatial correlogram for GDP per capita (GDPPC), using Geary’s C as the measure of global spatial autocorrelation.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\nThe results reveal that: - Spatial Clustering at Short Distances: There is evidence of spatial clustering of similar GDP per capita values within shorter distances (lags 1-2). Neighboring areas are likely to have similar economic performance. - Diminishing Spatial Autocorrelation with Distance: Beyond lag 2, spatial autocorrelation weakens and eventually becomes insignificant at larger distances. This suggests that the relationship between neighboring areas becomes weaker as the distance between them increases.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Ex 4",
    "section": "",
    "text": "Who is my neighbour? Measuring spatial weights, which quantify the strength of spatial relationships between objects (i.e., how neighbors influence each other), is a crucial step in defining neighbours. This exercise introduces methods for computing spatial weights and explores their role in spatial analysis.\nA key R package for computing spatial weights is the spdep package, which provides tools for spatial data analysis and modeling.\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-with-row-standardized-weights",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-with-row-standardized-weights",
    "title": "Hands-on Ex 4",
    "section": "8.1 Spatial lag with row-standardized weights",
    "text": "8.1 Spatial lag with row-standardized weights\nWe’ll compute the average GDP per capita (GDPPC) of neighboring polygons for each polygon. These computed values are referred to as spatially lagged values.\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\n\nnb1 &lt;- hunan$GDPPC[wm_q[[1]]]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nWe can append the spatially lagged GDPPC values to the hunan sf data frame using the code snippet below.\n\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan, lag.res)\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\nThe following plot compares both the GDPPC and the spatially lagged GDPPC values.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-as-a-sum-of-neighboring-values",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-as-a-sum-of-neighboring-values",
    "title": "Hands-on Ex 4",
    "section": "8.2 Spatial lag as a sum of neighboring values",
    "text": "8.2 Spatial lag as a sum of neighboring values\nWe can calculate the spatial lag as the sum of neighboring values by assigning binary weights. To do this, we revisit our neighbors list, apply a function to assign binary weights, and then use the glist parameter in the nb2listw() function to explicitly set these weights. We start by applying a function that will assign a value of 1 per each neighbor.\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nWe then use lag.listw() to compute a lag variable from our weight and GDPPC.\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\nWe append the lag_sum GDPPC field into hunan sf data frame by using the code chunk below.\n\nhunan &lt;- left_join(hunan, lag.res)\n\nThe following plot compares both the GDPPC and the spatially lagged summed GDPPC values.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-window-average",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-window-average",
    "title": "Hands-on Ex 4",
    "section": "8.3 Spatial window average",
    "text": "8.3 Spatial window average\nA spatial weight window is a way of averaging the values of a variable across neighboring spatial units while accounting for the unit itself (the diagonal element). This method assigns weights to neighboring units based on spatial relationships, then computes an average that includes the value of the spatial unit itself. Row-standardized weights ensure that the sum of weights for each unit is 1, distributing influence equally among neighbors.\nTo implement this in R, we need to modify the neighbors structure by adding the diagonal element before assigning the weights. Notice that the Number of nonzero links, Percentage nonzero weights and Average number of links are 536, 6.921488 and 6.090909 respectively as compared to wm_q of 448, 5.785124 and 5.090909\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nThe following shows the neighbour list of province 1. It has 6 neighbours instead of five.\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\nWe obtain weights with nb2listw().\n\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\nWe create the lag variable from our weight structure and GDPPC variable.\n\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nWe then convert the lag variable listw object into a data.frame by using as.data.frame().\n\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\nWe append the lag_window_avg GDPPC values to the hunan sf data frame using the code snippet below.\n\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nThe following compares the values of lag GDPPC and spatial window average.\n\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nThe following plot compares the spatially lagged GDPPC and the window average GDPPC values.\n\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-window-sum",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-window-sum",
    "title": "Hands-on Ex 4",
    "section": "8.4 Spatial window sum",
    "text": "8.4 Spatial window sum\nThe spatial window sum is the counter part of the window average, but without using row-standardized weights.\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nWe assign binary weights to the neighbour structure that includes the diagonal element. Notice that province 1 has six neighbours instead of five.\n\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\nWe use nb2listw() to explicitly assign weight values.\n\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nWe then compute the lag variable with lag.listw().\n\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nWe convert the lag variable listw object into a data.frame by using as.data.frame().\n\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\n\nWe append the window sum GDPPC values to the hunan sf data frame using the code snippet below.\n\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nThe following compares the values of lag GDPPC and spatial window sum.\n\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nThe following plot compares the lagged sum GDPPC and the window sum GDPPC values.\n\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on Ex 6",
    "section": "",
    "text": "In geobusiness and spatial policy, a key practice is the segmentation of markets or planning areas into homogeneous regions using multivariate data. This segmentation allows for more targeted planning, resource allocation, and policy-making. This exercise focuses on delineating homogeneous regions using geographically referenced multivariate data, employing two primary analytical techniques:\n\nHierarchical cluster analysis\nSpatially constrained cluster analysis\n\nIn this hands-on exercise, we will apply these techniques to segment Shan State, Myanmar, into homogeneous regions based on various Information and Communication Technology (ICT) measures. These measures include the availability of radio, television, landline phones, mobile phones, computers, and internet access at home. By understanding the spatial distribution of these ICT indicators, we can gain insights into the region’s digital landscape and inform policy decisions.\nA few new R packages required for geographical segmentation and analysis include:\n\nrgdal for spatial data handling\ncoorplot, ggpubr, heatmaply, psych, GGally: These packages are used for multivariate data visualisation\ncluster, ClustGeo, factoextra, NbClust: These packages facilitate cluster analysis.\n\n\npacman::p_load(spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#eda-using-statistical-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#eda-using-statistical-graphics",
    "title": "Hands-on Ex 6",
    "section": "3.1 EDA using statistical graphics",
    "text": "3.1 EDA using statistical graphics\nWe will be plotting the distribution of the variables.\n\nHouseholds with RadioRadio Penetration RateHistograms of all ICT penetration ratesBoxplots for all ICT penetration rates\n\n\nThe top plot is a histogram of households with radios, illustrating the overall shape and distribution of the data (e.g., normal distribution, left or right skew). The bottom plot is a boxplot for the same data, highlighting potential outliers.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\nNow, we will plot the radio penetration rate. The distribution of the penetration rate is less skewed and has fewer outliers compared to the number of households with radios. This is expected, as larger townships tend to have more households, leading to more extreme values.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\nThe chart below displays histograms for each of the six ICT penetration rates.\n\n\nCode\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)\n\n\n\n\n\n\n\nThe chart below displays boxplots for each of the six ICT penetration rates.\n\n\nCode\nradio_boxplot &lt;- ggplot(data=ict_derived, \n                        aes(x= `RADIO_PR`)) +\n  geom_boxplot(color=\"black\", fill=\"light blue\")\n\ntv_boxplot &lt;- ggplot(data=ict_derived, \n                     aes(x= `TV_PR`)) +\n  geom_boxplot(color=\"black\", fill=\"light blue\")\n\nllphone_boxplot &lt;- ggplot(data=ict_derived, \n                          aes(x= `LLPHONE_PR`)) +\n  geom_boxplot(color=\"black\", fill=\"light blue\")\n\nmphone_boxplot &lt;- ggplot(data=ict_derived, \n                         aes(x= `MPHONE_PR`)) +\n  geom_boxplot(color=\"black\", fill=\"light blue\")\n\ncomputer_boxplot &lt;- ggplot(data=ict_derived, \n                           aes(x= `COMPUTER_PR`)) +\n  geom_boxplot(color=\"black\", fill=\"light blue\")\n\ninternet_boxplot &lt;- ggplot(data=ict_derived, \n                           aes(x= `INTERNET_PR`)) +\n  geom_boxplot(color=\"black\", fill=\"light blue\")\n\nggarrange(radio_boxplot, tv_boxplot, llphone_boxplot, \n          mphone_boxplot, computer_boxplot, internet_boxplot, \n          ncol = 3, \n          nrow = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#eda-using-choropleth-map",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#eda-using-choropleth-map",
    "title": "Hands-on Ex 6",
    "section": "3.2 EDA using choropleth map",
    "text": "3.2 EDA using choropleth map\n\nJoining geospatial data with aspatial dataRadioTVLandline PhoneMobile PhoneComputerHome Internet\n\n\nBefore plotting the choropleth map, we need to join the ICT variables from the aspatial dataset to the Myanmar Township geospatial dataset. The ict_derived dataset is left-joined with the shan_sf dataset using the TS_PCODE key. We use qtm() to have a quick look at the distribution of Radio penetration rate.\n\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n\nqtm(shan_sf, \"RADIO_PR\")\n\n\n\n\n\n\nThe plot below shows the choropleth map of the total number of households in each town (left) and the number of households with radios (right). Towns with larger number of households are also showing higher number of radio ownership.\n\nTT_HOUSEHOLDS.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Households w/ Radio\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\nThe plots below display a choropleth map of the total number of households in each township (left) and the radio penetration rate (right). We observe that higher penetration rates are found in areas with fewer households.\n\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)\n\n\n\n\n\n\nBelow is the choropleth maps for Total Households, Households with TVs, and TV Penetration Rate.\n\n\nCode\nTV.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TV\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Households w/ TV\") + \n  tm_borders(alpha = 0.5) \n\nTV_PR.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TV_PR\",\n          n = 5,\n          style = \"jenks\",\n          title = \"TV Penetration Rate\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, TV.map, TV_PR.map,\n             asp=NA, ncol=3)\n\n\nLegend labels were too wide. The labels have been resized to 0.51, 0.47, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nLegend labels were too wide. The labels have been resized to 0.63, 0.51, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nLegend labels were too wide. The labels have been resized to 0.55, 0.55, 0.55, 0.55, 0.55. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\n\n\n\n\n\nBelow is the choropleth maps for Total Households, Households with Landline Phones, and Landline Phone Penetration Rate.\n\n\nCode\nLLPHONE.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"LLPHONE\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Households w/ Landline\") + \n  tm_borders(alpha = 0.5) \n\nLLPHONE_PR.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"LLPHONE_PR\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Landline Penetration Rate\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, LLPHONE.map, LLPHONE_PR.map,\n             asp=NA, ncol=3)\n\n\nLegend labels were too wide. The labels have been resized to 0.51, 0.47, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nSome legend labels were too wide. These labels have been resized to 0.63, 0.55, 0.55, 0.55. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nSome legend labels were too wide. These labels have been resized to 0.66, 0.66, 0.60, 0.55. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\n\n\n\n\n\nBelow is the choropleth maps for Total Households, Households with Mobile Phones, and Mobile Phone Penetration Rate.\n\n\nCode\nMPHONE.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"MPHONE\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Households w/ Mobile\") + \n  tm_borders(alpha = 0.5) \n\nMPHONE_PR.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"MPHONE_PR\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Mobile Penetration Rate\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, MPHONE.map, MPHONE_PR.map,\n             asp=NA, ncol=3)\n\n\nLegend labels were too wide. The labels have been resized to 0.51, 0.47, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nLegend labels were too wide. The labels have been resized to 0.63, 0.55, 0.51, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nLegend labels were too wide. The labels have been resized to 0.60, 0.55, 0.55, 0.55, 0.55. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\n\n\n\n\n\nBelow is the choropleth maps for Total Households, Households with Computers, and Computer Penetration Rate.\n\n\nCode\nCOMPUTER.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"COMPUTER\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Households w/ Computer\") + \n  tm_borders(alpha = 0.5) \n\nCOMPUTER_PR.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"COMPUTER_PR\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Computer Penetration Rate\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, COMPUTER.map, COMPUTER_PR.map,\n             asp=NA, ncol=3)\n\n\nLegend labels were too wide. The labels have been resized to 0.51, 0.47, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nSome legend labels were too wide. These labels have been resized to 0.63, 0.55, 0.55. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nLegend labels were too wide. The labels have been resized to 0.60, 0.55, 0.55, 0.55, 0.55. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\n\n\n\n\n\nBelow is the choropleth maps for Total Households, Households with Home Internet, and Internet Penetration Rate.\n\n\nCode\nINTERNET.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"INTERNET\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Households w/ Internet\") + \n  tm_borders(alpha = 0.5) \n\nINTERNET_PR.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"INTERNET_PR\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Internet Penetration Rate\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, INTERNET.map, INTERNET_PR.map,\n             asp=NA, ncol=3)\n\n\nLegend labels were too wide. The labels have been resized to 0.51, 0.47, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nSome legend labels were too wide. These labels have been resized to 0.63, 0.55, 0.55, 0.55. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nSome legend labels were too wide. These labels have been resized to 0.66, 0.66, 0.66, 0.60. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#correlation-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#correlation-analysis",
    "title": "Hands-on Ex 6",
    "section": "3.3 Correlation Analysis",
    "text": "3.3 Correlation Analysis\nBefore performing cluster analysis, it’s crucial to ensure that the clustering variables are not highly correlated. We use the corrplot.mixed() function from the corrplot package to visualise and analyse the correlations among the input variables.\nThe correlation plot above reveals that COMPUTER_PR and INTERNET_PR are highly correlated, suggesting that only one of these variables should be included in the cluster analysis.\n\ncluster_vars.cor = cor(ict_derived[,12:17])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#extract-clustering-variables",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#extract-clustering-variables",
    "title": "Hands-on Ex 6",
    "section": "4.1. Extract clustering variables",
    "text": "4.1. Extract clustering variables\nSince COMPUTER_PR and INTERNET_PR are highly correlated, we will just pick COMPUTER_PR over INTERNET_PR, along with the other 4 ICT variables.\n\ncluster_vars &lt;- shan_sf %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nWe then update the row names to the town names.\n\nrow.names(cluster_vars) &lt;- cluster_vars$\"TS.x\"\nhead(cluster_vars,10)\n\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya     Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan     Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\nMabein       Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw         Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\nPekon         Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme     Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nWe can now delete the TS.x field.\n\nshan_ict &lt;- select(cluster_vars, c(2:6))\nhead(shan_ict, 10)\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-standardisation",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-standardisation",
    "title": "Hands-on Ex 6",
    "section": "4.2. Data Standardisation",
    "text": "4.2. Data Standardisation\nWe will compare min-max and z-score standardization to determine the most appropriate method for standardizing the input variables before cluster analysis. This step is essential to prevent bias toward variables with larger value ranges.\nWe use normalize() to do min-max standardization.\n\nshan_ict.std &lt;- normalize(shan_ict)\nsummary(shan_ict.std)\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000  \n\n\nWe use scale() to do z-score standardization. Z-score standardisation method should only be used if we would assume all variables come from some normal distribution\n\nshan_ict.z &lt;- scale(shan_ict)\ndescribe(shan_ict.z)\n\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualise-standardised-clustering-variables",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualise-standardised-clustering-variables",
    "title": "Hands-on Ex 6",
    "section": "4.3. Visualise standardised clustering variables",
    "text": "4.3. Visualise standardised clustering variables\nIt is good practice to visualise the distributions of the standardised variables. From the visualisation, it is clear that landline phone, mobile phone and computer penetration rates have non-normal distributions.\n\nRadioTVLandline PhoneMobile PhoneComputer\n\n\n\n\nCode\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\nCode\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\nCode\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nrd &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nsd &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`TV_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nzd &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`TV_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z, rd, sd, zd,\n          ncol = 3,\n          nrow = 2)\n\n\n\n\n\n\n\n\n\nCode\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nrd &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nsd &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`LLPHONE_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nzd &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`LLPHONE_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z, rd, sd, zd,\n          ncol = 3,\n          nrow = 2)\n\n\n\n\n\n\n\n\n\nCode\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nrd &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nsd &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`MPHONE_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nzd &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`MPHONE_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z, rd, sd, zd,\n          ncol = 3,\n          nrow = 2)\n\n\n\n\n\n\n\n\n\nCode\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nrd &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nsd &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`COMPUTER_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nzd &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`COMPUTER_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z, rd, sd, zd,\n          ncol = 3,\n          nrow = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-proximity-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-proximity-matrix",
    "title": "Hands-on Ex 6",
    "section": "4.4 Compute proximity matrix",
    "text": "4.4 Compute proximity matrix\nWe use the dist() function to compute the euclidean distance matrix of the min-max standardised input variables.\n\nproxmat &lt;- dist(shan_ict.std, method = 'euclidean')\nproxmat\n\n              Mongmit    Pindaya    Ywangan   Pinlaung     Mabein      Kalaw\nPindaya    0.33484299                                                       \nYwangan    0.64141043 0.38581979                                            \nPinlaung   0.12708171 0.42576313 0.70799056                                 \nMabein     0.50122445 0.53009409 0.81970730 0.61460493                      \nKalaw      0.30191348 0.53248044 0.84000146 0.33144081 0.44974399           \nPekon      0.12771807 0.26476412 0.58400222 0.21244316 0.48550713 0.33014597\nLawksawk   0.27879420 0.31503944 0.65936703 0.38203276 0.31187973 0.28370444\nNawnghkio  0.16892093 0.29963651 0.60323441 0.28141328 0.37741245 0.26315153\nKyaukme    0.31801367 0.59971191 0.90052701 0.28398847 0.59034702 0.16124829\nMuse       1.32720046 1.52660661 1.80670221 1.32970101 1.19891738 1.05726479\nLaihka     0.37933026 0.67221788 0.95717864 0.31755692 0.69830552 0.37220147\nMongnai    0.33777716 0.56250883 0.81585587 0.23841050 0.77134232 0.38218135\nMawkmai    0.70561175 0.81265426 0.84691551 0.61714921 1.19387679 0.90449440\nKutkai     0.23773556 0.48833994 0.72559322 0.23035319 0.59192548 0.33085098\nMongton    0.32992818 0.55122990 0.72677716 0.25160576 0.77155232 0.41839838\nMongyai    0.41605035 0.57389966 0.70088720 0.33099052 0.90577674 0.62797539\nMongkaing  0.74868086 0.79833193 0.74345911 0.68543936 1.20466483 0.94701298\nLashio     0.66954442 0.86544069 1.16195443 0.66931786 0.68327559 0.40181225\nMongpan    0.48614135 0.68082304 0.92811737 0.45829177 0.70427183 0.28299663\nMatman     0.58555843 0.57675056 0.53338784 0.55058412 1.01981351 0.82085273\nTachileik  1.18243702 1.28614783 1.53639616 1.20949541 1.00573051 0.89293671\nNarphan    0.66845972 0.88266822 0.93989762 0.59012954 1.09068186 0.78193790\nMongkhet   0.59778433 0.78337479 0.88284298 0.49994933 1.07855340 0.77783853\nHsipaw     0.22108322 0.50412894 0.73554835 0.12152499 0.69259388 0.37165048\nMonghsat   0.43564438 0.68651030 0.89720483 0.32088484 0.89234099 0.53759071\nMongmao    0.51570328 0.82965459 1.05082759 0.47426838 0.76717932 0.49060834\nNansang    0.28715776 0.56696884 0.86668185 0.23310952 0.62107059 0.21819336\nLaukkaing  1.07225320 1.36507299 1.64120517 1.05431104 1.05827219 0.87116313\nPangsang   0.66903211 0.93301392 1.16389269 0.60768111 0.90587518 0.50401006\nNamtu      0.27961058 0.44364488 0.76518870 0.25332633 0.65625685 0.45884633\nMonghpyak  0.35144626 0.36644682 0.60365776 0.44830833 0.35704609 0.31327485\nKonkyan    1.01571344 1.25337511 1.36432249 0.98005955 1.22443888 1.04061497\nMongping   0.42422540 0.60344538 0.71805641 0.33911761 0.90239819 0.60238484\nHopong     0.23408120 0.47273974 0.69046572 0.14439293 0.71977478 0.43024278\nNyaungshwe 0.18225430 0.34570315 0.64090622 0.25348759 0.46123420 0.25036759\nHsihseng   0.20016455 0.37661399 0.62792617 0.16744140 0.67284537 0.47035190\nMongla     0.89547770 1.15966445 1.43723827 0.85736058 0.97925564 0.65921167\nHseni      0.29052811 0.56780671 0.87132998 0.31345326 0.46140022 0.12990466\nKunlong    0.89866242 1.12155116 1.33397493 0.89407500 0.97368666 0.89267789\nHopang     0.55616746 0.86595003 1.11317958 0.51977134 0.74514124 0.42451475\nNamhkan    0.70473639 0.99930806 1.26832113 0.68757365 0.76572518 0.50183711\nKengtung   0.54953445 0.75116733 1.03972187 0.56613940 0.55372140 0.26290004\nLangkho    0.39879792 0.66399610 0.94573389 0.40238428 0.53801141 0.21916166\nMonghsu    0.21488091 0.41015943 0.63238266 0.14541019 0.70517387 0.42566122\nTaunggyi   0.99488195 1.09815604 1.36689780 1.03065491 0.80245695 0.72134668\nPangwaun   0.64295001 0.91974204 1.06338393 0.57072833 0.98791954 0.63906176\nKyethi     0.29715470 0.34718538 0.54510609 0.27732852 0.74222295 0.55514712\nLoilen     0.38878092 0.64665647 0.91637346 0.28343109 0.79738732 0.39810682\nManton     0.64180662 0.67875810 0.64129623 0.58879371 1.09600657 0.86713285\nMongyang   0.70500375 1.01684476 1.24799990 0.66901723 0.87622893 0.64144222\nKunhing    0.40842263 0.69460977 0.92008444 0.36039283 0.71303370 0.37934080\nMongyawng  0.55674892 0.75846220 1.05439723 0.60749023 0.47350574 0.52090645\nTangyan    0.30311651 0.43196935 0.63091221 0.24323982 0.78151967 0.54944762\nNamhsan    0.35391227 0.44478299 0.58237197 0.30698354 0.82248687 0.60592398\n                Pekon   Lawksawk  Nawnghkio    Kyaukme       Muse     Laihka\nPindaya                                                                     \nYwangan                                                                     \nPinlaung                                                                    \nMabein                                                                      \nKalaw                                                                       \nPekon                                                                       \nLawksawk   0.25428384                                                       \nNawnghkio  0.17312776 0.15953541                                            \nKyaukme    0.36189158 0.40520317 0.35858981                                 \nMuse       1.32312512 1.25794067 1.28603510 1.06051770                      \nLaihka     0.40945091 0.55246360 0.48071090 0.25151904 1.10436577           \nMongnai    0.37582597 0.50238450 0.43846715 0.27952864 1.29383366 0.35890821\nMawkmai    0.72365685 0.95009406 0.83516415 0.80983504 1.76903236 0.72931061\nKutkai     0.24340284 0.43117815 0.31074647 0.29553299 1.22139998 0.25597365\nMongton    0.36543348 0.53678718 0.41665159 0.34335446 1.33211815 0.37702825\nMongyai    0.44413509 0.67081048 0.55128809 0.54792965 1.55135578 0.48704976\nMongkaing  0.74896175 0.96924642 0.84713975 0.87797844 1.82287715 0.82201948\nLashio     0.65986224 0.61515505 0.63861408 0.40348802 0.69359324 0.51336395\nMongpan    0.49566264 0.49895227 0.47344971 0.25313097 1.02810528 0.45263866\nMatman     0.57131068 0.78588971 0.67388997 0.78040404 1.76731272 0.74601540\nTachileik  1.16186930 1.01965761 1.08966261 0.95569916 0.61424846 1.11636479\nNarphan    0.72432167 0.91315580 0.76593805 0.69378612 1.55473187 0.63173671\nMongkhet   0.63473611 0.86356575 0.73834267 0.67093068 1.60826313 0.55843237\nHsipaw     0.29088149 0.47245105 0.35156837 0.29622038 1.32702896 0.30124756\nMonghsat   0.47124555 0.67360764 0.57421229 0.40621032 1.33987062 0.29281785\nMongmao    0.58960192 0.69672894 0.58325270 0.41660370 1.13467318 0.34350592\nNansang    0.32179568 0.41345832 0.35926483 0.08755811 1.11445109 0.20801817\nLaukkaing  1.12662641 1.11218798 1.07860801 0.83773790 0.68538407 0.83296485\nPangsang   0.69060137 0.76861450 0.70679333 0.39640690 0.90054977 0.40548904\nNamtu      0.26688080 0.44342787 0.41027417 0.40966375 1.35737528 0.35288390\nMonghpyak  0.31441263 0.21164551 0.19202730 0.44516768 1.23801669 0.59701586\nKonkyan    1.04133546 1.20693406 1.08184606 0.96931830 1.36414296 0.79747971\nMongping   0.45739099 0.67424887 0.54479401 0.52092867 1.50606086 0.47289198\nHopong     0.27566986 0.49259903 0.37397908 0.36058613 1.38135015 0.33053062\nNyaungshwe 0.23189002 0.20244507 0.12888304 0.32682032 1.30436794 0.49008565\nHsihseng   0.21922633 0.44911746 0.35050249 0.43208076 1.44764824 0.39713491\nMongla     0.91768120 0.92475615 0.90669305 0.59306770 0.57999666 0.61662844\nHseni      0.36208692 0.33144382 0.28156442 0.18833671 1.09791297 0.36626902\nKunlong    0.90299671 1.02417490 0.95017790 0.84730752 1.13047116 0.65796669\nHopang     0.61800598 0.67878959 0.59404542 0.35225232 0.96704785 0.34577069\nNamhkan    0.76264600 0.75857653 0.70943156 0.46924842 0.80316987 0.51105310\nKengtung   0.55106862 0.48857084 0.49803199 0.31074393 0.80385491 0.46772870\nLangkho    0.42024906 0.45594923 0.40044047 0.20454116 0.94993209 0.26870554\nMonghsu    0.26875568 0.44477031 0.33788366 0.38318345 1.43469051 0.42924055\nTaunggyi   0.96221670 0.83635880 0.90642527 0.78897116 0.57651479 0.91880930\nPangwaun   0.73535389 0.83218279 0.70860119 0.56019333 1.36056002 0.59900012\nKyethi     0.27012152 0.50056468 0.41261362 0.52428686 1.52868576 0.49771366\nLoilen     0.42306945 0.56083481 0.50051163 0.25583316 1.21445162 0.25681138\nManton     0.64366663 0.86354614 0.74263532 0.80975961 1.79091920 0.76046531\nMongyang   0.77120756 0.85897555 0.76338609 0.57061542 1.05306112 0.47057753\nKunhing    0.44228420 0.58382135 0.47578672 0.28767022 1.10357386 0.20347408\nMongyawng  0.56872265 0.58263722 0.55812484 0.55247327 1.05570878 0.49153598\nTangyan    0.30759018 0.54080514 0.44378277 0.49226972 1.50737947 0.44442667\nNamhsan    0.35393324 0.58883800 0.47889902 0.55643270 1.56627336 0.50926221\n              Mongnai    Mawkmai     Kutkai    Mongton    Mongyai  Mongkaing\nPindaya                                                                     \nYwangan                                                                     \nPinlaung                                                                    \nMabein                                                                      \nKalaw                                                                       \nPekon                                                                       \nLawksawk                                                                    \nNawnghkio                                                                   \nKyaukme                                                                     \nMuse                                                                        \nLaihka                                                                      \nMongnai                                                                     \nMawkmai    0.58828197                                                       \nKutkai     0.35921411 0.66601500                                            \nMongton    0.22394631 0.51041605 0.26362114                                 \nMongyai    0.36406941 0.29203318 0.39251454 0.27151557                      \nMongkaing  0.67232803 0.20918247 0.69950479 0.54660660 0.37217622           \nLashio     0.62498599 1.14641819 0.59635889 0.68643078 0.90812190 1.19835786\nMongpan    0.34562868 0.87234569 0.44733584 0.39803097 0.64967685 0.90881156\nMatman     0.58994372 0.31959962 0.58552366 0.47897247 0.29801865 0.23820456\nTachileik  1.15054018 1.68946701 1.14942749 1.21016656 1.45830289 1.70923346\nNarphan    0.59608646 0.45003330 0.55947571 0.42226382 0.40538797 0.47384448\nMongkhet   0.50071433 0.21800765 0.52389529 0.40420648 0.21416455 0.35627622\nHsipaw     0.22559331 0.54908885 0.20564976 0.15412922 0.26894827 0.61430030\nMonghsat   0.27419929 0.45262853 0.34274212 0.26036392 0.26396598 0.57148140\nMongmao    0.55445045 0.82085206 0.38604551 0.46848864 0.59833519 0.88877797\nNansang    0.22268314 0.74072258 0.25681724 0.30004990 0.48059152 0.81511997\nLaukkaing  1.07281367 1.46841282 0.96976236 1.07187453 1.25401485 1.54851932\nPangsang   0.51132206 0.89420712 0.51523267 0.50562645 0.71612719 0.95704062\nNamtu      0.36253956 0.67311062 0.35032421 0.44183120 0.42550867 0.76388097\nMonghpyak  0.54997785 0.95334963 0.41669098 0.51103743 0.68442802 0.93410034\nKonkyan    1.05277959 1.03110357 0.81268734 0.90884764 0.93569598 1.05934256\nMongping   0.35466912 0.32008014 0.36694003 0.21098027 0.09918675 0.37394964\nHopong     0.25134878 0.49175532 0.21592746 0.17606858 0.20378015 0.55505338\nNyaungshwe 0.36866351 0.80699124 0.35387119 0.38028702 0.53047607 0.83111305\nHsihseng   0.33879039 0.54234507 0.27816430 0.31900066 0.26598109 0.60379590\nMongla     0.78804785 1.23148632 0.77277631 0.82674948 1.03541028 1.30763766\nHseni      0.40506704 0.89826406 0.33872448 0.42668137 0.61788737 0.95177280\nKunlong    1.00502922 1.16018934 0.72853428 0.93384012 0.97851549 1.21899353\nHopang     0.54950991 0.92111115 0.43005262 0.50479939 0.69239606 0.98757644\nNamhkan    0.70956521 1.13683680 0.61083567 0.69899646 0.90204027 1.20387319\nKengtung   0.55941922 1.08269752 0.49437580 0.59254728 0.82596102 1.12179531\nLangkho    0.45750183 0.90940299 0.29082631 0.44302653 0.64489145 0.95788286\nMonghsu    0.23243726 0.52210374 0.30706225 0.20894513 0.25054160 0.57394166\nTaunggyi   1.00377604 1.52963746 0.94992297 1.05576580 1.28590352 1.55244029\nPangwaun   0.55092911 0.72943199 0.58376792 0.45053446 0.58617732 0.78333137\nKyethi     0.38422038 0.49301163 0.35811436 0.35478121 0.25607374 0.52907114\nLoilen     0.14343826 0.61840637 0.35079208 0.28154629 0.40402944 0.72365123\nManton     0.61091059 0.22684786 0.62150136 0.49028805 0.28951448 0.13957334\nMongyang   0.73911557 0.99431099 0.56798867 0.67336305 0.79199874 1.07160076\nKunhing    0.40201134 0.71616174 0.21425023 0.31255648 0.48067230 0.77044247\nMongyawng  0.76952904 1.12075752 0.51110905 0.75357155 0.85056424 1.17671060\nTangyan    0.33453838 0.43517506 0.33898374 0.30780007 0.17946125 0.50284463\nNamhsan    0.39568277 0.38697635 0.37212328 0.32163530 0.15013683 0.42661496\n               Lashio    Mongpan     Matman  Tachileik    Narphan   Mongkhet\nPindaya                                                                     \nYwangan                                                                     \nPinlaung                                                                    \nMabein                                                                      \nKalaw                                                                       \nPekon                                                                       \nLawksawk                                                                    \nNawnghkio                                                                   \nKyaukme                                                                     \nMuse                                                                        \nLaihka                                                                      \nMongnai                                                                     \nMawkmai                                                                     \nKutkai                                                                      \nMongton                                                                     \nMongyai                                                                     \nMongkaing                                                                   \nLashio                                                                      \nMongpan    0.37380383                                                       \nMatman     1.11275846 0.83426570                                            \nTachileik  0.60861310 0.82938894 1.61721570                                 \nNarphan    1.00899181 0.75673751 0.55491360 1.53181744                      \nMongkhet   1.01094446 0.77183550 0.40783063 1.57859900 0.31889877           \nHsipaw     0.68034507 0.44443433 0.51392251 1.22897581 0.47531813 0.41513910\nMonghsat   0.72879265 0.52562416 0.54391270 1.30902156 0.44795542 0.29834381\nMongmao    0.65672880 0.58237360 0.84807243 1.19876689 0.52818521 0.61836645\nNansang    0.45167774 0.28699546 0.71633666 1.01654982 0.66298946 0.60677596\nLaukkaing  0.72385025 0.91937432 1.51360740 1.01496378 1.16537516 1.26729911\nPangsang   0.41404644 0.36905373 0.94841801 0.93060538 0.69396685 0.74354088\nNamtu      0.70967223 0.58827216 0.61201806 1.26316403 0.76149099 0.57766544\nMonghpyak  0.61648522 0.47169500 0.76647790 0.98341029 0.86100844 0.86945041\nKonkyan    1.09087789 1.08406624 1.09766604 1.59417447 0.73393579 0.84806656\nMongping   0.87349171 0.60412282 0.33236529 1.41587226 0.32834706 0.21815448\nHopong     0.72965994 0.49841580 0.44183900 1.28205735 0.48050254 0.37257701\nNyaungshwe 0.64265773 0.42371837 0.67013750 1.08713711 0.74338587 0.71802561\nHsihseng   0.78949205 0.59047909 0.44112220 1.33402259 0.60314697 0.45137773\nMongla     0.37489272 0.58383619 1.28077159 0.76403359 1.01986167 1.06709784\nHseni      0.48067644 0.36706162 0.83027811 0.97248128 0.74395442 0.75528632\nKunlong    0.88836638 1.01433491 1.17057795 1.39387186 0.96893305 0.96761716\nHopang     0.50217985 0.47933709 0.94393707 1.02824227 0.64384340 0.73093913\nNamhkan    0.46704835 0.56178898 1.15127528 0.90739793 0.85488004 0.94896123\nKengtung   0.17301998 0.30650145 1.02231332 0.67119065 0.92030661 0.94519832\nLangkho    0.35242296 0.35247660 0.86255020 0.91020821 0.73191216 0.74921774\nMonghsu    0.76292174 0.49224772 0.43663019 1.28022226 0.54242684 0.44579545\nTaunggyi   0.42630138 0.70964629 1.44590139 0.27585787 1.38893985 1.41003684\nPangwaun   0.85188166 0.61021100 0.80207945 1.31974439 0.38162569 0.58201863\nKyethi     0.85995144 0.63836325 0.34197759 1.38614558 0.63198396 0.45580280\nLoilen     0.57082862 0.36450393 0.66097398 1.13494470 0.60527439 0.49780670\nManton     1.14907896 0.86451839 0.11950480 1.66567128 0.48139949 0.33694631\nMongyang   0.70797360 0.72901395 1.04514215 1.22407048 0.68716629 0.78209022\nKunhing    0.53561843 0.42402944 0.71653813 1.10647819 0.51313649 0.53962069\nMongyawng  0.63580775 0.75434998 1.04457920 1.11807682 0.96977421 0.94698732\nTangyan    0.84539376 0.61913971 0.35181184 1.39166408 0.56433927 0.37304074\nNamhsan    0.90770699 0.66640478 0.26412550 1.44562624 0.52723316 0.34687531\n               Hsipaw   Monghsat    Mongmao    Nansang  Laukkaing   Pangsang\nPindaya                                                                     \nYwangan                                                                     \nPinlaung                                                                    \nMabein                                                                      \nKalaw                                                                       \nPekon                                                                       \nLawksawk                                                                    \nNawnghkio                                                                   \nKyaukme                                                                     \nMuse                                                                        \nLaihka                                                                      \nMongnai                                                                     \nMawkmai                                                                     \nKutkai                                                                      \nMongton                                                                     \nMongyai                                                                     \nMongkaing                                                                   \nLashio                                                                      \nMongpan                                                                     \nMatman                                                                      \nTachileik                                                                   \nNarphan                                                                     \nMongkhet                                                                    \nHsipaw                                                                      \nMonghsat   0.24533059                                                       \nMongmao    0.41303560 0.46640934                                            \nNansang    0.24612518 0.33632945 0.43221121                                 \nLaukkaing  1.03089022 1.05230234 0.69115953 0.89631576                      \nPangsang   0.54618054 0.50211039 0.46159046 0.41413096 0.71514062           \nNamtu      0.33535519 0.39022332 0.62557503 0.33819571 1.14369008 0.70934668\nMonghpyak  0.49397730 0.70252615 0.68122082 0.46346888 1.10767956 0.73551775\nKonkyan    0.89886161 0.84398669 0.62150851 0.95811544 0.95151277 0.83167896\nMongping   0.24793438 0.25347889 0.54694024 0.46217434 1.20423303 0.65607725\nHopong     0.09039993 0.23323999 0.47394244 0.29690132 1.10129431 0.59760307\nNyaungshwe 0.32348876 0.54915565 0.59027468 0.33204807 1.08416758 0.68841902\nHsihseng   0.21658696 0.34526457 0.57070851 0.36692358 1.18168205 0.72076574\nMongla     0.82916045 0.80499471 0.64924011 0.63787122 0.49061132 0.35841748\nHseni      0.35080646 0.53193377 0.41718731 0.24822465 0.82767393 0.53315635\nKunlong    0.86904565 0.84526724 0.61887544 0.83914747 0.81014713 0.81208861\nHopang     0.47150646 0.52132666 0.18567540 0.39472316 0.57285473 0.33630976\nNamhkan    0.66262261 0.72311092 0.38062710 0.53434319 0.38813937 0.43018431\nKengtung   0.57979176 0.68044591 0.56548551 0.37611413 0.73180022 0.42581466\nLangkho    0.39954689 0.50259502 0.35293325 0.24828583 0.72447618 0.38073591\nMonghsu    0.15445841 0.33205919 0.56108433 0.33122766 1.16773788 0.66633228\nTaunggyi   1.05756605 1.13790461 1.02963555 0.84202300 0.91555202 0.80049685\nPangwaun   0.47778015 0.52787482 0.41296327 0.57468080 0.92839162 0.57176383\nKyethi     0.30675748 0.39819678 0.68274803 0.45466014 1.29872747 0.78813650\nLoilen     0.26013574 0.21464271 0.49766434 0.18816133 0.98669672 0.42929354\nManton     0.53307184 0.52934979 0.83698949 0.74619783 1.50893888 0.94341750\nMongyang   0.61784294 0.63133807 0.21576885 0.59425974 0.53671506 0.52627626\nKunhing    0.29196883 0.32916391 0.24033524 0.27555754 0.80620221 0.34439942\nMongyawng  0.64748343 0.75269420 0.52737060 0.56830797 0.78110313 0.75025038\nTangyan    0.25052317 0.31060308 0.62455837 0.41867708 1.24972483 0.73676794\nNamhsan    0.29234837 0.35381621 0.65357584 0.48724441 1.30102032 0.77947718\n                Namtu  Monghpyak    Konkyan   Mongping     Hopong Nyaungshwe\nPindaya                                                                     \nYwangan                                                                     \nPinlaung                                                                    \nMabein                                                                      \nKalaw                                                                       \nPekon                                                                       \nLawksawk                                                                    \nNawnghkio                                                                   \nKyaukme                                                                     \nMuse                                                                        \nLaihka                                                                      \nMongnai                                                                     \nMawkmai                                                                     \nKutkai                                                                      \nMongton                                                                     \nMongyai                                                                     \nMongkaing                                                                   \nLashio                                                                      \nMongpan                                                                     \nMatman                                                                      \nTachileik                                                                   \nNarphan                                                                     \nMongkhet                                                                    \nHsipaw                                                                      \nMonghsat                                                                    \nMongmao                                                                     \nNansang                                                                     \nLaukkaing                                                                   \nPangsang                                                                    \nNamtu                                                                       \nMonghpyak  0.56508482                                                       \nKonkyan    1.05468072 1.14604980                                            \nMongping   0.47530248 0.66283576 0.88575154                                 \nHopong     0.29988746 0.51723257 0.90858584 0.20520709                      \nNyaungshwe 0.42199922 0.25729438 1.12925818 0.52190983 0.36053577           \nHsihseng   0.21472540 0.51387724 0.99021032 0.31238943 0.15437608 0.35826001\nMongla     0.92033043 0.91647528 0.98302682 0.98616400 0.88840035 0.89725192\nHseni      0.47210492 0.37475294 1.00190890 0.59212207 0.42223827 0.25925469\nKunlong    0.87978200 1.01841041 0.50094972 0.95924544 0.87745642 1.02387911\nHopang     0.66272102 0.65950941 0.71735739 0.63713139 0.54287555 0.59184502\nNamhkan    0.81241491 0.74553296 0.84296525 0.84986059 0.73809102 0.70699719\nKengtung   0.65053608 0.47081906 1.04791684 0.78719399 0.63683565 0.50465909\nLangkho    0.50441536 0.44654628 0.85152609 0.60746595 0.45536640 0.42622582\nMonghsu    0.33038198 0.48239690 1.03403725 0.26126842 0.13896961 0.28922813\nTaunggyi   1.05668505 0.81020188 1.40747231 1.25119962 1.10225983 0.92745812\nPangwaun   0.79474550 0.79272552 0.85381503 0.51038026 0.54464252 0.65103735\nKyethi     0.28220971 0.54696957 1.05664891 0.31605571 0.22745807 0.42114091\nLoilen     0.35265491 0.61478020 0.97510070 0.39434636 0.28649468 0.45350184\nManton     0.66480778 0.84193206 1.05811989 0.31265843 0.46756215 0.73058359\nMongyang   0.78128760 0.84840621 0.55409395 0.74438716 0.67387125 0.77953248\nKunhing    0.48861838 0.55745293 0.69132966 0.42898089 0.33668186 0.49028735\nMongyawng  0.60468473 0.63030522 0.87634684 0.84489256 0.67469414 0.63874002\nTangyan    0.27125335 0.58996425 1.00498070 0.24774929 0.16646820 0.43783474\nNamhsan    0.35974415 0.61250685 0.99676363 0.21790314 0.20804081 0.47825670\n             Hsihseng     Mongla      Hseni    Kunlong     Hopang    Namhkan\nPindaya                                                                     \nYwangan                                                                     \nPinlaung                                                                    \nMabein                                                                      \nKalaw                                                                       \nPekon                                                                       \nLawksawk                                                                    \nNawnghkio                                                                   \nKyaukme                                                                     \nMuse                                                                        \nLaihka                                                                      \nMongnai                                                                     \nMawkmai                                                                     \nKutkai                                                                      \nMongton                                                                     \nMongyai                                                                     \nMongkaing                                                                   \nLashio                                                                      \nMongpan                                                                     \nMatman                                                                      \nTachileik                                                                   \nNarphan                                                                     \nMongkhet                                                                    \nHsipaw                                                                      \nMonghsat                                                                    \nMongmao                                                                     \nNansang                                                                     \nLaukkaing                                                                   \nPangsang                                                                    \nNamtu                                                                       \nMonghpyak                                                                   \nKonkyan                                                                     \nMongping                                                                    \nHopong                                                                      \nNyaungshwe                                                                  \nHsihseng                                                                    \nMongla     0.98393577                                                       \nHseni      0.46364550 0.68188023                                            \nKunlong    0.90554275 0.85241501 0.86628007                                 \nHopang     0.64520647 0.47737278 0.37435528 0.66593955                      \nNamhkan    0.82522296 0.38777944 0.45735017 0.73149199 0.22215436           \nKengtung   0.69565512 0.46680758 0.33930343 0.87115611 0.42543923 0.41260437\nLangkho    0.52092592 0.52871263 0.23756965 0.69594386 0.26804933 0.36624490\nMonghsu    0.17972279 0.94988449 0.42043359 1.00121781 0.61475918 0.79319123\nTaunggyi   1.13985207 0.65753209 0.80722232 1.16140947 0.87272503 0.77305050\nPangwaun   0.67740990 0.83021500 0.57398151 1.01029117 0.46146894 0.61757992\nKyethi     0.13719890 1.06999297 0.56973913 0.99219146 0.75323565 0.93728129\nLoilen     0.37806545 0.69490836 0.41633774 0.90609430 0.48373897 0.64464399\nManton     0.49269105 1.28403604 0.86708466 1.17336501 0.94150599 1.15542286\nMongyang   0.75989753 0.60865844 0.57040255 0.52240666 0.25526432 0.34412211\nKunhing    0.44731808 0.61132332 0.36861936 0.65282441 0.25619058 0.46065956\nMongyawng  0.65723530 0.78476201 0.48755209 0.53462927 0.53347489 0.56337213\nTangyan    0.11878586 1.02497113 0.55205930 0.95898584 0.70138425 0.89323494\nNamhsan    0.18257734 1.08257546 0.60708850 0.98671314 0.74251528 0.94188771\n             Kengtung    Langkho    Monghsu   Taunggyi   Pangwaun     Kyethi\nPindaya                                                                     \nYwangan                                                                     \nPinlaung                                                                    \nMabein                                                                      \nKalaw                                                                       \nPekon                                                                       \nLawksawk                                                                    \nNawnghkio                                                                   \nKyaukme                                                                     \nMuse                                                                        \nLaihka                                                                      \nMongnai                                                                     \nMawkmai                                                                     \nKutkai                                                                      \nMongton                                                                     \nMongyai                                                                     \nMongkaing                                                                   \nLashio                                                                      \nMongpan                                                                     \nMatman                                                                      \nTachileik                                                                   \nNarphan                                                                     \nMongkhet                                                                    \nHsipaw                                                                      \nMonghsat                                                                    \nMongmao                                                                     \nNansang                                                                     \nLaukkaing                                                                   \nPangsang                                                                    \nNamtu                                                                       \nMonghpyak                                                                   \nKonkyan                                                                     \nMongping                                                                    \nHopong                                                                      \nNyaungshwe                                                                  \nHsihseng                                                                    \nMongla                                                                      \nHseni                                                                       \nKunlong                                                                     \nHopang                                                                      \nNamhkan                                                                     \nKengtung                                                                    \nLangkho    0.24433979                                                       \nMonghsu    0.65916514 0.51289930                                            \nTaunggyi   0.49373670 0.71592005 1.11581196                                 \nPangwaun   0.75181459 0.61384262 0.56591633 1.21747048                      \nKyethi     0.77244299 0.61627800 0.22387450 1.19458098 0.75333147           \nLoilen     0.53179334 0.41141162 0.32782483 0.97592354 0.56288560 0.44238792\nManton     1.06223116 0.89278549 0.47607352 1.49990825 0.76093580 0.41478639\nMongyang   0.64818416 0.46779679 0.76803304 1.05621638 0.56093363 0.87517479\nKunhing    0.45730418 0.24114587 0.43836360 0.92368522 0.48086029 0.53487512\nMongyawng  0.55984560 0.41957892 0.74225795 0.87979489 0.90077248 0.76560390\nTangyan    0.76306432 0.59345898 0.19266943 1.20429546 0.68591542 0.09982655\nNamhsan    0.81867046 0.64498266 0.22924748 1.26031563 0.69007642 0.12129831\n               Loilen     Manton   Mongyang    Kunhing  Mongyawng    Tangyan\nPindaya                                                                     \nYwangan                                                                     \nPinlaung                                                                    \nMabein                                                                      \nKalaw                                                                       \nPekon                                                                       \nLawksawk                                                                    \nNawnghkio                                                                   \nKyaukme                                                                     \nMuse                                                                        \nLaihka                                                                      \nMongnai                                                                     \nMawkmai                                                                     \nKutkai                                                                      \nMongton                                                                     \nMongyai                                                                     \nMongkaing                                                                   \nLashio                                                                      \nMongpan                                                                     \nMatman                                                                      \nTachileik                                                                   \nNarphan                                                                     \nMongkhet                                                                    \nHsipaw                                                                      \nMonghsat                                                                    \nMongmao                                                                     \nNansang                                                                     \nLaukkaing                                                                   \nPangsang                                                                    \nNamtu                                                                       \nMonghpyak                                                                   \nKonkyan                                                                     \nMongping                                                                    \nHopong                                                                      \nNyaungshwe                                                                  \nHsihseng                                                                    \nMongla                                                                      \nHseni                                                                       \nKunlong                                                                     \nHopang                                                                      \nNamhkan                                                                     \nKengtung                                                                    \nLangkho                                                                     \nMonghsu                                                                     \nTaunggyi                                                                    \nPangwaun                                                                    \nKyethi                                                                      \nLoilen                                                                      \nManton     0.67172960                                                       \nMongyang   0.65772539 1.02848173                                            \nKunhing    0.34144821 0.72192475 0.40378221                                 \nMongyawng  0.71531250 1.08611440 0.54657394 0.53610987                      \nTangyan    0.37950172 0.39722642 0.81576300 0.48634707 0.75981118           \nNamhsan    0.44934594 0.31317632 0.84901536 0.52032790 0.81052436 0.09490209"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-hierarchical-clustering",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-hierarchical-clustering",
    "title": "Hands-on Ex 6",
    "section": "4.5 Compute hierarchical clustering",
    "text": "4.5 Compute hierarchical clustering\nWe use the hclust() function to conduct the agglomerative hierarchical clustering. The ward.D method is used in this instance. The dendrogram is plotted below.\n\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\nplot(hclust_ward, cex = 0.6)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#select-optimal-clustering-algorithm",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#select-optimal-clustering-algorithm",
    "title": "Hands-on Ex 6",
    "section": "4.6 Select optimal clustering algorithm",
    "text": "4.6 Select optimal clustering algorithm\nA key challenge in hierarchical clustering is identifying strong clustering structures. The agnes() function from the cluster package computes the agglomerative coefficient, with values closer to 1 indicating a stronger clustering structure. Using agnes() and map_dbl() together, we could compute the coefficients for all hierarchical clustering algorithms. Ward’s method has the highest agglomerative coefficient.\n\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#determine-optimal-clusters",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#determine-optimal-clusters",
    "title": "Hands-on Ex 6",
    "section": "4.7 Determine Optimal Clusters",
    "text": "4.7 Determine Optimal Clusters\nThere are three methods to determine the optimal number of clusters:\n\nElbow method\nAverage silhouette method\nGap statistic method\n\nWe will use the gap statistic method, which compares the total intra-cluster variation for different values of k to what would be expected under a random uniform distribution. The optimal number of clusters is the value of k that maximizes the gap statistic, indicating that the clustering structure is significantly different from random noise.\nThe clusGap() function of the cluster package and the hcut() function of the factoextra package are used.\n\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\nThe gap statistic is plotted below using the fviz_gap_stat() function from the factoextra package. The plot initially suggests retaining 1 cluster, which is not practical. Therefore, we select 6 clusters, as it yields the next highest gap statistic.\n\nfviz_gap_stat(gap_stat)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#interpret-the-dendrogram",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#interpret-the-dendrogram",
    "title": "Hands-on Ex 6",
    "section": "4.8 Interpret the dendrogram",
    "text": "4.8 Interpret the dendrogram\nIn the dendrogram, each leaf represents an observation. Moving up the tree, similar observations are merged into branches, which are then combined at higher levels.\nThe height of each fusion, shown on the vertical axis, indicates the (dis)similarity between observations. A greater fusion height means the observations are less similar. It’s important to note that the similarity of two observations is determined solely by the height at which their branches first merge, not by their proximity along the horizontal axis.\nThe plot below shows dendrogram with the 6 clusters.\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visually-driven-hierarchical-clustering-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visually-driven-hierarchical-clustering-analysis",
    "title": "Hands-on Ex 6",
    "section": "4.9 Visually-driven hierarchical clustering analysis",
    "text": "4.9 Visually-driven hierarchical clustering analysis\nWe could also perform a visually-driven hierarchical clustering by using the heatmaply package.\n\n1. Transform the dataframe into a matrix2. Plot interactive cluster heatmap\n\n\nFirst, we need to transform the dataframe into a matrix.\n\nshan_ict_mat &lt;- data.matrix(shan_ict.std)\n\n\n\nAn interactive cluster heatmap is plotted using the heatmaply() function.\n\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )\n\nWarning in doTryCatch(return(expr), name, parentenv, handler): unable to load shared object '/Library/Frameworks/R.framework/Resources/modules//R_X11.so':\n  dlopen(/Library/Frameworks/R.framework/Resources/modules//R_X11.so, 0x0006): Library not loaded: /opt/X11/lib/libSM.6.dylib\n  Referenced from: &lt;31EADEB5-0A17-3546-9944-9B3747071FE8&gt; /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/modules/R_X11.so\n  Reason: tried: '/opt/X11/lib/libSM.6.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/X11/lib/libSM.6.dylib' (no such file), '/opt/X11/lib/libSM.6.dylib' (no such file), '/Library/Frameworks/R.framework/Resources/lib/libSM.6.dylib' (no such file), '/Library/Java/JavaVirtualMachines/jdk-11.0.18+10/Contents/Home/lib/server/libSM.6.dylib' (no such file)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualise-the-clusters-in-choropleth-map",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualise-the-clusters-in-choropleth-map",
    "title": "Hands-on Ex 6",
    "section": "4.10 Visualise the clusters in choropleth map",
    "text": "4.10 Visualise the clusters in choropleth map\nTo map the 6 clusters, we need to:\n\nUse cuttree() to extract the assignment to the six clusters.\nConvert the groups into a matrix\nAppend the groupings to shan_sf dataframe\nRename the group field.\nUse qtm() to plot the six clusters.\n\nThe choropleth map shows that the clusters are highly fragmented. This is a major limitation of using non-spatial clustering algorithms, such as hierarchical cluster analysis.\n\ngroups &lt;- as.factor(cutree(hclust_ward, k = 6))\n\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\nqtm(shan_sf_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#convert-into-spatialpolygonsdataframe",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#convert-into-spatialpolygonsdataframe",
    "title": "Hands-on Ex 6",
    "section": "5.1 Convert into SpatialPolygonsDataFrame",
    "text": "5.1 Convert into SpatialPolygonsDataFrame\nFirst, we need to convert shan_sf into SpatialPolygonsDataFrame, as the skater() function only supports sp objects.\n\nshan_sp &lt;- as_Spatial(shan_sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-neighbour-list",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-neighbour-list",
    "title": "Hands-on Ex 6",
    "section": "5.2 Compute Neighbour List",
    "text": "5.2 Compute Neighbour List\nThe poly2nd() of spdep package will be used to compute the neighbours list.\n\nshan.nb &lt;- poly2nb(shan_sp)\nsummary(shan.nb)\n\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\n\nWe can plot the neighbor list by performing these steps:\n\nCompute the centroids of each town\nPlot the Myanmar township boundaries\nPlot the network of neighbours\n\n\ncoords &lt;- st_coordinates(\n  st_centroid(st_geometry(shan_sf)))\n\nplot(st_geometry(shan_sf), \n     border=grey(.5))\nplot(shan.nb,\n     coords, \n     col=\"blue\", \n     add=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-edge-cost",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-edge-cost",
    "title": "Hands-on Ex 6",
    "section": "5.3 Compute edge cost",
    "text": "5.3 Compute edge cost\nThe nbcosts() function from the spdep package calculates the cost of each edge, representing the distance between nodes, using a data frame of observation vectors for each node.\nThis provides the pairwise dissimilarity between each observation’s values across the five variables and those of its neighboring observations (from the neighbor list). Essentially, this acts as a generalized weight for the spatial weights matrix.\nWe then incorporate these costs into a weights object, similar to how we calculated inverse distance weights. This involves converting the neighbor list into a list weights object, using the computed costs (lcost) as the weights.\nTo do this, we use the nb2listw() function from the spdep package, specifying the style as “B” to ensure that the cost values are not row-standardized.\n\nlcosts &lt;- nbcosts(shan.nb, shan_ict.std)\n\nshan.w &lt;- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1      S2\nB 55 3025 146.9004 207.2579 1895.06"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-minimum-spanning-tree",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-minimum-spanning-tree",
    "title": "Hands-on Ex 6",
    "section": "5.4 Compute minimum spanning tree",
    "text": "5.4 Compute minimum spanning tree\nThe minimum spanning tree is computed using the mstree() of spdep package.\n\nshan.mst &lt;- mstree(shan.w)\nclass(shan.mst)\n\n[1] \"mst\"    \"matrix\"\n\n\nThere are 54 dimensions instead of 55 because a minimum spanning tree has n-1 edges to connect all the nodes.\n\ndim(shan.mst)\n\n[1] 54  3\n\n\nThe content of shan.mst is shown below.\n\nhead(shan.mst)\n\n     [,1] [,2]       [,3]\n[1,]   54   48 0.09982655\n[2,]   54   17 0.17946125\n[3,]   54   45 0.19266943\n[4,]   45   34 0.26126842\n[5,]   34   16 0.21098027\n[6,]   34   24 0.21815448\n\n\nThe plot below displays the minimum spanning tree, illustrating how the initial neighbor list is simplified to a single edge connecting each node while still passing through all nodes.\n\nplot(st_geometry(shan_sf), \n                 border=gray(.5))\nplot.mst(shan.mst, \n         coords, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-spatially-constrained-clusters-using-skater-method",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#compute-spatially-constrained-clusters-using-skater-method",
    "title": "Hands-on Ex 6",
    "section": "5.5 Compute spatially constrained clusters using SKATER method",
    "text": "5.5 Compute spatially constrained clusters using SKATER method\nThe spatially constrained clusters are computed using the skater() function from the spdep package. This function requires three mandatory arguments:\n\nThe first two columns of the MST matrix (excluding the cost).\nThe data matrix (used to update costs as units are grouped).\nThe number of cuts, which is set to one less than the desired number of clusters.\n\nNote: The specified value represents the number of cuts in the graph, not the number of clusters. Therefore, it should be one less than the total number of clusters you want.\n\nclust6 &lt;- spdep::skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\nstr(clust6)\n\nList of 8\n $ groups      : num [1:55] 1 3 3 3 1 3 3 3 3 1 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:26] 48 1 13 34 16 25 55 37 10 20 ...\n  .. ..$ edge: num [1:25, 1:3] 1 13 55 25 37 34 16 25 34 10 ...\n  .. ..$ ssw : num 4274\n  ..$ :List of 3\n  .. ..$ node: num [1:17] 32 15 42 38 41 51 27 43 30 39 ...\n  .. ..$ edge: num [1:16, 1:3] 42 15 41 15 38 43 32 41 27 51 ...\n  .. ..$ ssw : num 3373\n  ..$ :List of 3\n  .. ..$ node: num [1:9] 36 6 2 8 7 46 3 9 4\n  .. ..$ edge: num [1:8, 1:3] 2 6 8 36 7 6 36 8 3 46 ...\n  .. ..$ ssw : num 1428\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 18\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 22\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 10283 9865 9461 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\nThe cluster assignments are as follows:\n\nccs6 &lt;- clust6$groups\nccs6\n\n [1] 1 3 3 3 1 3 3 3 3 1 2 1 1 1 2 1 1 5 2 1 1 6 4 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 1 1 3 2 1 1 1 2 1 2 1 1\n\n\nThis table shows the number of towns in each cluster:\n\ntable(ccs6)\n\nccs6\n 1  2  3  4  5  6 \n26 17  9  1  1  1 \n\n\nThe 6 clusters are as follows:\n\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot(clust6, \n     coords, \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualise-the-clusters-in-choropleth-map-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualise-the-clusters-in-choropleth-map-1",
    "title": "Hands-on Ex 6",
    "section": "5.6 Visualise the clusters in choropleth map",
    "text": "5.6 Visualise the clusters in choropleth map\nThe newly derived clusters are plotted below:\n\ngroups_mat &lt;- as.matrix(clust6$groups)\nshan_sf_spatialcluster &lt;- shan_sf_cluster %&gt;% \n  cbind(as.factor(groups_mat)) %&gt;%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\nThe plot below compares the clusters generated by hierarchical clustering with those obtained using the skater approach.\n\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#ward-like-hierarchical-clustering-clustgeo",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#ward-like-hierarchical-clustering-clustgeo",
    "title": "Hands-on Ex 6",
    "section": "6.1 Ward-like hierarchical clustering: ClustGeo",
    "text": "6.1 Ward-like hierarchical clustering: ClustGeo\nClustGeo package provides the hclustgeo() function to perform a typical Ward-like hierarchical clustering. To perform non-spatially constrained hierarchical clustering, we only need to provide a dissimilarity matrix as derived in section 4.4.\n\nnongeo_cluster &lt;- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n\n\n\n\nThe choropleth map allows us to visualise the clusters.\n\ngroups &lt;- as.factor(cutree(nongeo_cluster, k=6))\nshan_sf_ngeo_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatially-constrained-hierarchical-clustering",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatially-constrained-hierarchical-clustering",
    "title": "Hands-on Ex 6",
    "section": "6.2 Spatially Constrained Hierarchical Clustering",
    "text": "6.2 Spatially Constrained Hierarchical Clustering\nA spatial distance matrix is derived using the st_distance() function from the sf package. Then, as.dist() is used to convert the data frame into a matrix.\n\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\nThe choicealpha() function is then used to determine an appropriate value for the mixing parameter, alpha.\n\ncr &lt;- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n\n\n\n\n\n\n\nBased on the chart, we will use alpha = 0.4 in the spatially constrained hierarchical clustering.\n\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.4)\n\nTo visualize the clusters, we follow steps similar to those in Section 4.10:\n\nUse cuttree() to extract the six cluster assignments.\nConvert the groups into a matrix.\nAppend the groupings to the shan_sf dataframe.\nRename the grouping field.\nUse qtm() to plot the six clusters.\n\n\ngroups &lt;- as.factor(cutree(clustG, k=6))\n\nshan_sf_Gcluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\nqtm(shan_sf_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "",
    "text": "Road traffic accidents are a global public health crisis, contributing to over 1.19 million deaths annually, with millions more suffering non-fatal injuries. Vulnerable road users, such as pedestrians, cyclists, and motorcyclists, account for more than half of these fatalities. Thailand, in particular, ranks among the worst in the world for road traffic fatalities, with approximately 20,000 people dying each year due to road accidents. This study aims to uncover the factors influencing road traffic accidents in the Bangkok Metropolitan Region (BMR) by employing advanced geospatial analytics and spatio-temporal point pattern analysis.\n\n\nThe objectives of the study are as follows:\n\nTo visualise the spatio-temporal patterns of road traffic accidents in BMR using advanced statistical graphics and geovisualisation techniques.\nTo perform an in-depth spatial analysis of road traffic accidents through Network-Constrained Spatial Point Pattern Analysis, identifying high-risk zones along the road network.\nTo conduct spatio-temporal analysis of road traffic accidents using Temporal Network-Constrained Spatial Point Pattern Analysis, to reveal accident trends over time and space.\n\nThe findings will help identify accident-prone zones and provide actionable insights for improving road safety and reducing fatalities.\n\n\n\nThe following R packages are loaded for this study:\n\npacman::p_load(sf, spatstat, raster, spNetwork, tmap, tidyverse, classInt)\n\n\n\n\nThree datasets were used in this study:\n\nThailand Road Traffic Accidents (2019–2022): This dataset, sourced from [Kaggle] (https://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022), contains detailed records of road traffic accidents, including information on accident locations, types, and contributing factors over a four-year period.\nThailand Administrative Boundaries: This dataset, obtained from [HDX] (https://data.humdata.org/dataset/cod-ab-tha?), provides boundary data at multiple administrative levels (updated Jan 2022), including national (level 0), provincial (level 1), district (level 2), and sub-district (level 3), offering a geographic context for the analysis.\nThailand OpenStreetMap Road Network: This dataset, available from [HDX] (https://data.humdata.org/dataset/hotosm_tha_roads), includes detailed road network data for Thailand (updated Sep 2024), which is essential for conducting network-based spatial analysis."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#objectives",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#objectives",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "",
    "text": "The objectives of the study are as follows:\n\nTo visualise the spatio-temporal patterns of road traffic accidents in BMR using advanced statistical graphics and geovisualisation techniques.\nTo perform an in-depth spatial analysis of road traffic accidents through Network-Constrained Spatial Point Pattern Analysis, identifying high-risk zones along the road network.\nTo conduct spatio-temporal analysis of road traffic accidents using Temporal Network-Constrained Spatial Point Pattern Analysis, to reveal accident trends over time and space.\n\nThe findings will help identify accident-prone zones and provide actionable insights for improving road safety and reducing fatalities."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#r-packages",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "",
    "text": "The following R packages are loaded for this study:\n\npacman::p_load(sf, spatstat, raster, spNetwork, tmap, tidyverse, classInt)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-sources",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-sources",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "",
    "text": "Three datasets were used in this study:\n\nThailand Road Traffic Accidents (2019–2022): This dataset, sourced from [Kaggle] (https://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022), contains detailed records of road traffic accidents, including information on accident locations, types, and contributing factors over a four-year period.\nThailand Administrative Boundaries: This dataset, obtained from [HDX] (https://data.humdata.org/dataset/cod-ab-tha?), provides boundary data at multiple administrative levels (updated Jan 2022), including national (level 0), provincial (level 1), district (level 2), and sub-district (level 3), offering a geographic context for the analysis.\nThailand OpenStreetMap Road Network: This dataset, available from [HDX] (https://data.humdata.org/dataset/hotosm_tha_roads), includes detailed road network data for Thailand (updated Sep 2024), which is essential for conducting network-based spatial analysis."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#choosing-the-right-shapefile",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#choosing-the-right-shapefile",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "3.1 Choosing the Right Shapefile",
    "text": "3.1 Choosing the Right Shapefile\nThe Thailand Administrative Boundaries dataset, obtained from HDX, contains six versions of shapefiles:\n\nReference points for each sub-administrative boundary (tha_admbndp_admALL_rtsd_itos_20220121)\nBoundary lines for each administrative level (tha_admbndl_admALL_rtsd_itos_20220121)\nAdministrative Boundary Level 0 (tha_admbnda_adm0_rtsd_20220121)\nAdministrative Boundary Level 1 (tha_admbnda_adm1_rtsd_20220121)\nAdministrative Boundary Level 2 (tha_admbnda_adm2_rtsd_20220121)\nAdministrative Boundary Level 3 (tha_admbnda_adm3_rtsd_20220121)\n\nInitially, it was unclear which version would be the most appropriate for analysis. Each version was imported and explored using the st_read() and tmap package functions to determine the best one for use.\n\n1. Admin Reference points2. Admin Boundary Lines3. Admin Boundary Level 04. Admin Boundary Level 15. Admin Boundary Level 26. Admin Boundary Level 3\n\n\nThe geospatial objects are point features, likely serving as reference points for each province, district, or sub-district. As shown in the tmap plot below, these geographic points are not suitable for the purposes of this study.\n\nadmbndp &lt;- st_read(dsn = \"data/geospatial\", \n                  layer = \"tha_admbndp_admALL_rtsd_itos_20220121\")\n\nReading layer `tha_admbndp_admALL_rtsd_itos_20220121' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Take-home_Ex/Take-home_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 7425 features and 23 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 97.49002 ymin: 5.734416 xmax: 105.5628 ymax: 20.43065\nGeodetic CRS:  WGS 84\n\nglimpse(admbndp)\n\nRows: 7,425\nColumns: 24\n$ Shape_Leng &lt;dbl&gt; 0.04769920, 0.03355050, 0.01728931, 0.01904576, 0.01523190,…\n$ Shape_Area &lt;dbl&gt; 1.284175e-04, 6.068479e-05, 1.769761e-05, 1.920433e-05, 1.2…\n$ ADM3_EN    &lt;chr&gt; \"Phraborom Maharatchawang\", \"Wang Burapha Phirom\", \"Wat Rat…\n$ ADM3_TH    &lt;chr&gt; \"พระบรมมหาราชวัง\", \"วังบูรพาภิรมย์\", \"วัดราชบพิธ\", \"สำราญราษฎร์\", \"…\n$ ADM3_PCODE &lt;chr&gt; \"TH100101\", \"TH100102\", \"TH100103\", \"TH100104\", \"TH100105\",…\n$ ADM3_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2_EN    &lt;chr&gt; \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\",…\n$ ADM2_TH    &lt;chr&gt; \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\",…\n$ ADM2_PCODE &lt;chr&gt; \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\",…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ban…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหาน…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ORIG_FID   &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1…\n$ geometry   &lt;POINT [°]&gt; POINT (100.4921 13.75129), POINT (100.4989 13.74391),…\n\n\n\ntmap_mode('plot')\ntm_shape(admbndp) + \n  tm_dots(col = 'blue')\n\n\n\n\n\n\nThe geospatial objects are line features, likely serving as boundaries for each province, district, or sub-district. As shown in the tmap plot below, these geographic lines are not suitable for the purposes of this study.\n\nadmbndl &lt;- st_read(dsn = \"data/geospatial\", \n                  layer = \"tha_admbndl_admALL_rtsd_itos_20220121\")\n\nReading layer `tha_admbndl_admALL_rtsd_itos_20220121' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Take-home_Ex/Take-home_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 22425 features and 5 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(admbndl)\n\nRows: 22,425\nColumns: 6\n$ Shape_Leng &lt;dbl&gt; 0.10201525, 0.04191663, 0.16128603, 0.01169388, 0.04061323,…\n$ admLevel   &lt;int&gt; 0, 3, 3, 3, 2, 0, 0, 3, 2, 0, 0, 3, 3, 3, 3, 3, 0, 0, 2, 3,…\n$ date       &lt;date&gt; 2019-02-21, 2019-02-21, 2019-02-21, 2019-02-21, 2019-02-21…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ geometry   &lt;LINESTRING [°]&gt; LINESTRING (101.097 5.69284..., LINESTRING (101.…\n\n\n\ntmap_mode('plot')\ntm_shape(admbndl) + \n  tm_lines(col = 'blue')\n\n\n\n\n\n\nThe geospatial object is a multipolygon feature representing the country boundary (as shown in the tmap plot below). Since the analysis is focused at the BMR level, this shapefile is not suitable.\n\nadm0 &lt;- st_read(dsn = \"data/geospatial\", \n                  layer = \"tha_admbnda_adm0_rtsd_20220121\")\n\nReading layer `tha_admbnda_adm0_rtsd_20220121' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Take-home_Ex/Take-home_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(adm0)\n\nRows: 1\nColumns: 14\n$ Shape_Leng &lt;dbl&gt; 106.6359\n$ Shape_Area &lt;dbl&gt; 43.40351\n$ ADM0_EN    &lt;chr&gt; \"Thailand\"\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\"\n$ ADM0_PCODE &lt;chr&gt; \"TH\"\n$ ADM0_REF   &lt;chr&gt; NA\n$ ADM0ALT1EN &lt;chr&gt; NA\n$ ADM0ALT2EN &lt;chr&gt; NA\n$ ADM0ALT1TH &lt;chr&gt; NA\n$ ADM0ALT2TH &lt;chr&gt; NA\n$ date       &lt;date&gt; 2019-02-18\n$ validOn    &lt;date&gt; 2022-01-22\n$ validTo    &lt;date&gt; NA\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.0903 6....\n\n\n\ntmap_mode('plot')\ntm_shape(adm0) +\n  tm_borders()\n\n\n\n\n\n\nThe geospatial object is a multipolygon feature representing provincial boundaries (as shown in the tmap plot below). This level of analysis could be useful for the study. Note that the geometries are in WGS 84 geographical coordinate system.\n\nadm1 &lt;- st_read(dsn = \"data/geospatial\", \n                  layer = \"tha_admbnda_adm1_rtsd_20220121\")\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Take-home_Ex/Take-home_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(adm1)\n\nRows: 77\nColumns: 17\n$ Shape_Leng &lt;dbl&gt; 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area &lt;dbl&gt; 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.6139 13..., MULTIPOLYGON (…\n\n\n\ntmap_mode('plot')\ntm_shape(adm1) +\n  tm_borders()\n\n\n\n\n\n\nThe geospatial object is a multipolygon feature representing district boundaries (as shown in the tmap plot below). This level of analysis could be useful for the study. Note that the geometries are in WGS 84 geographical coordinate system.\n\nadm2 &lt;- st_read(dsn = \"data/geospatial\", \n                  layer = \"tha_admbnda_adm2_rtsd_20220121\")\n\nReading layer `tha_admbnda_adm2_rtsd_20220121' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Take-home_Ex/Take-home_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 928 features and 19 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(adm2)\n\nRows: 928\nColumns: 20\n$ Shape_Leng &lt;dbl&gt; 0.08541733, 0.13413177, 0.67634217, 0.08588647, 0.30172202,…\n$ Shape_Area &lt;dbl&gt; 0.0004504685, 0.0009501914, 0.0198588627, 0.0003369561, 0.0…\n$ ADM2_EN    &lt;chr&gt; \"Phra Nakhon\", \"Dusit\", \"Nong Chok\", \"Bang Rak\", \"Bang Khen…\n$ ADM2_TH    &lt;chr&gt; \"พระนคร\", \"ดุสิต\", \"หนองจอก\", \"บางรัก\", \"บางเขน\", \"บางกะปิ\", \"ป…\n$ ADM2_PCODE &lt;chr&gt; \"TH1001\", \"TH1002\", \"TH1003\", \"TH1004\", \"TH1005\", \"TH1006\",…\n$ ADM2_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ban…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหาน…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.5007 13..., MULTIPOLYGON (…\n\n\n\ntmap_mode('plot')\ntm_shape(adm2) +\n  tm_borders()\n\n\n\n\n\n\nThe geospatial object is a multipolygon feature representing subdistrict boundaries (as shown in the tmap plot below). Due to its high granularity, we have decided not to use admin boundary level 3 for the analysis. Due to the granularity of the boundaries, the chart is not plotted.\n\nadm3 &lt;- st_read(dsn = \"data/geospatial\", \n                  layer = \"tha_admbnda_adm3_rtsd_20220121\")\n\nReading layer `tha_admbnda_adm3_rtsd_20220121' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Take-home_Ex/Take-home_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 7425 features and 22 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(adm3)\n\nRows: 7,425\nColumns: 23\n$ Shape_Leng &lt;dbl&gt; 0.04769920, 0.03355050, 0.01728931, 0.01904576, 0.01523190,…\n$ Shape_Area &lt;dbl&gt; 1.284175e-04, 6.068479e-05, 1.769761e-05, 1.920433e-05, 1.2…\n$ ADM3_EN    &lt;chr&gt; \"Phraborom Maharatchawang\", \"Wang Burapha Phirom\", \"Wat Rat…\n$ ADM3_TH    &lt;chr&gt; \"พระบรมมหาราชวัง\", \"วังบูรพาภิรมย์\", \"วัดราชบพิธ\", \"สำราญราษฎร์\", \"…\n$ ADM3_PCODE &lt;chr&gt; \"TH100101\", \"TH100102\", \"TH100103\", \"TH100104\", \"TH100105\",…\n$ ADM3_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2_EN    &lt;chr&gt; \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\",…\n$ ADM2_TH    &lt;chr&gt; \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\",…\n$ ADM2_PCODE &lt;chr&gt; \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\",…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ban…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหาน…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.4945 13..., MULTIPOLYGON (…"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#obtaining-bmr-boundaries",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#obtaining-bmr-boundaries",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "3.2 Obtaining BMR Boundaries",
    "text": "3.2 Obtaining BMR Boundaries\nAdmin Boundary Level 1 (provinces) and Admin Boundary Level 2 (districts) are useful for the study. The provincial level offers a high-level overview, while the district level provides flexibility for deeper analysis if specific districts need to be examined.\n\n1. BMR Provinces2. BMR Districts\n\n\nWe applied the filter() function to select the six provinces within the Bangkok Metropolitan Region (BMR). We also use the select() function to retain important columns required for the analysis. As the shapefile is in WGS geographical coordinate system, we will transform them to the projected coordinate system, EPSG 32647.\n\nbmr_adm1 &lt;- adm1 %&gt;%\n  filter(ADM1_EN %in% c(\"Nakhon Pathom\", \"Nonthaburi\", \"Pathum Thani\", \"Samut Sakhon\", \"Bangkok\", \"Samut Prakan\")) %&gt;%\n  select(Shape_Leng, Shape_Area, ADM1_EN, geometry) %&gt;%\n  st_transform(crs = 32647)\nglimpse(bmr_adm1)\n\nRows: 6\nColumns: 4\n$ Shape_Leng &lt;dbl&gt; 2.417227, 1.695100, 1.251111, 1.884945, 2.463030, 1.566369\n$ Shape_Area &lt;dbl&gt; 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.17891420,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"N…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((674339.8 15..., MULTIPOLYGON (((687139.8 15…\n\n\n\ntmap_mode('plot')\ntm_shape(bmr_adm1) +\n  tm_borders()\n\n\n\n\n\n\nWe applied the filter() function to select districts in the six provinces within the Bangkok Metropolitan Region (BMR). We also use the select() function to retain important columns required for the analysis. As the shapefile is in WGS geographical coordinate system, we will transform them to the projected coordinate system, EPSG 32647.\n\nbmr_adm2 &lt;- adm2 %&gt;%\n  filter(ADM1_EN %in% c(\"Nakhon Pathom\", \"Nonthaburi\", \"Pathum Thani\", \"Samut Sakhon\", \"Bangkok\", \"Samut Prakan\")) %&gt;%\n  select(Shape_Leng, Shape_Area, ADM1_EN, ADM2_EN, geometry) %&gt;%\n  st_transform(crs = 32647)\nglimpse(bmr_adm2)\n\nRows: 79\nColumns: 5\n$ Shape_Leng &lt;dbl&gt; 0.08541733, 0.13413177, 0.67634217, 0.08588647, 0.30172202,…\n$ Shape_Area &lt;dbl&gt; 0.0004504685, 0.0009501914, 0.0198588627, 0.0003369561, 0.0…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ban…\n$ ADM2_EN    &lt;chr&gt; \"Phra Nakhon\", \"Dusit\", \"Nong Chok\", \"Bang Rak\", \"Bang Khen…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((662263.2 15..., MULTIPOLYGON (…\n\n\n\ntmap_mode('plot')\ntm_shape(bmr_adm2) +\n  tm_borders()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#aspatial-eda",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#aspatial-eda",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "5.1 Aspatial EDA",
    "text": "5.1 Aspatial EDA\nTo gain some insights on the nature of the road accidents, the following analysis were conducted:\n\nBy Vehicle TypeBy Presumed CauseBy Road/Slope TypeCommon Road Type in SpeedingCommon Road Type in Environmental/Road Infrastructure IssuesBy Weather ConditionBy Accident Type\n\n\nMost of the road traffic accidents involved private/passenger cars (34.6%), followed by medium-sized vehicles (29.4%; such as van, 4-wheel pickup truck, passenger pickup truck, and large passenger vehicle).\n\nrta_sf %&gt;%\n  count(vehicle_type_grp) %&gt;%\n  mutate(proportion = n/sum(n)) %&gt;%\n  as.tibble() %&gt;%\n  select(-geometry)\n\n# A tibble: 6 × 3\n  vehicle_type_grp               n proportion\n  &lt;chr&gt;                      &lt;int&gt;      &lt;dbl&gt;\n1 cyclist/pedestrian            36    0.00278\n2 heavy trucks                1855    0.143  \n3 medium-sized vehicles       3811    0.294  \n4 others                      1086    0.0837 \n5 private/passenger car       4482    0.346  \n6 two/three-wheeled vehicles  1699    0.131  \n\n\n\nrta_sf %&gt;%\n  count(vehicle_type_grp) %&gt;%\n  ggplot(aes(x = n, y = reorder(vehicle_type_grp, n))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"No. of Accidents\", y = \"Vehicle Type\", title = \"No. of Accidents by Vehicle Type\")\n\n\n\n\n\n\nThe majority of road traffic accidents were attributed to speeding, which accounted for 78.1% of incidents. Other errant driving behaviors made up 5.4%, while environmental and road infrastructure issues contributed only 5.2%. These findings suggest that most road traffic accidents are caused by driver behavior rather than environmental factors.\n\nrta_sf %&gt;%\n  count(presumed_cause_grp) %&gt;%\n  mutate(proportion = n/sum(n)) %&gt;%\n  as.tibble() %&gt;%\n  select(-geometry)\n\n# A tibble: 6 × 3\n  presumed_cause_grp                           n proportion\n  &lt;chr&gt;                                    &lt;int&gt;      &lt;dbl&gt;\n1 environmental/road infrastructure issues   680    0.0524 \n2 other errant driving behaviours            704    0.0543 \n3 others                                     957    0.0738 \n4 running red lights/traffic signals          96    0.00740\n5 speeding                                 10132    0.781  \n6 vehicle failure/issues                     400    0.0308 \n\n\n\nrta_sf %&gt;%\n  count(presumed_cause_grp) %&gt;%\n  ggplot(aes(x = n, y = reorder(presumed_cause_grp, n))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"No. of Accidents\", y = \"Presumed Cause\", title = \"No. of Accidents by Presumed Cause\")\n\n\n\n\n\n\nThe majority of road traffic accidents occurred on straight roads. When accounting for the slope, most of these accidents took place on non-sloped straight roads.\n\nrta_sf %&gt;%\n  count(road_description) %&gt;%\n  ggplot(aes(x = n, y = reorder(road_description, n))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"No. of Accidents\", y = \"Road Description\", title = \"No. of Accidents by Road Description\")\n\n\n\n\n\nrta_sf %&gt;%\n  mutate(road_slope_description = case_when(\n    slope_description == \"slope area\" & road_description == \"straight road\" ~ \"sloped straight road\",\n    TRUE ~ road_description)) %&gt;%\n  count(road_slope_description) %&gt;%\n  ggplot(aes(x = n, y = reorder(road_slope_description, n))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"No. of Accidents\", y = \"Road Description\", title = \"No. of Accidents by Road/Slope Description\")\n\n\n\n\n\nrta_sf %&gt;%\n  count(slope_description) %&gt;%\n  ggplot(aes(x = n, y = reorder(slope_description, n))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"No. of Accidents\", y = \"Slope Description\", title = \"No. of Accidents by Slope Description\")\n\n\n\n\n\n\nThe majority of speeding related accidents occurred on straight roads.\n\nrta_sf %&gt;%\n  filter(presumed_cause_grp == \"speeding\") %&gt;%\n  count(road_description) %&gt;%\n  ggplot(aes(x = n, y = reorder(road_description, n))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"No. of Accidents\", y = \"Road Description\", title = \"Speeding-Related Accidents by Road Description\")\n\n\n\n\n\n\nThe majority of environmental/road infrastructure related accidents also occurred on straight roads.\n\nrta_sf %&gt;%\n  filter(presumed_cause_grp == \"environmental/road infrastructure issues\") %&gt;%\n  count(road_description) %&gt;%\n  ggplot(aes(x = n, y = reorder(road_description, n))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"No. of Accidents\", y = \"Road Description\", title = \"Environmental/Road Infrastructure-Related Accidents \\nby Road Description\")\n\n\n\n\n\n\nThe majority of accidents occurred on a clear day.\n\nrta_sf %&gt;%\n  count(weather_condition) %&gt;%\n  ggplot(aes(x = n, y = reorder(weather_condition, n))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"No. of Accidents\", y = \"Weather Condition\", title = \"No. of Accidents by Weather Condition\")\n\n\n\n\n\n\nMajority of the accidents were rear-end collision (53.0%), with a sizeable number resulting in rollover/fallen on straight roads (30.1%).\n\nrta_sf %&gt;%\n  count(accident_type) %&gt;%\n  mutate(proportion = n/sum(n)) %&gt;%\n  as.tibble() %&gt;%\n  select(-geometry)\n\n# A tibble: 11 × 3\n   accident_type                                    n proportion\n   &lt;chr&gt;                                        &lt;int&gt;      &lt;dbl&gt;\n 1 collision at intersection corner                75   0.00578 \n 2 collision during overtaking                     12   0.000925\n 3 collision with obstruction (on road surface)   458   0.0353  \n 4 head-on collision (not overtaking)             102   0.00786 \n 5 other                                          856   0.0660  \n 6 pedestrian collision                           121   0.00933 \n 7 rear-end collision                            6872   0.530   \n 8 rollover/fallen on curved road                 415   0.0320  \n 9 rollover/fallen on straight road              3908   0.301   \n10 side collision                                 139   0.0107  \n11 turning/retreating collision                    11   0.000848\n\n\n\nrta_sf %&gt;%\n  count(accident_type) %&gt;%\n  ggplot(aes(x = n, y = reorder(accident_type, n))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"No. of Accidents\", y = \"Accident Type\", title = \"No. of Accidents by Accident Type\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#temporal-eda",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#temporal-eda",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "5.2 Temporal EDA",
    "text": "5.2 Temporal EDA\nThis section will focus on the temporal dimension of the accidents.\n\nBy DateBy Year-MonthBy MonthBy Day of WeekBy Hour of DayBy Hour of Day (Weekdays vs Weekends)\n\n\nThis chart reveals noticeable spikes in accidents, particularly in April and December, which may coincide with popular holidays in Thailand.\n\nrta_sf %&gt;%\n  ggplot(aes(x = rta_date)) +\n  geom_histogram(stat = \"count\") +\n  labs(x = \"Date\", y = \"No. of Accidents\", title = \"No. of Accidents by Date\")\n\n\n\n\n\n\nSimilar to the earlier chart, this chart reveals noticeable spikes in accidents, particularly in the month of April and December. Spikes in accidents were also observed in 2019-01 and 2022-10.\n\nrta_sf %&gt;%\n  ggplot(aes(x = yyyymm)) +\n  geom_histogram(stat = \"count\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0.5)) +\n  labs(x = \"Date\", y = \"No. of Accidents\", title = \"No. of Accidents by Year-Month\") \n\n\n\n\n\n\nIn general, accidents typically occur in the months of January, April, October, and December.\n\nrta_sf %&gt;%\n  ggplot(aes(x = mm)) +\n  geom_histogram(stat=\"count\") +\n  labs(x = \"yyyymm\", y = \"No. of Accidents\", title = \"No. of Accidents by Month\")\n\n\n\n\n\n\nThere were higher occurrences on Fridays and Saturdays than other days of the week.\n\nrta_sf %&gt;%\n  ggplot(aes(x = day_of_week)) +\n  geom_histogram(stat=\"count\") +\n  labs(x = \"Day of Week\", y = \"No. of Accidents\", title = \"No. of Accidents by Day of Week\")\n\n\n\n\n\n\nAccidents tend to occur in the day time, particularly in the morning and evening peak hours.\n\nrta_sf %&gt;%\n  ggplot(aes(x = hr)) +\n  geom_histogram(stat=\"count\") +\n  labs(x = \"Hour of Day\", y = \"No. of Accidents\", title = \"No. of Accidents by Hour of Day\")\n\n\n\n\n\n\nWhen comparing accidents by hour of the day on weekdays versus weekends, we observed more distinct spikes during the morning rush hour and between 6–8pm on weekdays. On weekends, spikes were only noted at 11am, 3-4pm, and 7pm\n\nrta_sf %&gt;%\n  ggplot(aes(x = hr)) +\n  geom_histogram(stat = \"count\") +\n  facet_grid(. ~ weekend) +\n  labs(x = \"Hour of Day\", y = \"No. of Accidents\", title = \"No. of Accidents by Hour of Day (weekdays vs weekends)\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#spatial-eda-geovisualisation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#spatial-eda-geovisualisation",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "5.3 Spatial EDA (Geovisualisation)",
    "text": "5.3 Spatial EDA (Geovisualisation)\nThis section presents the geovisualization of accidents as part of the spatial EDA.\n\nChoropleth Map (Provincial Level)Choropleth Map (District Level)Geovisualisation of Accidents\n\n\nBefore plotting the choropleth map, we first need to count the number of traffic accidents in each province. We do so by using st_intersects() function on the province boundaries and the point layers, and then count them using the lengths() function. We also compute the area (in m^2) of each province using st_area() function and then compute the density of traffic accidents per kilometer square.\n\nbmr_adm1_rta &lt;- bmr_adm1 %&gt;%\n  mutate(no_of_rta = lengths(st_intersects(bmr_adm1, rta_sf)),\n         area = st_area(.),\n         density = no_of_rta / area * 1000000)\nglimpse(bmr_adm1_rta)\n\nRows: 6\nColumns: 7\n$ Shape_Leng &lt;dbl&gt; 2.417227, 1.695100, 1.251111, 1.884945, 2.463030, 1.566369\n$ Shape_Area &lt;dbl&gt; 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.17891420,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"N…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((674339.8 15..., MULTIPOLYGON (((687139.8 15…\n$ no_of_rta  &lt;int&gt; 6081, 2239, 825, 1922, 890, 1012\n$ area       [m^2] 1571323599 [m^2], 949050395 [m^2], 636391375 […\n$ density    [1/m^2] 3.8699858 [1/m^2], 2.3592003 [1/m^2], 1.2963721 [1/m^2], 1.…\n\n\nThe choropleth maps by density are plotted below. The left figure is classified using the quantile method, while the right figure is classified using the jenks method. n is set at 5 so that we can have a good view on the province(s) with higher density. Bangkok and Samut Praka are the provinces with the highest densities.\n\nquantile_choropleth_adm1 &lt;- tm_shape(bmr_adm1_rta) +\n  tm_fill(\"density\", n = 5, style = \"quantile\", title = \"Density (quantile)\") +\n  tm_borders(alpha = 0.5)\n\njenks_choropleth_adm1 &lt;- tm_shape(bmr_adm1_rta) +\n  tm_fill(\"density\", n = 5, style = \"jenks\", title = \"Density (jenks)\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(quantile_choropleth_adm1, jenks_choropleth_adm1, asp=1, ncol=2)\n\n\n\n\n\n\nFor choropleth map at the district level, we use the same method as before to count the number of traffic accidents in each district. We do so by using st_intersects() function on the district boundaries and the point layers, and then count them using the lengths() function. We also compute the area (in m^2) of each district using st_area() function and then compute the density of traffic accidents per kilometer square.\n\nbmr_adm2_rta &lt;- bmr_adm2 %&gt;%\n  mutate(no_of_rta = lengths(st_intersects(bmr_adm2, rta_sf)),\n         area = st_area(.),\n         density = no_of_rta / area * 1000000)\nglimpse(bmr_adm2_rta)\n\nRows: 79\nColumns: 8\n$ Shape_Leng &lt;dbl&gt; 0.08541733, 0.13413177, 0.67634217, 0.08588647, 0.30172202,…\n$ Shape_Area &lt;dbl&gt; 0.0004504685, 0.0009501914, 0.0198588627, 0.0003369561, 0.0…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ban…\n$ ADM2_EN    &lt;chr&gt; \"Phra Nakhon\", \"Dusit\", \"Nong Chok\", \"Bang Rak\", \"Bang Khen…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((662263.2 15..., MULTIPOLYGON (…\n$ no_of_rta  &lt;int&gt; 0, 0, 60, 8, 126, 10, 45, 0, 6, 72, 924, 138, 0, 82, 2, 0, …\n$ area       [m^2] 5389088 [m^2], 11366450 [m^2], 237563473 [m^2], 4031673 [m^…\n$ density    [1/m^2] 0.00000000 [1/m^2], 0.00000000 [1/m^2], 0.25256408 [1/m^2…\n\n\nThe choropleth maps by density are plotted below. The left figure is classified using the quantile method, while the right figure is classified using the jenks method. Districts with higher densities appear to coincide with the major roads running across these districts.\n\nquantile_choropleth_adm2 &lt;- tm_shape(bmr_adm2_rta) +\n  tm_fill(\"density\", n = 5, style = \"quantile\", title = \"Density (quantile)\") +\n  tm_borders(alpha = 0.5)\n\njenks_choropleth_adm2 &lt;- tm_shape(bmr_adm2_rta) +\n  tm_fill(\"density\", n = 5, style = \"jenks\", title = \"Density (jenks)\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(quantile_choropleth_adm2, jenks_choropleth_adm2, asp=1, ncol=2)\n\n\n\n\n\n\nChoropleth maps are not the best method to visualise network constrained events, but they still give us a high level overview of the situation. Here, we provide an interactive map of the traffic accidents in BMR.\n\ntmap_mode('view')\ntm_shape(bmr_adm1) +\n  tm_borders() +\n  tm_shape(rta_sf) + \n  tm_dots() +\n  tm_shape(bmr_main_network) +\n  tm_lines()\n\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "6.1 Data Preparation",
    "text": "6.1 Data Preparation\nThe following steps are performed to retrieved events, admin boundaries and road network in Bangkok:\n\nIn rta_sf dataframe, we filter for traffic accidents in Bangkok.\nIn bkk_adm1 dataframe, we filter for province boundary of Bangkok.\nWe used the st_intersects() function to identify all roads intersecting with Bangkok province, including those that partially fall outside. We then filtered the road networks to retain only those with non-empty intersections (i.e., where lengths() is greater than 0).\n\n\nbkk_rta &lt;- rta_sf %&gt;%\n  filter(province_en == \"Bangkok\")\nbkk_adm1 &lt;- bmr_adm1 %&gt;%\n  filter(ADM1_EN == \"Bangkok\")\nbkk_network_intersection &lt;- st_intersects(bmr_main_network, bkk_adm1)\nbkk_network &lt;- bmr_main_network[lengths(bkk_network_intersection) &gt; 0,]\n\nBefore we could perform network kernel density estimation (NKDE), we need to compute the nearest neighbour distances between road traffic accidents so as to gauge a sensible estimate for the lixel length and the bandwidth to be used in NKDE.\nWe first need to use as.ppp() function from the spatstat package to convert the road traffic accident dataset into ppp format. We also need to use as.owin() function from the spatstat package to convert the Bangkok administrative region into an owin object. We then extract the road traffic accidents within the owin object before calculating the nearest distances between points using nndist() function.\nThe summary showed that the median nearest neighbour distance is 8.8m, and the mean is 30.6m. Given the high computational cost, we will use a lixel length of 100m, with minimum distance of 50m.\n\nbkk_rta_ppp &lt;- as.ppp(bkk_rta)\nbkk_adm1_owin &lt;- as.owin(bkk_adm1)\nrta_bkk_ppp &lt;- bkk_rta_ppp[bkk_adm1_owin]\nnndistances &lt;- nndist(rta_bkk_ppp) %&gt;%\n  as_tibble()\nsummary(nndistances)\n\n     value         \n Min.   :   0.000  \n 1st Qu.:   0.865  \n Median :   8.789  \n Mean   :  30.620  \n 3rd Qu.:  26.531  \n Max.   :7734.673"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#network-kernel-density-estimation-nkde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#network-kernel-density-estimation-nkde",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "6.2 Network Kernel Density Estimation (NKDE)",
    "text": "6.2 Network Kernel Density Estimation (NKDE)\nBefore computing NKDE, the SpatialLines object must be segmented into lixels with a specified minimum distance. As mentioned above, the lixel length (lx_length) is set to 100m, and the minimum length (mindist) is set to 50m. lines_center() from the spNetwork package is used to generate a SpatialPointsDataFrame with points positioned at the center of each line, based on the line’s length, as shown in the code below.\n\n# creating sample points\nbkk_lixels &lt;- lixelize_lines(bkk_network, \n                         lx_length = 100, \n                         mindist = 50)\nbkk_samples &lt;- lines_center(bkk_lixels)\n\nThe following intends to use likelihood cross validation to find the optimal bandwidth. Due to the long computational time, this code was not run. Let’s assume a value of 400m yielded the lowest score, and we shall use 400m as the optimal bandwidth.\nThe following compute the simple NKDE. The simple method, proposed by Xie and Yan (2008), differs from classical KDE in two key ways:\n\nEvents are snapped to a network.\nDistances between sampling points and events are measured along the network (i.e., not using Euclidean distances).\n\nThe densities were events per meter and thus converted to events per kilometer.\n\nbkk_simple_densities &lt;- nkde(lines = bkk_network, \n                         events = bkk_rta,\n                         w = rep(1, nrow(bkk_rta)), \n                         samples = bkk_samples,\n                         kernel_name = \"quartic\", \n                         bw = 400, \n                         div= \"bw\", \n                         method = \"simple\",\n                         digits = 1, tol = 1,\n                         grid_shape = c(1,1), \n                         max_depth = 8,\n                         agg = 5, \n                         sparse = TRUE,\n                         verbose = FALSE)\nbkk_samples$simple_density &lt;- bkk_simple_densities * 1000\nbkk_lixels$simple_density &lt;- bkk_simple_densities * 1000\n\nThe following shows the simple NKDE of traffic accidents in Bangkok. Higher densities are observed along the main road arteries of Bangkok.\n\nbkk_samples2 &lt;- bkk_samples[order(bkk_samples$simple_density),]\n\ntmap_mode('plot')\ntm_shape(bkk_lixels) + \n  tm_lines(\"black\") + \n  tm_shape(bkk_samples2) + \n  tm_dots(\"simple_density\", style = \"kmeans\", palette = \"viridis\", n = 7\n          , size = 0.1, title = \"Simple Density\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#complete-spatial-randomness-test",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#complete-spatial-randomness-test",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "6.3 Complete Spatial Randomness Test",
    "text": "6.3 Complete Spatial Randomness Test\nA test for complete spatial randomness (CSR) can be performed using the network-constrained G- and K-functions.\nThe test hypotheses are as follows:\n\nH0: The distribution of traffic accidents in Bangkok are randomly distributed along the road network.\nH1: The distribution of traffic accidents in Bangkok are not randomly distributed along the road network.\n\nAlpha is set at 0.05, with 50 Monte-carlo simulations.\n(Due to high computational time, this analysis was not run.)\n\nset.seed(2024)\nkfun_bkk_rta &lt;- kfunctions.mc(bkk_network, \n                             bkk_rta,\n                             start = 0, \n                             end = 400, \n                             step = 100, \n                             width = 50, \n                             nsim = 39, \n                             agg = 100,\n                             resolution = 50,\n                             verbose = FALSE, \n                             conf_int = 0.05)\n\n\nNetwork K-functionNetwork G-function\n\n\n(Due to high computational time, this analysis was not run.)\n\nkfun_bkk_rta$plotk\n\n\n\n(Due to high computational time, this analysis was not run.)\n\nkfun_bkk_rta$plotg"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#temporal-density-kernel-estimate-tkde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#temporal-density-kernel-estimate-tkde",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "6.4 Temporal Density Kernel Estimate (TKDE)",
    "text": "6.4 Temporal Density Kernel Estimate (TKDE)\nIn this section, we explore the density of traffic accidents in time (hour of day). Over here, we calculate the kernel density values in time for several time bandwidths:\n\n1-hour time frame\n2-hour\n3-hour\n4-hour\n5-hour\n6-hour\n\nWe first assign the weights of each accident as 1, and create a sequence of time every half-hourly.\ntkde() function is used to compute the time kernel density for each time bandwidth.\n\nw &lt;- rep(1, nrow(bkk_rta))\ntsamples &lt;- seq(0, max(bkk_rta$hr), 0.5)\n\ntime_kernel_values &lt;- data.frame(\n  bw_1 = tkde(bkk_rta$hr, w = w, samples = tsamples, bw = 1, kernel_name = \"quartic\"),\n  bw_2 = tkde(bkk_rta$hr, w = w, samples = tsamples, bw = 2, kernel_name = \"quartic\"),\n  bw_3 = tkde(bkk_rta$hr, w = w, samples = tsamples, bw = 3, kernel_name = \"quartic\"),\n  bw_4 = tkde(bkk_rta$hr, w = w, samples = tsamples, bw = 4, kernel_name = \"quartic\"),\n  bw_5 = tkde(bkk_rta$hr, w = w, samples = tsamples, bw = 5, kernel_name = \"quartic\"),\n  bw_6 = tkde(bkk_rta$hr, w = w, samples = tsamples, bw = 6, kernel_name = \"quartic\"),\n  time = tsamples\n)\n\ndf_time &lt;- reshape2::melt(time_kernel_values, id.vars = \"time\")\ndf_time$variable &lt;- as.factor(df_time$variable)\n\nThe charts below show the TKDE for each bandwidth with 1-hour being the most noisy, and 6-hour being the smoothest. A bandwidth of 2, 3 and 4 hours provide some pattern of the accidents, with higher density occurring in the morning (8-9.30am) and evening rush hour (5-7pm).\n\nggplot(data = df_time) + \n  geom_line(aes(x = time, y = value)) +\n  facet_wrap(vars(variable), ncol=2, scales = \"free\") + \n  theme(axis.text = element_text(size = 5))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#finding-optimal-spatio-temporal-kernel",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#finding-optimal-spatio-temporal-kernel",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "6.5 Finding Optimal Spatio-temporal Kernel",
    "text": "6.5 Finding Optimal Spatio-temporal Kernel\nTo estimate the optimal spatio-temporal network density kernel, we use the likelihood cross validation in bw_tnkde_cv_likelihood_calc.mc() to find the optimal combination of distance and temporal bandwidths.\n\ncv_scores &lt;- bw_tnkde_cv_likelihood_calc.mc(\n  bws_net = seq(400, 1000, 100),\n  bws_time = seq(1, 6, 1),\n  lines = bkk_network,\n  events = bkk_rta,\n  time_field = \"hr\",\n  w = rep(1, nrow(bkk_rta)),\n  kernel_name = \"quartic\",\n  method = \"simple\",\n  diggle_correction = FALSE,\n  max_depth = 8,\n  digits = 1,\n  tol = 1,\n  agg = 5,\n  sparse=TRUE,\n  grid_shape=c(1,1),\n  sub_sample=1,\n  verbose = FALSE,\n  check = TRUE)\n\nFrom the chart below, a distance bandwidth of 1000m and a temporal bandwidth of 6 hour yielded the lowest score and thus considered as the optimal bandwidths.\n\nknitr::kable(cv_scores)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n400\n-399.4995\n-220.1321\n-157.05621\n-127.23034\n-107.04357\n-92.87615\n\n\n500\n-364.4149\n-188.0369\n-132.76538\n-107.05438\n-88.94502\n-78.75382\n\n\n600\n-332.9791\n-167.8747\n-117.29802\n-92.75308\n-77.15132\n-69.13062\n\n\n700\n-307.1789\n-151.3773\n-106.16577\n-83.22687\n-69.56188\n-62.23208\n\n\n800\n-279.6614\n-135.9919\n-95.12891\n-75.37434\n-62.29265\n-55.87494\n\n\n900\n-260.9053\n-125.0417\n-87.38899\n-68.78599\n-57.51816\n-51.67397\n\n\n1000\n-244.6503\n-116.0034\n-79.85805\n-62.62556\n-52.39002\n-47.33948"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#temporal-network-kernel-density-estimate-tnkde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#temporal-network-kernel-density-estimate-tnkde",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "6.6 Temporal Network Kernel Density Estimate (TNKDE)",
    "text": "6.6 Temporal Network Kernel Density Estimate (TNKDE)\nIn this step, we compute the temporal network kernel density estimate (TNKDE) using tnkde.mc() function.\n\n# choosing sample in time\nsample_time &lt;- seq(0, max(bkk_rta$hr), 1)\n\n# calculating densities\ntnkde_densities &lt;- tnkde.mc(lines = bkk_network,\n                   events = bkk_rta,\n                   time_field = \"hr\",\n                   w = rep(1, nrow(bkk_rta)), \n                   samples_loc = bkk_samples,\n                   samples_time = sample_time, \n                   kernel_name = \"quartic\",\n                   bw_net = 1000, bw_time = 6,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"simple\",\n                   div = \"bw\", max_depth = 8,\n                   digits = 1, tol = 1,\n                   agg = 5, grid_shape = c(1,1), \n                   verbose  = FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#tnkde-plot",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#tnkde-plot",
    "title": "Take Home Ex 1: Geospatial Analytics on Road Traffic Accidents in Bangkok Metropolitan Region (BMR)",
    "section": "6.7 TNKDE Plot",
    "text": "6.7 TNKDE Plot\nThe following codes show the animation of the TNKDE over the hour of day. The chart shows that there are higher densities at specific road arteries in Bangkok, particularly in the morning and evening hours.\n\n# creating a color palette for all the densities\nall_densities &lt;- c(tnkde_densities$k)\ncolor_breaks &lt;- classIntervals(all_densities, n = 10, style = \"kmeans\")\n\n\n# choosing sample in time\nsample_time &lt;- seq(0, max(bkk_rta$hr), 1)\n\n# generating a map at each sample time\nall_maps &lt;- lapply(1:ncol(tnkde_densities$k), function(i){\n  time &lt;- sample_time[[i]]\n  hour &lt;- 0 + time\n  \n  bkk_samples$density &lt;- tnkde_densities$k[,i]\n  map1 &lt;- tm_shape(bkk_samples) + \n          tm_dots(col = \"density\", size = 0.01,\n          breaks = color_breaks$brks, palette = \"viridis\", n = 10) + \n    tm_layout(legend.show = FALSE, main.title = as.character(hour), main.title.size = 0.5)\n  return(map1)\n})\n\n\nknitr::include_graphics(\"animated_map.gif\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "title": "In-class Ex 8",
    "section": "",
    "text": "In this exercise, we will focus on two main objectives:\n\nRetrieving Latitude and Longitude Coordinates for Singapore Addresses: In the first part, we will walk through the steps to obtain geographical coordinates (latitude and longitude) for addresses in Singapore. This will involve using an API from Singapore Land Authority (SLA) to convert address data into spatial coordinates.\nGeospatial Predictive Modeling: In the second part, we will learn alternative R packages in building geospatial predictive models."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#r-packages-data-preparation",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#r-packages-data-preparation",
    "title": "In-class Ex 8",
    "section": "3.1 R packages & Data Preparation",
    "text": "3.1 R packages & Data Preparation\n\npacman::p_load(sf, spdep, GWmodel, SpatialML, tmap, rsample, Metrics, tidyverse, kableExtra)\n\n\nmdata &lt;- read_rds(\"data/mdata.rds\")\n\nWe split the dataset into training and testing sets, with the training set comprising 65% of the data. Please note that stratification was not applied during this train/test split. However, in geospatial predictive modeling, it is essential to incorporate stratification to ensure that samples from various locations are represented fairly and to avoid bias in the model.\n\nset.seed(1234)\nresale_split &lt;- initial_split(mdata,\n                              prop = 6.5/10)\ntrain_data &lt;- training(resale_split)\ntest_data &lt;- testing(resale_split)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multicollinearity-check-1",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multicollinearity-check-1",
    "title": "In-class Ex 8",
    "section": "3.2 Multicollinearity Check 1",
    "text": "3.2 Multicollinearity Check 1\nWe need to drop the geometry column before doing the correlation matrix.\n\nmdata_nogeo &lt;- mdata %&gt;%\n  st_drop_geometry()\nggstatsplot::ggcorrmat(mdata_nogeo[, 2:17])"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-a-non-spatial-mlr",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-a-non-spatial-mlr",
    "title": "In-class Ex 8",
    "section": "3.3 Building a Non-spatial MLR",
    "text": "3.3 Building a Non-spatial MLR\n\nprice_mlr &lt;- lm(resale_price ~ floor_area_sqm + \n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL +\n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nolsrr::ols_regress(price_mlr)\n\n                              Model Summary                                \n--------------------------------------------------------------------------\nR                           0.859       RMSE                    61604.120 \nR-Squared                   0.737       MSE                3800583670.022 \nAdj. R-Squared              0.737       Coef. Var                  14.193 \nPred R-Squared              0.737       AIC                    257320.224 \nMAE                     47485.556       SBC                    257436.117 \n--------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares           DF       Mean Square       F          Sig. \n--------------------------------------------------------------------------------\nRegression    1.100899e+14           14      7.863561e+12     2069.04    0.0000 \nResidual      3.922202e+13        10320    3800583670.022                       \nTotal         1.493119e+14        10334                                         \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                 \n------------------------------------------------------------------------------------------------------------------\n                   model          Beta    Std. Error    Std. Beta       t        Sig          lower         upper \n------------------------------------------------------------------------------------------------------------------\n             (Intercept)    107601.073     10601.261                  10.150    0.000     86820.546    128381.599 \n          floor_area_sqm      2780.698        90.579        0.164     30.699    0.000      2603.146      2958.251 \n            storey_order     14299.298       339.115        0.234     42.167    0.000     13634.567     14964.029 \n    remaining_lease_mths       344.490         4.592        0.442     75.027    0.000       335.489       353.490 \n                PROX_CBD    -16930.196       201.254       -0.586    -84.124    0.000    -17324.693    -16535.700 \n        PROX_ELDERLYCARE    -14441.025       994.867       -0.079    -14.516    0.000    -16391.157    -12490.893 \n             PROX_HAWKER    -19265.648      1273.597       -0.083    -15.127    0.000    -21762.144    -16769.151 \n                PROX_MRT    -32564.272      1744.232       -0.105    -18.670    0.000    -35983.305    -29145.240 \n               PROX_PARK     -5712.625      1483.885       -0.021     -3.850    0.000     -8621.328     -2803.922 \n               PROX_MALL    -14717.388      2007.818       -0.044     -7.330    0.000    -18653.100    -10781.675 \n        PROX_SUPERMARKET    -26881.938      4189.624       -0.035     -6.416    0.000    -35094.414    -18669.462 \nWITHIN_350M_KINDERGARTEN      8520.472       632.812        0.072     13.464    0.000      7280.038      9760.905 \n   WITHIN_350M_CHILDCARE     -4510.650       354.015       -0.074    -12.741    0.000     -5204.589     -3816.711 \n         WITHIN_350M_BUS       813.493       222.574        0.020      3.655    0.000       377.205      1249.781 \n       WITHIN_1KM_PRISCH     -8010.834       491.512       -0.102    -16.298    0.000     -8974.293     -7047.376 \n------------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#vif-multicollinearity-check-2",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#vif-multicollinearity-check-2",
    "title": "In-class Ex 8",
    "section": "3.4 VIF: Multicollinearity Check 2",
    "text": "3.4 VIF: Multicollinearity Check 2\n\nvif &lt;- performance::check_collinearity(price_mlr)\nkable(vif, caption = \"Variance Inflation Factor (VIF) Results\") %&gt;%\n  kable_styling(font_size = 18)\n\n\nVariance Inflation Factor (VIF) Results\n\n\nTerm\nVIF\nVIF_CI_low\nVIF_CI_high\nSE_factor\nTolerance\nTolerance_CI_low\nTolerance_CI_high\n\n\n\n\nfloor_area_sqm\n1.126308\n1.104360\n1.152871\n1.061276\n0.8878567\n0.8673997\n0.9055016\n\n\nstorey_order\n1.206586\n1.181102\n1.235657\n1.098447\n0.8287846\n0.8092862\n0.8466672\n\n\nremaining_lease_mths\n1.363528\n1.331762\n1.398335\n1.167702\n0.7333919\n0.7151363\n0.7508850\n\n\nPROX_CBD\n1.905054\n1.852553\n1.960788\n1.380237\n0.5249196\n0.5099991\n0.5397957\n\n\nPROX_ELDERLYCARE\n1.178400\n1.154108\n1.206522\n1.085541\n0.8486080\n0.8288284\n0.8664703\n\n\nPROX_HAWKER\n1.187828\n1.163132\n1.216262\n1.089875\n0.8418729\n0.8221915\n0.8597474\n\n\nPROX_MRT\n1.240457\n1.213579\n1.270718\n1.113758\n0.8061545\n0.7869568\n0.8240092\n\n\nPROX_PARK\n1.195883\n1.170847\n1.224588\n1.093564\n0.8362021\n0.8166011\n0.8540825\n\n\nPROX_MALL\n1.409846\n1.376277\n1.446409\n1.187369\n0.7092975\n0.6913675\n0.7265978\n\n\nPROX_SUPERMARKET\n1.154751\n1.131493\n1.182124\n1.074594\n0.8659873\n0.8459353\n0.8837880\n\n\nWITHIN_350M_KINDERGARTEN\n1.125809\n1.103886\n1.152360\n1.061042\n0.8882499\n0.8677846\n0.9058910\n\n\nWITHIN_350M_CHILDCARE\n1.335594\n1.304923\n1.369351\n1.155679\n0.7487304\n0.7302729\n0.7663289\n\n\nWITHIN_350M_BUS\n1.148544\n1.125564\n1.175729\n1.071701\n0.8706679\n0.8505364\n0.8884435\n\n\nWITHIN_1KM_PRISCH\n1.550879\n1.511876\n1.592853\n1.245343\n0.6447958\n0.6278044\n0.6614298\n\n\n\n\n\n\n\n\nplot(vif) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#predictive-modelling-with-mlr",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#predictive-modelling-with-mlr",
    "title": "In-class Ex 8",
    "section": "3.5 Predictive Modelling with MLR",
    "text": "3.5 Predictive Modelling with MLR\n\n1. Compute adaptive bandwidth (train set)2. Build adpative bandwith GWR model3. Compute adaptive bandwidth (test set)4. Predict values from test set\n\n\n\nbw_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\n\n\n\ngwr_adaptive &lt;- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n\n\n\n\ngwr_bw_test_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\n\n\n\ngwr_pred &lt;- gwr.predict(formula = resale_price ~\n                          floor_area_sqm + storey_order +\n                          remaining_lease_mths + PROX_CBD + \n                          PROX_ELDERLYCARE + PROX_HAWKER + \n                          PROX_MRT + PROX_PARK + PROX_MALL + \n                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                          WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n                          WITHIN_1KM_PRISCH, \n                        data = train_data, \n                        predictdata = test_data, \n                        bw=40, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#extracting-coordinates-data",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#extracting-coordinates-data",
    "title": "In-class Ex 8",
    "section": "4.1 Extracting coordinates data",
    "text": "4.1 Extracting coordinates data\nWe need to extract out the coordinates from the training and test data, in order to work with SpatialML\n\ncoords &lt;- st_coordinates(mdata)\ncoords_train &lt;- st_coordinates(train_data)\ncoords_test &lt;- st_coordinates(test_data)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#drop-geometry-field",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#drop-geometry-field",
    "title": "In-class Ex 8",
    "section": "4.2 Drop geometry field",
    "text": "4.2 Drop geometry field\n\ntrain_data_nogeom &lt;- train_data %&gt;% \n  st_drop_geometry()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-non-spatial-random-forest-model",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-non-spatial-random-forest-model",
    "title": "In-class Ex 8",
    "section": "4.3 Building non-spatial random forest model",
    "text": "4.3 Building non-spatial random forest model\nCalibrating a non-spatial RF model\n\nset.seed(1234)\nrf &lt;- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data_nogeom)\nrf"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-geographical-random-forest-model",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-geographical-random-forest-model",
    "title": "In-class Ex 8",
    "section": "4.4 Building geographical random forest model",
    "text": "4.4 Building geographical random forest model\n\nset.seed(1234)\ngwRF_adaptive &lt;- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data_nogeom, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom, num.trees = 500, mtry = 4, importance = \"impurity\",      num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       697593819 \nR squared (OOB):                  0.9517189 \n          floor_area_sqm             storey_order     remaining_lease_mths \n            7.413197e+12             1.538950e+13             2.890637e+13 \n                PROX_CBD         PROX_ELDERLYCARE              PROX_HAWKER \n            5.310066e+13             7.285092e+12             5.568548e+12 \n                PROX_MRT                PROX_PARK                PROX_MALL \n            7.369745e+12             4.894344e+12             4.223286e+12 \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n            2.793853e+12             1.018586e+12             1.710374e+12 \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n            1.589501e+12             6.794634e+12 \n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-236112.0  -13033.7     444.4     593.8   14831.5  358041.7 \n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-79279.83  -3510.70     54.56     50.98   3909.85  83074.08 \n                               Min          Max        Mean         StD\nfloor_area_sqm                   0 401562922035 18210850992 41426270899\nstorey_order             302736445 243728744368 16368419468 23620589843\nremaining_lease_mths     696564138 546463600727 34119912443 70328183398\nPROX_CBD                  55173040 382484896335 12154563393 29293290548\nPROX_ELDERLYCARE          45182031 344081962746 10597657883 24546405941\nPROX_HAWKER               43516026 342597797419 10551807020 23408387903\nPROX_MRT                  54234551 299075025906  9873129985 21055852211\nPROX_PARK                 49919822 322633843469  9353956995 19517077658\nPROX_MALL                 43296133 433263607933 11247374493 27537334970\nPROX_SUPERMARKET          52665827 417310417234 10802122271 26572460731\nWITHIN_350M_KINDERGARTEN         0 186468064682  2848177740 12928886968\nWITHIN_350M_CHILDCARE            0 255236737234  5526292324 18109971102\nWITHIN_350M_BUS                  0 193828795378  4747552546 11886064288\nWITHIN_1KM_PRISCH                0 178360608427  1778262602  7163381668"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#predicting-values-from-test-data",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#predicting-values-from-test-data",
    "title": "In-class Ex 8",
    "section": "4.5 Predicting values from test data",
    "text": "4.5 Predicting values from test data\nFirst, we need to prepare the test data.\n\ntest_data_nogeom &lt;- cbind(test_data, coords_test) %&gt;%\n  st_drop_geometry()\n\nNow, we can predict with the test data.\n\ngwRF_pred &lt;- predict.grf(gwRF_adaptive, \n                           test_data_nogeom, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#convert-predicting-output-into-dataframe",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#convert-predicting-output-into-dataframe",
    "title": "In-class Ex 8",
    "section": "4.6 Convert predicting output into dataframe",
    "text": "4.6 Convert predicting output into dataframe\n\nGRF_pred_df &lt;- as.data.frame(gwRF_pred)\ntest_data_pred &lt;- cbind(test_data, GRF_pred_df)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#evaluating-using-root-mean-square-error",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#evaluating-using-root-mean-square-error",
    "title": "In-class Ex 8",
    "section": "4.7 Evaluating using root mean square error",
    "text": "4.7 Evaluating using root mean square error\n\nrmse(test_data_pred$resale_price, \n     test_data_pred$gwRF_pred)\n\n[1] 27302.9"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#visualising-predicted-valued",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#visualising-predicted-valued",
    "title": "In-class Ex 8",
    "section": "4.8 Visualising predicted valued",
    "text": "4.8 Visualising predicted valued\nThe chart displays the predicted values from the Geographically Weighted Random Forest (GWRF) model against the actual values. It is beneficial to visualize the over- and under-predictions of your model on the test data for better insight into its performance.\n\nggplot(data = test_data_pred,\n       aes(x = gwRF_pred,\n           y = resale_price)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html",
    "title": "Hands-on Ex 10",
    "section": "",
    "text": "The hands-on exercise on Processing & Visualising Flow Data is in Hands-on Ex 9A.\nThe hands-on exercise on Calibrating Spatial Interaction Models is in Hands-on Ex 9B.\n\n1. Overview\nGeographical accessibility refers to how easily people can reach activities like work, shopping, or healthcare from a given location. It involves measuring the ease or difficulty of accessing facilities based on factors such as distance, time, and travel barriers. At its core, modelling accessibility is about quantifying movement opportunities, focusing on calculating the distance, time, or cost required to travel between locations. Geographical accessibility models can help answer questions such as:\n\nWhich regions lack access to essential facilities?\nWhich areas will be impacted by public policies, such as school closures?\n\nIn this exercise, we will model accessibility using the following three methods:\n\nHansen’s Potential Model: This model estimates accessibility by summing the weighted opportunities available at various locations, with weights decreasing as the travel distance or time increases. It reflects the ease with which individuals can reach services based on proximity.\nKernel Density Two-step Floating Catchment Area (KD2SFCA): KD2SFCA refines traditional floating catchment models by incorporating a kernel density function, which accounts for the gradual decay of accessibility over distance. It evaluates access by considering both service supply and population demand across multiple zones.\nSpatial Accessibility Measure (SAM): SAM quantifies the relative ease or difficulty of accessing facilities, integrating both distance and capacity constraints. It provides a spatially-aware measure of accessibility, capturing variations in service availability across regions.\n\nThe following R packages are used, with the SpatialAcc package playing a key role in modelling geographical accessibility.\n\npacman::p_load(tmap, SpatialAcc, sf, ggstatsplot, reshape2, tidyverse)\n\n\n\n2. Importing & Preparing Data\nWe will import and work with four datasets:\n\nURA’s 2014 Master Plan Subzone Boundaries\nHexagons Dataset: 250m radius hexagons generated using st_make_grid() from the sf package\nEldercare Service Locations from data.gov.sg\nDistance Matrix: CSV file with distances between hexagons and eldercare locations\n\n\n1. Import master plan subzone boundaries2. Import hexagons3. Import eldercare service locations4. Projection transformation5. Geospatial data preparation6. Import distance matrix7. Aspatial data preparation\n\n\nNote that the mpsz sf dataframe does not have any EPSG information, and we will need to update its EPSG code later on.\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_NO_SEA_PL\")\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Hands-on_Ex/Hands-on_Ex10/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\nhexagons &lt;- st_read(dsn = \"data/geospatial\", layer = \"hexagons\") \n\nReading layer `hexagons' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Hands-on_Ex/Hands-on_Ex10/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\n\neldercare &lt;- st_read(dsn = \"data/geospatial\", layer = \"ELDERCARE\") \n\nReading layer `ELDERCARE' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/Hands-on_Ex/Hands-on_Ex10/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\nSince the mpsz sf dataframe does not have any EPSG information, we use st_transform to update its EPSG code.\n\nmpsz &lt;- st_transform(mpsz, 3414)\neldercare &lt;- st_transform(eldercare, 3414)\nhexagons &lt;- st_transform(hexagons, 3414)\n\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\nWe select the relevant fields from the eldercare and hexagons datasets for the subsequent analysis. Using the mutate() function from the dplyr package, we add two new fields:\n\nDemand in the hexagons dataset\nCapacity in the eldercare dataset\n\nBoth fields are initially assigned a constant value of 100. However, in practice, these values should represent the actual demand of each hexagon and the true capacity of each eldercare center.\n\nhexagons &lt;- hexagons %&gt;%\n  select(fid) %&gt;%\n  mutate(demand = 100)\n\neldercare &lt;- eldercare %&gt;%\n  select(fid, ADDRESSPOS) %&gt;%\n  mutate(capacity = 100)\n\n\n\nThe original dataset is in long format, and we need to convert it to wide format, with rows representing the origins and columns representing the destinations.\n\nODMatrix &lt;- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\n\nRows: 375000 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (6): origin_id, destination_id, entry_cost, network_cost, exit_cost, tot...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(ODMatrix)\n\nRows: 375,000\nColumns: 6\n$ origin_id      &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ destination_id &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18,…\n$ entry_cost     &lt;dbl&gt; 667.9336, 667.9336, 667.9336, 667.9336, 667.9336, 667.9…\n$ network_cost   &lt;dbl&gt; 19846.87, 45026.76, 17644.17, 36009.56, 31068.09, 31194…\n$ exit_cost      &lt;dbl&gt; 47.64874, 31.87162, 173.47882, 92.19676, 64.62840, 117.…\n$ total_cost     &lt;dbl&gt; 20562.45, 45726.57, 18485.58, 36769.69, 31800.65, 31979…\n\n\n\n\nTo convert the dataset from long to wide format, we use the spread() function. Additionally, we convert the distance metric from meters to kilometers and transform the dataset into a matrix.\n\ndistmat &lt;- ODMatrix %&gt;%\n  select(origin_id, destination_id, total_cost) %&gt;%\n  spread(destination_id, total_cost)%&gt;%\n  select(c(-c('origin_id')))\nhead(distmat)\n\n# A tibble: 6 × 120\n     `1`    `2`    `3`    `4`    `5`    `6`    `8`    `9`   `10`   `11`   `12`\n   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 20562. 45727. 18486. 36770. 31801. 31980. 33198. 22963. 45943. 35593. 36362.\n2 23069. 48233. 20992. 39276. 34307. 34486. 35704. 25469. 48450. 38100. 38869.\n3 23590. 48754. 21513. 39797. 34828. 35007. 36225. 25991. 48971. 38621. 39390.\n4 24069. 49233. 21992. 40276. 35307. 35486. 36705. 26470. 49450. 39100. 39869.\n5 24241. 49405. 22164. 40448. 35479. 35658. 36877. 26642. 49622. 39272. 40041.\n6 24605. 49769. 22528. 40812. 35843. 36022. 37241. 27006. 49986. 39636. 40405.\n# ℹ 109 more variables: `13` &lt;dbl&gt;, `14` &lt;dbl&gt;, `15` &lt;dbl&gt;, `16` &lt;dbl&gt;,\n#   `18` &lt;dbl&gt;, `19` &lt;dbl&gt;, `20` &lt;dbl&gt;, `21` &lt;dbl&gt;, `22` &lt;dbl&gt;, `23` &lt;dbl&gt;,\n#   `24` &lt;dbl&gt;, `25` &lt;dbl&gt;, `26` &lt;dbl&gt;, `27` &lt;dbl&gt;, `28` &lt;dbl&gt;, `29` &lt;dbl&gt;,\n#   `30` &lt;dbl&gt;, `31` &lt;dbl&gt;, `32` &lt;dbl&gt;, `33` &lt;dbl&gt;, `34` &lt;dbl&gt;, `35` &lt;dbl&gt;,\n#   `36` &lt;dbl&gt;, `37` &lt;dbl&gt;, `38` &lt;dbl&gt;, `39` &lt;dbl&gt;, `40` &lt;dbl&gt;, `41` &lt;dbl&gt;,\n#   `42` &lt;dbl&gt;, `43` &lt;dbl&gt;, `44` &lt;dbl&gt;, `45` &lt;dbl&gt;, `46` &lt;dbl&gt;, `47` &lt;dbl&gt;,\n#   `48` &lt;dbl&gt;, `49` &lt;dbl&gt;, `50` &lt;dbl&gt;, `52` &lt;dbl&gt;, `53` &lt;dbl&gt;, `55` &lt;dbl&gt;, …\n\n\n\ndistmat_km &lt;- as.matrix(distmat/1000)\n\n\n\n\n\n\n3. Modelling Accessibility using Hansen’s Method\n\n3.1 Compute Hansen’s accessibility3.2 Visualise Hansen’s accessibility3.3 Statistical visualisation\n\n\nHansen’s accessibility is calculated using the ac() function from the SpatialAcc package. The result is then converted to a dataframe, with the default column renamed to accHansen and converted into a tibble dataframe.\n\nacc_Hansen &lt;- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\ncolnames(acc_Hansen) &lt;- \"accHansen\"\n\nacc_Hansen &lt;- as_tibble(acc_Hansen)\nglimpse(acc_Hansen)\n\nRows: 3,125\nColumns: 1\n$ accHansen &lt;dbl&gt; 1.648313e-14, 1.096143e-16, 3.865857e-17, 1.482856e-17, 1.05…\n\n\nacc_Hansen dataset is then joined to the hexagons sf dataframe using bind_cols(). hexagon_Hansen is now a sf dataframe.\n\nhexagon_Hansen &lt;- bind_cols(hexagons, acc_Hansen)\nglimpse(hexagon_Hansen)\n\nRows: 3,125\nColumns: 4\n$ fid       &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ demand    &lt;dbl&gt; 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, …\n$ accHansen &lt;dbl&gt; 1.648313e-14, 1.096143e-16, 3.865857e-17, 1.482856e-17, 1.05…\n$ geometry  &lt;POLYGON [m]&gt; POLYGON ((2667.538 27506.33..., POLYGON ((2667.538 2…\n\n\n\n\nThe code chunk below visualizes Hansen’s accessibility to eldercare facilities in Singapore. Before plotting, extract the extent of the hexagons sf dataframe using the st_bbox() function from the sf package.\n\n\nCode\nmapex &lt;- st_bbox(hexagons)\n\ntmap_mode(\"plot\")\n\n\ntmap mode set to plotting\n\n\nCode\ntm_shape(hexagon_Hansen,\n         bbox = mapex) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\n\n\nNext, we will compare the distribution of Hansen’s accessibility values across URA Planning Regions. First, we add the planning region field to the hexagon_Hansen sf dataframe using the code chunk below. This will allow us to visualise the distribution of Hansen’s accessibility across the Planning Regions.\n\nhexagon_Hansen &lt;- st_join(hexagon_Hansen, mpsz, \n                          join = st_intersects)\n\n\nggplot(data = hexagon_Hansen, \n       aes(y = log(accHansen), x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\", \n             fun = \"mean\", \n             colour = \"red\", \n             size = 2)\n\n\n\n\n\n\n\n\n\n4. Modelling Accessibility using KD2SFCA Method\n\n4.1 Compute KD2SFCA accessibility4.2 Visualise KD2SFCA accessibility4.3 Statistical visualisation\n\n\nThe code for computing KD2SFCA accessibility is similar to that of Hansen’s accessibility, with the key difference being the use of “KD2SFCA” in the family argument.\n\nacc_KD2SFCA &lt;- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"KD2SFCA\"))\n\ncolnames(acc_KD2SFCA) &lt;- \"accKD2SFCA\"\nacc_KD2SFCA &lt;- as_tibble(acc_KD2SFCA)\nhexagon_KD2SFCA &lt;- bind_cols(hexagons, acc_KD2SFCA)\n\n\n\nThe code chunk below visualizes KD2SFCA accessibility to eldercare facilities in Singapore. mapex which contains the extent of the hexagons sf dataframe is used in the bbox argument.\n\n\nCode\ntmap_mode(\"plot\")\n\n\ntmap mode set to plotting\n\n\nCode\ntm_shape(hexagon_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\n\n\nHere we compare the distribution of KD2CFA accessibility values across URA Planning Regions. We first add the planning region field to the hexagon_KD2SFCA sf dataframe, before visualising the distribution of KD2CFA accessibility across the Planning Regions.\n\nhexagon_KD2SFCA &lt;- st_join(hexagon_KD2SFCA, mpsz, \n                          join = st_intersects)\n\n\nggplot(data = hexagon_KD2SFCA, \n       aes(y = accKD2SFCA, x = REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\", \n             fun = \"mean\", \n             colour = \"red\", \n             size=2)\n\n\n\n\n\n\n\n\n\n5. Modelling Accessibility using Spatial Accessibility Measure (SAM) Method\n\n5.1 Compute SAM accessibility5.2 Visualise SAM accessibility5.3 Statistical visualisation\n\n\nTo compute SAM accessibility, we use “SAM” in the family argument.\n\nacc_SAM &lt;- data.frame(ac(hexagons$demand,\n                         eldercare$capacity,\n                         distmat_km, \n                         d0 = 50,\n                         power = 2, \n                         family = \"SAM\"))\n\ncolnames(acc_SAM) &lt;- \"accSAM\"\nacc_SAM &lt;- as_tibble(acc_SAM)\nhexagon_SAM &lt;- bind_cols(hexagons, acc_SAM)\n\n\n\nThe plot below visualizes SAM accessibility to eldercare facilities in Singapore. Similarly, mapex which contains the extent of the hexagons sf dataframe is used in the bbox argument.\n\n\nCode\ntmap_mode(\"plot\")\n\n\ntmap mode set to plotting\n\n\nCode\ntm_shape(hexagon_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\n\n\nWe compare the distribution of SAM accessibility values across URA Planning Regions by first adding the planning region field to the hexagon_SAM sf dataframe. Once this field is added, we visualise the distribution of SAM accessibility across the Planning Regions.\n\nhexagon_SAM &lt;- st_join(hexagon_SAM, mpsz, \n                       join = st_intersects)\n\n\nggplot(data = hexagon_SAM, \n       aes(y = log(accSAM), x = REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\", \n             fun = \"mean\", \n             colour = \"red\", \n             size = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/hexagons.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/hexagons.html",
    "title": "",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n                 0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/ELDERCARE.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/ELDERCARE.html",
    "title": "",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;  ELDERCARE  ENG dataset\n\nELDERCARE\n\n                 0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html",
    "title": "Hands-on Ex 9A",
    "section": "",
    "text": "The hands-on exercise on Modelling Geographical Accessibility is in Hands-on Ex 10"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html",
    "title": "Hands-on Ex 9B",
    "section": "",
    "text": "The hands-on exercise on Modelling Geographical Accessibility is in Hands-on Ex 10"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html",
    "title": "In-class Ex 9",
    "section": "",
    "text": "In this exercise, we will explore essential techniques in geospatial analytics, including:\n\nCounting the number of points within specified distances from other point features\nApplying jittering to resolve overlapping points\nModeling geographical accessibility\n\n\npacman::p_load(tidyverse, sf, tmap)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#import-geospatial-data",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#import-geospatial-data",
    "title": "In-class Ex 9",
    "section": "4.1 Import geospatial data",
    "text": "4.1 Import geospatial data\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_NO_SEA_PL\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex09/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nhexagons &lt;- st_read(dsn = \"data/geospatial\", layer = \"hexagons\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `hexagons' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex09/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\neldercare &lt;- st_read(dsn = \"data/geospatial\", layer = \"ELDERCARE\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `ELDERCARE' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex09/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#import-aspatial-data",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#import-aspatial-data",
    "title": "In-class Ex 9",
    "section": "4.2 Import aspatial data",
    "text": "4.2 Import aspatial data\n\nODMatrix &lt;- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\nglimpse(ODMatrix)\n\nRows: 375,000\nColumns: 6\n$ origin_id      &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ destination_id &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18,…\n$ entry_cost     &lt;dbl&gt; 667.9336, 667.9336, 667.9336, 667.9336, 667.9336, 667.9…\n$ network_cost   &lt;dbl&gt; 19846.87, 45026.76, 17644.17, 36009.56, 31068.09, 31194…\n$ exit_cost      &lt;dbl&gt; 47.64874, 31.87162, 173.47882, 92.19676, 64.62840, 117.…\n$ total_cost     &lt;dbl&gt; 20562.45, 45726.57, 18485.58, 36769.69, 31800.65, 31979…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#data-cleaning-and-updating-attributes",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#data-cleaning-and-updating-attributes",
    "title": "In-class Ex 9",
    "section": "4.3 Data cleaning and updating attributes",
    "text": "4.3 Data cleaning and updating attributes\n\nSupplyDemandOD Matrix\n\n\nWe select the relevant fields from the eldercare dataset and assign a constant supply value of 100 to each location for simplified analysis. In practice, these supply values should reflect actual or closely estimated supply levels for each location to ensure accuracy.\n\neldercare &lt;- eldercare %&gt;%\n  select(fid, ADDRESSPOS) %&gt;%\n  mutate(capacity = 100)\n\n\n\nWe select the relevant fields from the hexagons dataset and assign a constant demand value of 100 to each hexagon for simplified analysis. In practice, these demand values should closely approximate the actual demand within each hexagon. For instance, estimating demand may involve web scraping to count the number of buildings and the number of floors of each building within each hexagon.\n\nhexagons &lt;- hexagons %&gt;%\n  select(fid) %&gt;%\n  mutate(demand = 100)\n\n\n\nTo convert the dataset from long to wide format, we use the spread() function. Additionally, we convert the distance metric from meters to kilometers and transform the dataset into a matrix.\n\ndistmat &lt;- ODMatrix %&gt;%\n  select(origin_id, destination_id, total_cost) %&gt;%\n  spread(destination_id, total_cost)%&gt;%\n  select(c(-c('origin_id')))\ndistmat_km &lt;- as.matrix(distmat/1000)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/data/geospatial/hexagons.html",
    "href": "In-class_Ex/In-class_Ex09/data/geospatial/hexagons.html",
    "title": "",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n                 0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/data/geospatial/ELDERCARE.html",
    "href": "In-class_Ex/In-class_Ex09/data/geospatial/ELDERCARE.html",
    "title": "",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;  ELDERCARE  ENG dataset\n\nELDERCARE\n\n                 0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#modelling-accessibility-using-hansens-method",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#modelling-accessibility-using-hansens-method",
    "title": "In-class Ex 9",
    "section": "4.4. Modelling accessibility using Hansen’s method",
    "text": "4.4. Modelling accessibility using Hansen’s method\n\n4.4.1 Compute Hansen’s accessibility\nHansen’s accessibility is calculated using the ac() function from the SpatialAcc package. The result is then converted to a dataframe, with the default column renamed to accHansen and converted into a tibble dataframe.\nacc_Hansen dataset is then joined to the hexagons sf dataframe using bind_cols(). hexagon_Hansen is now a sf dataframe.\nNote: Setting d0 to 50 establishes the distance threshold for demand cutoff, where 50 represents 50 km, approximately the width of the Singapore map.\n\nacc_Hansen &lt;- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\ncolnames(acc_Hansen) &lt;- \"accHansen\"\n\nacc_Hansen &lt;- as_tibble(acc_Hansen)\nhexagon_Hansen &lt;- bind_cols(hexagons, acc_Hansen)\n\n\n\n4.4.2 Visualising acessibility\nTo maintain a consistent map extent, we extract the boundaries of the hexagons sf dataframe using the st_bbox() function. By setting a fixed map extent during plotting, the map display remains unchanged — even if there are areas without points, tmap will still show the entire map.\n\n\nCode\nmapex &lt;- st_bbox(hexagons)\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Hansen,\n         bbox = mapex) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\n\n\n4.4.3 Statistical visualisation\nWe compare the distribution of Hansen’s accessibility values across URA Planning Regions by first adding the planning region field to the hexagon_Hansen sf dataframe. Once this field is added, we visualise the distribution of Hansen accessibility across the Planning Regions.\n\nhexagon_Hansen &lt;- st_join(hexagon_Hansen, mpsz, \n                          join = st_intersects)\n\nWe can use the ggbetweenstats() function from the ggstatsplot package for statistical visualisation. This function provides a distribution plot of accessibility values across regions, while also performing ANOVA and pairwise comparisons to assess differences between groups.\nThese are the four statistical testing options available in the ggbetweenstats() function:\n\nParametric t-testNon-parametric Wilcoxon-Mann-Whitney testYuen’s test for trimmed meansBayesian independent samples t-test\n\n\n\nggbetweenstats(\n  data = hexagon_Hansen, \n  x = REGION_N,\n  y = accHansen,\n  type = \"p\")\n\n\n\n\n\n\n\nggbetweenstats(\n  data = hexagon_Hansen, \n  x = REGION_N,\n  y = accHansen,\n  type = \"np\")\n\n\n\n\n\n\n\nggbetweenstats(\n  data = hexagon_Hansen, \n  x = REGION_N,\n  y = accHansen,\n  type = \"robust\")\n\n\n\n\n\n\n\nggbetweenstats(\n  data = hexagon_Hansen, \n  x = REGION_N,\n  y = accHansen,\n  type = \"bayes\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#removing-intra-zonal-flows",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#removing-intra-zonal-flows",
    "title": "Hands-on Ex 9A",
    "section": "3.1 Removing intra-zonal flows",
    "text": "3.1 Removing intra-zonal flows\nThis study excludes intra-zonal flows, so they are removed from the analysis.\n\nod_data_fij &lt;- od_data[od_data$ORIGIN_SZ != od_data$DESTIN_SZ,]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#create-desire-lines",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#create-desire-lines",
    "title": "Hands-on Ex 9A",
    "section": "3.2 Create desire lines",
    "text": "3.2 Create desire lines\nWe use the od2line() function from the stplanr package to create desire lines.\n\nflowLine &lt;- od2line(flow = od_data_fij, \n                    zones = mpsz,\n                    zone_code = \"SUBZONE_C\")\n\nCreating centroids representing desire line start and end points."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#visualise-desire-lines",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#visualise-desire-lines",
    "title": "Hands-on Ex 9A",
    "section": "3.3 Visualise desire lines",
    "text": "3.3 Visualise desire lines\n\nDesire lines on weekday morning peak hoursFiltering high-intensity desire lines\n\n\nThe map below shows inter-zonal bus commuter flows on weekdays between 6:00 and 9:00 am.\n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %&gt;%  \ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.5)\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\n\n\nWhen inter-zonal bus commuter flows are complex or highly skewed, it can be effective to focus on selected flows, such as those with values greater than or equal to 5,000, as shown below.\n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.5)\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#remove-intra-zonal-flows",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#remove-intra-zonal-flows",
    "title": "Hands-on Ex 9A",
    "section": "3.1 Remove intra-zonal flows",
    "text": "3.1 Remove intra-zonal flows\nThis study excludes intra-zonal flows, so they are removed from the analysis.\n\nod_data_fij &lt;- od_data[od_data$ORIGIN_SZ != od_data$DESTIN_SZ,]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#create-inter-zonal-desire-lines",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09A.html#create-inter-zonal-desire-lines",
    "title": "Hands-on Ex 9A",
    "section": "3.2 Create inter-zonal desire lines",
    "text": "3.2 Create inter-zonal desire lines\nWe use the od2line() function from the stplanr package to create inter-zonal desire lines.\n\nflowLine &lt;- od2line(flow = od_data_fij, \n                    zones = mpsz,\n                    zone_code = \"SUBZONE_C\")\n\nCreating centroids representing desire line start and end points."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/data/geospatial/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#prepare-distance-matrix-between-planning-subzones",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#prepare-distance-matrix-between-planning-subzones",
    "title": "Hands-on Ex 9B",
    "section": "2.1 Prepare distance matrix between planning subzones",
    "text": "2.1 Prepare distance matrix between planning subzones\nThe following steps are taken to compute the distance matrix between planning subzones.\n\n1. Import MPSZ2. Convert to sp dataframe3. Compute distance matrix4. Label row and column headers of distance matrix5. Convert distance matrix to long table format6. Update intra-zonal distance\n\n\n\nmpsz &lt;- read_rds(\"data/rds/mpsz.rds\")\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\n\nBefore computing the distance matrix (i.e., distances between pairs of locations), we convert the sf dataframe to an sp dataframe. Although the distance matrix can be computed directly from an sf dataframe, the sp method is generally more time-efficient.\n\nmpsz_sp &lt;- as(mpsz, \"Spatial\")\nmpsz_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 332 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 6\nnames       : SUBZONE_N, SUBZONE_C, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C \nmin values  : ADMIRALTY,    AMSZ01, ANG MO KIO,         AM, CENTRAL REGION,       CR \nmax values  :    YUNNAN,    YSSZ09,     YISHUN,         YS,    WEST REGION,       WR \n\n\n\n\nWe use the spDists() function from the sp package to compute the Euclidean distance between the centroids of the planning subzones.\n\ndist &lt;- spDists(mpsz_sp, \n                longlat = FALSE)\nhead(dist, n=c(10, 10))\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]      [,7]\n [1,]     0.000  3926.0025  3939.108 20252.964  2989.9839  1431.330 19211.836\n [2,]  3926.003     0.0000   305.737 16513.865   951.8314  5254.066 16242.523\n [3,]  3939.108   305.7370     0.000 16412.062  1045.9088  5299.849 16026.146\n [4,] 20252.964 16513.8648 16412.062     0.000 17450.3044 21665.795  7229.017\n [5,]  2989.984   951.8314  1045.909 17450.304     0.0000  4303.232 17020.916\n [6,]  1431.330  5254.0664  5299.849 21665.795  4303.2323     0.000 20617.082\n [7,] 19211.836 16242.5230 16026.146  7229.017 17020.9161 20617.082     0.000\n [8,] 14960.942 12749.4101 12477.871 11284.279 13336.0421 16281.453  5606.082\n [9,]  7515.256  7934.8082  7649.776 18427.503  7801.6163  8403.896 14810.930\n[10,]  6391.342  4975.0021  4669.295 15469.566  5226.8731  7707.091 13111.391\n           [,8]      [,9]     [,10]\n [1,] 14960.942  7515.256  6391.342\n [2,] 12749.410  7934.808  4975.002\n [3,] 12477.871  7649.776  4669.295\n [4,] 11284.279 18427.503 15469.566\n [5,] 13336.042  7801.616  5226.873\n [6,] 16281.453  8403.896  7707.091\n [7,]  5606.082 14810.930 13111.391\n [8,]     0.000  9472.024  8575.490\n [9,]  9472.024     0.000  3780.800\n[10,]  8575.490  3780.800     0.000\n\n\n\n\nSince the row and column headers of the distance matrix are unlabeled, we perform the following steps to add labels for the planning subzone codes:\n\nCreate a list of planning subzone codes sorted to match the order of the distance matrix.\nAttach SUBZONE_C labels to the rows and columns of the distance matrix for alignment.\n\n\nsz_names &lt;- mpsz$SUBZONE_C\n\ncolnames(dist) &lt;- paste0(sz_names)\nrownames(dist) &lt;- paste0(sz_names)\n\nhead(dist, n=c(5, 5))\n\n          MESZ01     RVSZ05    SRSZ01   WISZ01     MUSZ02\nMESZ01     0.000  3926.0025  3939.108 20252.96  2989.9839\nRVSZ05  3926.003     0.0000   305.737 16513.86   951.8314\nSRSZ01  3939.108   305.7370     0.000 16412.06  1045.9088\nWISZ01 20252.964 16513.8648 16412.062     0.00 17450.3044\nMUSZ02  2989.984   951.8314  1045.909 17450.30     0.0000\n\n\n\n\nWe use the melt() function to convert the distance matrix into a long-table format. Note that intra-zonal distances are 0.\n\ndistPair &lt;- melt(dist) %&gt;%\n  rename(dist = value)\nhead(distPair, 10)\n\n     Var1   Var2      dist\n1  MESZ01 MESZ01     0.000\n2  RVSZ05 MESZ01  3926.003\n3  SRSZ01 MESZ01  3939.108\n4  WISZ01 MESZ01 20252.964\n5  MUSZ02 MESZ01  2989.984\n6  MPSZ05 MESZ01  1431.330\n7  WISZ03 MESZ01 19211.836\n8  WISZ02 MESZ01 14960.942\n9  SISZ02 MESZ01  7515.256\n10 SISZ01 MESZ01  6391.342\n\n\n\n\nWe assign a small non-zero constant to replace intra-zonal distances of 0.\nFirst, we find out the minimum inter-zonal distance using summary().\n\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n      Var1             Var2             dist        \n MESZ01 :   331   MESZ01 :   331   Min.   :  173.8  \n RVSZ05 :   331   RVSZ05 :   331   1st Qu.: 7149.5  \n SRSZ01 :   331   SRSZ01 :   331   Median :11890.0  \n WISZ01 :   331   WISZ01 :   331   Mean   :12229.4  \n MUSZ02 :   331   MUSZ02 :   331   3rd Qu.:16401.7  \n MPSZ05 :   331   MPSZ05 :   331   Max.   :49894.4  \n (Other):107906   (Other):107906                    \n\n\nWe assign a constant of 50m to replace intra-zonal distances.\n\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        50, distPair$dist)\n\ndistPair %&gt;%\n  summary()\n\n      Var1             Var2             dist      \n MESZ01 :   332   MESZ01 :   332   Min.   :   50  \n RVSZ05 :   332   RVSZ05 :   332   1st Qu.: 7097  \n SRSZ01 :   332   SRSZ01 :   332   Median :11864  \n WISZ01 :   332   WISZ01 :   332   Mean   :12193  \n MUSZ02 :   332   MUSZ02 :   332   3rd Qu.:16388  \n MPSZ05 :   332   MPSZ05 :   332   Max.   :49894  \n (Other):108232   (Other):108232                  \n\n\nWe rename the variables for clarity.\n\ndistPair &lt;- distPair %&gt;%\n  rename(orig = Var1,\n         dest = Var2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#prepare-flow-data",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#prepare-flow-data",
    "title": "Hands-on Ex 9B",
    "section": "2.2 Prepare flow data",
    "text": "2.2 Prepare flow data\n\n1. Import OD matrix of bus commuter flow2. Compute total bus commuter trips3. Add new fields for intra-zonal flows4. Combine flow data with distance\n\n\nThe OD matrix of bus commuter flow was computed in Ex 9A. We will import the OD matrix for this exercise.\n\nod_data_fii &lt;- read_rds(\"data/rds/od_data_fii.rds\")\n\n\n\nWe compute the total commuter trips between and within planning subzones as follows:\n\nflow_data &lt;- od_data_fii %&gt;%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;% \n  summarize(TRIPS = sum(MORNING_PEAK)) \n\n`summarise()` has grouped output by 'ORIGIN_SZ'. You can override using the\n`.groups` argument.\n\nhead(flow_data, 10)\n\n# A tibble: 10 × 3\n# Groups:   ORIGIN_SZ [1]\n   ORIGIN_SZ DESTIN_SZ TRIPS\n   &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt;\n 1 AMSZ01    AMSZ01     1998\n 2 AMSZ01    AMSZ02     8289\n 3 AMSZ01    AMSZ03     8971\n 4 AMSZ01    AMSZ04     2252\n 5 AMSZ01    AMSZ05     6136\n 6 AMSZ01    AMSZ06     2148\n 7 AMSZ01    AMSZ07     1620\n 8 AMSZ01    AMSZ08     1925\n 9 AMSZ01    AMSZ09     1773\n10 AMSZ01    AMSZ10       63\n\n\n\n\nTwo new fields specific to intra-zonal flows are added to the dataset.\n\nflow_data$FlowNoIntra &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$TRIPS)\nflow_data$offset &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\nglimpse(flow_data)\n\nRows: 14,734\nColumns: 5\nGroups: ORIGIN_SZ [279]\n$ ORIGIN_SZ   &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\"…\n$ DESTIN_SZ   &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMSZ06\"…\n$ TRIPS       &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63, …\n$ FlowNoIntra &lt;dbl&gt; 0, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63, 542…\n$ offset      &lt;dbl&gt; 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e…\n\n\n\n\nBefore joining the flow data with the distance dataset, we need to convert the origin and destination subzones to factor data types.\n\nflow_data$ORIGIN_SZ &lt;- as.factor(flow_data$ORIGIN_SZ)\nflow_data$DESTIN_SZ &lt;- as.factor(flow_data$DESTIN_SZ)\n\nflow_data1 &lt;- flow_data %&gt;%\n  left_join(distPair,\n            by = c(\"ORIGIN_SZ\" = \"orig\", \"DESTIN_SZ\" = \"dest\"))\nglimpse(flow_data1)\n\nRows: 14,734\nColumns: 6\nGroups: ORIGIN_SZ [279]\n$ ORIGIN_SZ   &lt;fct&gt; AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AM…\n$ DESTIN_SZ   &lt;fct&gt; AMSZ01, AMSZ02, AMSZ03, AMSZ04, AMSZ05, AMSZ06, AMSZ07, AM…\n$ TRIPS       &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63, …\n$ FlowNoIntra &lt;dbl&gt; 0, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63, 542…\n$ offset      &lt;dbl&gt; 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e…\n$ dist        &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805.297…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#prepare-origin-destination-attributes",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#prepare-origin-destination-attributes",
    "title": "Hands-on Ex 9B",
    "section": "2.3 Prepare origin & destination attributes",
    "text": "2.3 Prepare origin & destination attributes\n\n1. Import sub-zone population data2. Append subzone code3. Prepare origin attribute4. Prepare destination attribute\n\n\n\npop &lt;- read_csv(\"data/aspatial/pop.csv\")\n\nRows: 332 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): PA, SZ\ndbl (3): AGE7_12, AGE13_24, AGE25_64\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(pop)\n\nRows: 332\nColumns: 5\n$ PA       &lt;chr&gt; \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG …\n$ SZ       &lt;chr&gt; \"ANG MO KIO TOWN CENTRE\", \"CHENG SAN\", \"CHONG BOON\", \"KEBUN B…\n$ AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 1050, 420, 810, 390, 980, 0, 260, 0, 1190, 6…\n$ AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2390, 1120, 1920, 1150, 2000, 0, 650, 0, 326…\n$ AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 12460, 3620, 9650, 4350, 11320, 0, 2500, …\n\n\n\n\nWe left join pop dataset with mpsz dataset to retrieve the subzone codes.\n\npop &lt;- pop %&gt;%\n  left_join(mpsz,\n            by = c(\"PA\" = \"PLN_AREA_N\",\n                   \"SZ\" = \"SUBZONE_N\")) %&gt;%\n  select(1:6) %&gt;%\n  rename(SZ_NAME = SZ,\n         SZ = SUBZONE_C)\nglimpse(pop)\n\nRows: 332\nColumns: 6\n$ PA       &lt;chr&gt; \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG …\n$ SZ_NAME  &lt;chr&gt; \"ANG MO KIO TOWN CENTRE\", \"CHENG SAN\", \"CHONG BOON\", \"KEBUN B…\n$ AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 1050, 420, 810, 390, 980, 0, 260, 0, 1190, 6…\n$ AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2390, 1120, 1920, 1150, 2000, 0, 650, 0, 326…\n$ AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 12460, 3620, 9650, 4350, 11320, 0, 2500, …\n$ SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ06\", \"AMSZ07\", \"AMSZ05\", \"…\n\n\n\n\nWe add origin attributes to the flow data.\n\nflow_data1 &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            by = c(ORIGIN_SZ = \"SZ\")) %&gt;%\n  rename(ORIGIN_AGE7_12 = AGE7_12,\n         ORIGIN_AGE13_24 = AGE13_24,\n         ORIGIN_AGE25_64 = AGE25_64) %&gt;%\n  select(-c(PA, SZ_NAME))\n\n\n\nWe add destination attributes to the flow data.\n\nSIM_data &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            by = c(DESTIN_SZ = \"SZ\")) %&gt;%\n  rename(DESTIN_AGE7_12 = AGE7_12,\n         DESTIN_AGE13_24 = AGE13_24,\n         DESTIN_AGE25_64 = AGE25_64) %&gt;%\n  select(-c(PA, SZ_NAME))\nglimpse(SIM_data)\n\nRows: 14,734\nColumns: 12\nGroups: ORIGIN_SZ [279]\n$ ORIGIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ TRIPS           &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, …\n$ FlowNoIntra     &lt;dbl&gt; 0, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63,…\n$ offset          &lt;dbl&gt; 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00…\n$ dist            &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  &lt;dbl&gt; 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 &lt;dbl&gt; 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 &lt;dbl&gt; 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 980, 810, 1050, 420, 390, 1190, 0, 0,…\n$ DESTIN_AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2000, 1920, 2390, 1120, 1150, 3260, 0…\n$ DESTIN_AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 11320, 9650, 12460, 3620, 4350, 13…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#visualise-dependent-variable",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#visualise-dependent-variable",
    "title": "Hands-on Ex 9B",
    "section": "3.1 Visualise dependent variable",
    "text": "3.1 Visualise dependent variable\n\nHistogram of DVScatterplot between DV and distanceLog-transformed scatterplot\n\n\nThe distribution of the dependent variable (total number of trips between zones) is shown below. The distribution is highly skewed and has a non-normal distribution.\n\nggplot(data = SIM_data,\n       aes(x = TRIPS)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\nThe scatterplot below shows the relationship between the total number of trips and the key independent variable of the Spatial Interaction Model, distance. The relationship does not resemble any linear relationship.\n\nggplot(data = SIM_data,\n       aes(x = dist,\n           y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nA log-transformation of both variables reveals a relationship that closely approximates linearity.\n\nggplot(data = SIM_data,\n       aes(x = log(dist),\n           y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#check-for-zero-values",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#check-for-zero-values",
    "title": "Hands-on Ex 9B",
    "section": "3.2 Check for zero values",
    "text": "3.2 Check for zero values\nSince Poisson regression uses the natural logarithm, and log(0) is undefined, we must ensure there are no zero values in the explanatory variables. The summary indicates that some variables contain zero values.\n\nsummary(SIM_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS         FlowNoIntra      \n Length:14734       Length:14734       Min.   :     1   Min.   :     0.0  \n Class :character   Class :character   1st Qu.:    14   1st Qu.:    13.0  \n Mode  :character   Mode  :character   Median :    76   Median :    70.0  \n                                       Mean   :  1021   Mean   :   839.9  \n                                       3rd Qu.:   426   3rd Qu.:   379.0  \n                                       Max.   :232187   Max.   :148274.0  \n     offset              dist       ORIGIN_AGE7_12 ORIGIN_AGE13_24\n Min.   :0.000001   Min.   :   50   Min.   :   0   Min.   :    0  \n 1st Qu.:1.000000   1st Qu.: 3346   1st Qu.: 240   1st Qu.:  440  \n Median :1.000000   Median : 6067   Median : 700   Median : 1350  \n Mean   :0.982150   Mean   : 6880   Mean   :1032   Mean   : 2269  \n 3rd Qu.:1.000000   3rd Qu.: 9729   3rd Qu.:1480   3rd Qu.: 3260  \n Max.   :1.000000   Max.   :26136   Max.   :6340   Max.   :16380  \n ORIGIN_AGE25_64 DESTIN_AGE7_12 DESTIN_AGE13_24 DESTIN_AGE25_64\n Min.   :    0   Min.   :   0   Min.   :    0   Min.   :    0  \n 1st Qu.: 2200   1st Qu.: 240   1st Qu.:  460   1st Qu.: 2200  \n Median : 6810   Median : 720   Median : 1420   Median : 7030  \n Mean   :10487   Mean   :1033   Mean   : 2290   Mean   :10574  \n 3rd Qu.:15770   3rd Qu.:1500   3rd Qu.: 3260   3rd Qu.:15830  \n Max.   :74610   Max.   :6340   Max.   :16380   Max.   :74610"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#replace-zero-values-with-0.99",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#replace-zero-values-with-0.99",
    "title": "Hands-on Ex 9B",
    "section": "3.3 Replace zero values with 0.99",
    "text": "3.3 Replace zero values with 0.99\nWe replace all zero values in the affected explanatory variables with 0.99.\n\nSIM_data$DESTIN_AGE7_12 &lt;- ifelse(\n  SIM_data$DESTIN_AGE7_12 == 0,\n  0.99, SIM_data$DESTIN_AGE7_12)\nSIM_data$DESTIN_AGE13_24 &lt;- ifelse(\n  SIM_data$DESTIN_AGE13_24 == 0,\n  0.99, SIM_data$DESTIN_AGE13_24)\nSIM_data$DESTIN_AGE25_64 &lt;- ifelse(\n  SIM_data$DESTIN_AGE25_64 == 0,\n  0.99, SIM_data$DESTIN_AGE25_64)\nSIM_data$ORIGIN_AGE7_12 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE7_12 == 0,\n  0.99, SIM_data$ORIGIN_AGE7_12)\nSIM_data$ORIGIN_AGE13_24 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE13_24 == 0,\n  0.99, SIM_data$ORIGIN_AGE13_24)\nSIM_data$ORIGIN_AGE25_64 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE25_64 == 0,\n  0.99, SIM_data$ORIGIN_AGE25_64)\n\n\nsummary(SIM_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS         FlowNoIntra      \n Length:14734       Length:14734       Min.   :     1   Min.   :     0.0  \n Class :character   Class :character   1st Qu.:    14   1st Qu.:    13.0  \n Mode  :character   Mode  :character   Median :    76   Median :    70.0  \n                                       Mean   :  1021   Mean   :   839.9  \n                                       3rd Qu.:   426   3rd Qu.:   379.0  \n                                       Max.   :232187   Max.   :148274.0  \n     offset              dist       ORIGIN_AGE7_12    ORIGIN_AGE13_24   \n Min.   :0.000001   Min.   :   50   Min.   :   0.99   Min.   :    0.99  \n 1st Qu.:1.000000   1st Qu.: 3346   1st Qu.: 240.00   1st Qu.:  440.00  \n Median :1.000000   Median : 6067   Median : 700.00   Median : 1350.00  \n Mean   :0.982150   Mean   : 6880   Mean   :1031.86   Mean   : 2268.84  \n 3rd Qu.:1.000000   3rd Qu.: 9729   3rd Qu.:1480.00   3rd Qu.: 3260.00  \n Max.   :1.000000   Max.   :26136   Max.   :6340.00   Max.   :16380.00  \n ORIGIN_AGE25_64    DESTIN_AGE7_12    DESTIN_AGE13_24    DESTIN_AGE25_64   \n Min.   :    0.99   Min.   :   0.99   Min.   :    0.99   Min.   :    0.99  \n 1st Qu.: 2200.00   1st Qu.: 240.00   1st Qu.:  460.00   1st Qu.: 2200.00  \n Median : 6810.00   Median : 720.00   Median : 1420.00   Median : 7030.00  \n Mean   :10487.62   Mean   :1033.40   Mean   : 2290.35   Mean   :10574.46  \n 3rd Qu.:15770.00   3rd Qu.:1500.00   3rd Qu.: 3260.00   3rd Qu.:15830.00  \n Max.   :74610.00   Max.   :6340.00   Max.   :16380.00   Max.   :74610.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#unconstrained-sim",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#unconstrained-sim",
    "title": "Hands-on Ex 9B",
    "section": "3.4 Unconstrained SIM",
    "text": "3.4 Unconstrained SIM\nWe will calibrate an unconstrained SIM with the following explanatory variables:\n\nOrigin population by different age cohort\nDestination population by different age cohort\nDistance between origin and destination in kilometers\n\n\nCalibrate modelR-squared value of model\n\n\n\nuncSIM &lt;- glm(formula = TRIPS ~ \n                log(ORIGIN_AGE7_12) + \n                log(DESTIN_AGE7_12) +\n                log(ORIGIN_AGE13_24) + \n                log(DESTIN_AGE13_24) +\n                log(ORIGIN_AGE25_64) + \n                log(DESTIN_AGE25_64) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nuncSIM\n\n\nCall:  glm(formula = TRIPS ~ log(ORIGIN_AGE7_12) + log(DESTIN_AGE7_12) + \n    log(ORIGIN_AGE13_24) + log(DESTIN_AGE13_24) + log(ORIGIN_AGE25_64) + \n    log(DESTIN_AGE25_64) + log(dist), family = poisson(link = \"log\"), \n    data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n         (Intercept)   log(ORIGIN_AGE7_12)   log(DESTIN_AGE7_12)  \n             10.8165                0.2906                0.1211  \nlog(ORIGIN_AGE13_24)  log(DESTIN_AGE13_24)  log(ORIGIN_AGE25_64)  \n              0.8176                0.4314               -0.7111  \nlog(DESTIN_AGE25_64)             log(dist)  \n             -0.4464               -0.6860  \n\nDegrees of Freedom: 14733 Total (i.e. Null);  14726 Residual\nNull Deviance:      60800000 \nResidual Deviance: 34170000     AIC: 34260000\n\n\n\n\nTo assess how much of the variation in trip counts is explained by the model, we define a function to calculate the R-squared value as follows:\n\nCalcRSquared &lt;- function(observed,estimated){\n  r &lt;- cor(observed,estimated)\n  R2 &lt;- r^2\n  R2\n}\n\nThe R-squared value of the unconstrained SIM is 0.234.\n\nCalcRSquared(uncSIM$data$TRIPS, uncSIM$fitted.values)\n\n[1] 0.2342639\n\n\nThe McFadden’s R-squared value of the SIM (a metric commonly used to evaluate the goodness-of-fit in logistic and Poisson regression models) is 0.437.\n\nr2_mcfadden(uncSIM)\n\n# R2 for Generalized Linear Regression\n       R2: 0.437\n  adj. R2: 0.437"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#origin-constrained-sim",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#origin-constrained-sim",
    "title": "Hands-on Ex 9B",
    "section": "3.5 Origin-constrained SIM",
    "text": "3.5 Origin-constrained SIM\nWe calibrate an origin-constrained SIM as follows:\n\norcSIM &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ +\n                log(DESTIN_AGE7_12) +\n                log(DESTIN_AGE13_24) +\n                log(DESTIN_AGE25_64) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(orcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(DESTIN_AGE7_12) + log(DESTIN_AGE13_24) + \n    log(DESTIN_AGE25_64) + log(dist), family = poisson(link = \"log\"), \n    data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                       Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)          12.1209378  0.0037844  3202.854  &lt; 2e-16 ***\nORIGIN_SZAMSZ02       1.0187838  0.0044504   228.922  &lt; 2e-16 ***\nORIGIN_SZAMSZ03       0.5683555  0.0045632   124.552  &lt; 2e-16 ***\nORIGIN_SZAMSZ04      -0.0550997  0.0051871   -10.622  &lt; 2e-16 ***\nORIGIN_SZAMSZ05      -0.1860842  0.0057901   -32.138  &lt; 2e-16 ***\nORIGIN_SZAMSZ06       0.4294345  0.0051305    83.702  &lt; 2e-16 ***\nORIGIN_SZAMSZ07      -1.3869513  0.0096832  -143.233  &lt; 2e-16 ***\nORIGIN_SZAMSZ08      -1.0276730  0.0089558  -114.749  &lt; 2e-16 ***\nORIGIN_SZAMSZ09       0.2150720  0.0054086    39.765  &lt; 2e-16 ***\nORIGIN_SZAMSZ10       0.4977037  0.0047166   105.521  &lt; 2e-16 ***\nORIGIN_SZAMSZ11      -1.8750654  0.0128531  -145.884  &lt; 2e-16 ***\nORIGIN_SZAMSZ12      -1.5898468  0.0107575  -147.790  &lt; 2e-16 ***\nORIGIN_SZBDSZ01       1.0857331  0.0043451   249.877  &lt; 2e-16 ***\nORIGIN_SZBDSZ02       0.5150350  0.0050794   101.397  &lt; 2e-16 ***\nORIGIN_SZBDSZ03       0.9924296  0.0044897   221.047  &lt; 2e-16 ***\nORIGIN_SZBDSZ04       1.7594689  0.0038945   451.778  &lt; 2e-16 ***\nORIGIN_SZBDSZ05       0.6406152  0.0045458   140.924  &lt; 2e-16 ***\nORIGIN_SZBDSZ06       0.9224346  0.0045432   203.035  &lt; 2e-16 ***\nORIGIN_SZBDSZ07      -1.2313874  0.0095588  -128.822  &lt; 2e-16 ***\nORIGIN_SZBDSZ08      -1.1530523  0.0090321  -127.662  &lt; 2e-16 ***\nORIGIN_SZBKSZ01      -0.4695429  0.0065384   -71.813  &lt; 2e-16 ***\nORIGIN_SZBKSZ02       0.3594066  0.0051157    70.255  &lt; 2e-16 ***\nORIGIN_SZBKSZ03       0.6220903  0.0049347   126.064  &lt; 2e-16 ***\nORIGIN_SZBKSZ04      -0.1296646  0.0059142   -21.924  &lt; 2e-16 ***\nORIGIN_SZBKSZ05      -0.2303731  0.0058323   -39.499  &lt; 2e-16 ***\nORIGIN_SZBKSZ06       0.0125256  0.0058730     2.133   0.0329 *  \nORIGIN_SZBKSZ07       0.7273948  0.0044270   164.307  &lt; 2e-16 ***\nORIGIN_SZBKSZ08      -0.0027694  0.0053490    -0.518   0.6046    \nORIGIN_SZBKSZ09      -0.1100106  0.0057215   -19.228  &lt; 2e-16 ***\nORIGIN_SZBLSZ01      -1.7371433  0.0148179  -117.233  &lt; 2e-16 ***\nORIGIN_SZBLSZ02      -2.1984262  0.0192395  -114.266  &lt; 2e-16 ***\nORIGIN_SZBLSZ03      -3.2985270  0.0393023   -83.927  &lt; 2e-16 ***\nORIGIN_SZBLSZ04      -2.2535624  0.0230581   -97.734  &lt; 2e-16 ***\nORIGIN_SZBMSZ01      -0.0719379  0.0052227   -13.774  &lt; 2e-16 ***\nORIGIN_SZBMSZ02      -1.0077791  0.0067432  -149.452  &lt; 2e-16 ***\nORIGIN_SZBMSZ03      -0.3856771  0.0057944   -66.560  &lt; 2e-16 ***\nORIGIN_SZBMSZ04       0.0077432  0.0051593     1.501   0.1334    \nORIGIN_SZBMSZ05      -2.2081774  0.0124686  -177.098  &lt; 2e-16 ***\nORIGIN_SZBMSZ06      -2.2438352  0.0161793  -138.685  &lt; 2e-16 ***\nORIGIN_SZBMSZ07      -0.4307340  0.0056542   -76.179  &lt; 2e-16 ***\nORIGIN_SZBMSZ08      -0.5018691  0.0058124   -86.344  &lt; 2e-16 ***\nORIGIN_SZBMSZ09      -1.1512938  0.0086892  -132.498  &lt; 2e-16 ***\nORIGIN_SZBMSZ10      -1.3694760  0.0091320  -149.964  &lt; 2e-16 ***\nORIGIN_SZBMSZ11      -0.7137687  0.0065970  -108.196  &lt; 2e-16 ***\nORIGIN_SZBMSZ12      -0.9607730  0.0091520  -104.980  &lt; 2e-16 ***\nORIGIN_SZBMSZ13      -0.0263432  0.0056935    -4.627 3.71e-06 ***\nORIGIN_SZBMSZ14      -0.4330847  0.0066331   -65.292  &lt; 2e-16 ***\nORIGIN_SZBMSZ15      -0.2319806  0.0060570   -38.299  &lt; 2e-16 ***\nORIGIN_SZBMSZ16      -1.4825258  0.0091453  -162.107  &lt; 2e-16 ***\nORIGIN_SZBMSZ17      -2.1459696  0.0157582  -136.181  &lt; 2e-16 ***\nORIGIN_SZBPSZ01       0.1156815  0.0055531    20.832  &lt; 2e-16 ***\nORIGIN_SZBPSZ02      -0.0741048  0.0064631   -11.466  &lt; 2e-16 ***\nORIGIN_SZBPSZ03       0.1167847  0.0061504    18.988  &lt; 2e-16 ***\nORIGIN_SZBPSZ04       0.3474867  0.0050839    68.350  &lt; 2e-16 ***\nORIGIN_SZBPSZ05       0.5308027  0.0045543   116.550  &lt; 2e-16 ***\nORIGIN_SZBPSZ06      -1.4100989  0.0093113  -151.440  &lt; 2e-16 ***\nORIGIN_SZBPSZ07      -1.0089222  0.0085753  -117.654  &lt; 2e-16 ***\nORIGIN_SZBSSZ01      -0.0108455  0.0052757    -2.056   0.0398 *  \nORIGIN_SZBSSZ02       0.3139191  0.0047875    65.570  &lt; 2e-16 ***\nORIGIN_SZBSSZ03       0.2733735  0.0046890    58.302  &lt; 2e-16 ***\nORIGIN_SZBTSZ01      -0.0699347  0.0053853   -12.986  &lt; 2e-16 ***\nORIGIN_SZBTSZ02      -1.0635587  0.0077970  -136.405  &lt; 2e-16 ***\nORIGIN_SZBTSZ03      -0.2621867  0.0057277   -45.775  &lt; 2e-16 ***\nORIGIN_SZBTSZ04      -1.0648632  0.0101890  -104.511  &lt; 2e-16 ***\nORIGIN_SZBTSZ05      -1.6468606  0.0110013  -149.697  &lt; 2e-16 ***\nORIGIN_SZBTSZ06      -0.8059153  0.0071811  -112.228  &lt; 2e-16 ***\nORIGIN_SZBTSZ07      -2.2721680  0.0132102  -172.001  &lt; 2e-16 ***\nORIGIN_SZBTSZ08      -1.2775355  0.0093948  -135.983  &lt; 2e-16 ***\nORIGIN_SZCBSZ01      -1.9468532  0.0548336   -35.505  &lt; 2e-16 ***\nORIGIN_SZCCSZ01      -1.7856729  0.0133115  -134.145  &lt; 2e-16 ***\nORIGIN_SZCHSZ01      -1.0003449  0.0117996   -84.778  &lt; 2e-16 ***\nORIGIN_SZCHSZ02      -0.4972406  0.0079404   -62.622  &lt; 2e-16 ***\nORIGIN_SZCHSZ03       0.3958020  0.0058418    67.753  &lt; 2e-16 ***\nORIGIN_SZCKSZ01       0.1577865  0.0051180    30.830  &lt; 2e-16 ***\nORIGIN_SZCKSZ02       0.6382508  0.0050885   125.430  &lt; 2e-16 ***\nORIGIN_SZCKSZ03       0.7558740  0.0045236   167.094  &lt; 2e-16 ***\nORIGIN_SZCKSZ04       1.2463598  0.0045636   273.108  &lt; 2e-16 ***\nORIGIN_SZCKSZ05       0.9055034  0.0053128   170.437  &lt; 2e-16 ***\nORIGIN_SZCKSZ06       1.1556716  0.0050486   228.911  &lt; 2e-16 ***\nORIGIN_SZCLSZ01      -0.7060065  0.0076614   -92.151  &lt; 2e-16 ***\nORIGIN_SZCLSZ02      -1.8140877  0.0136423  -132.975  &lt; 2e-16 ***\nORIGIN_SZCLSZ03      -1.0109639  0.0079490  -127.181  &lt; 2e-16 ***\nORIGIN_SZCLSZ04       0.7095453  0.0044600   159.092  &lt; 2e-16 ***\nORIGIN_SZCLSZ05      -1.9619359  0.0147402  -133.101  &lt; 2e-16 ***\nORIGIN_SZCLSZ06       0.8620589  0.0042038   205.065  &lt; 2e-16 ***\nORIGIN_SZCLSZ07      -0.2998150  0.0055762   -53.767  &lt; 2e-16 ***\nORIGIN_SZCLSZ08       0.3414354  0.0058028    58.840  &lt; 2e-16 ***\nORIGIN_SZCLSZ09      -1.7219806  0.0155521  -110.723  &lt; 2e-16 ***\nORIGIN_SZDTSZ02      -3.9272928  0.0834098   -47.084  &lt; 2e-16 ***\nORIGIN_SZDTSZ03      -3.9389954  0.0738072   -53.369  &lt; 2e-16 ***\nORIGIN_SZDTSZ13      -2.9461670  0.0312869   -94.166  &lt; 2e-16 ***\nORIGIN_SZGLSZ01      -1.3996966  0.0091924  -152.267  &lt; 2e-16 ***\nORIGIN_SZGLSZ02       0.2815576  0.0048888    57.592  &lt; 2e-16 ***\nORIGIN_SZGLSZ03       0.2733219  0.0048555    56.291  &lt; 2e-16 ***\nORIGIN_SZGLSZ04       0.8707052  0.0042000   207.312  &lt; 2e-16 ***\nORIGIN_SZGLSZ05       0.6317012  0.0043754   144.376  &lt; 2e-16 ***\nORIGIN_SZHGSZ01       0.2906030  0.0047461    61.230  &lt; 2e-16 ***\nORIGIN_SZHGSZ02       0.4788240  0.0047122   101.615  &lt; 2e-16 ***\nORIGIN_SZHGSZ03       0.2555574  0.0051134    49.978  &lt; 2e-16 ***\nORIGIN_SZHGSZ04       0.9087384  0.0043033   211.171  &lt; 2e-16 ***\nORIGIN_SZHGSZ05       1.1511138  0.0042539   270.602  &lt; 2e-16 ***\nORIGIN_SZHGSZ06      -0.1086696  0.0054130   -20.076  &lt; 2e-16 ***\nORIGIN_SZHGSZ07       0.6938958  0.0044553   155.746  &lt; 2e-16 ***\nORIGIN_SZHGSZ08       0.1013003  0.0053537    18.922  &lt; 2e-16 ***\nORIGIN_SZHGSZ09      -0.5643866  0.0069627   -81.058  &lt; 2e-16 ***\nORIGIN_SZHGSZ10      -3.5568988  0.0421146   -84.458  &lt; 2e-16 ***\nORIGIN_SZJESZ01       0.3884172  0.0048694    79.766  &lt; 2e-16 ***\nORIGIN_SZJESZ02       0.2229854  0.0049245    45.281  &lt; 2e-16 ***\nORIGIN_SZJESZ03       0.1749558  0.0052879    33.086  &lt; 2e-16 ***\nORIGIN_SZJESZ04      -0.9992402  0.0091447  -109.270  &lt; 2e-16 ***\nORIGIN_SZJESZ05      -2.0565379  0.0138164  -148.848  &lt; 2e-16 ***\nORIGIN_SZJESZ06       0.2846112  0.0048635    58.520  &lt; 2e-16 ***\nORIGIN_SZJESZ07      -1.9055953  0.0118336  -161.032  &lt; 2e-16 ***\nORIGIN_SZJESZ08      -1.0712086  0.0114719   -93.376  &lt; 2e-16 ***\nORIGIN_SZJESZ09       0.5213418  0.0049596   105.117  &lt; 2e-16 ***\nORIGIN_SZJESZ10      -1.8678483  0.0179990  -103.775  &lt; 2e-16 ***\nORIGIN_SZJESZ11      -2.0531200  0.0193105  -106.321  &lt; 2e-16 ***\nORIGIN_SZJWSZ01       0.1757580  0.0064058    27.437  &lt; 2e-16 ***\nORIGIN_SZJWSZ02       0.8615814  0.0045219   190.537  &lt; 2e-16 ***\nORIGIN_SZJWSZ03       1.2436554  0.0041883   296.936  &lt; 2e-16 ***\nORIGIN_SZJWSZ04       1.2695751  0.0042803   296.611  &lt; 2e-16 ***\nORIGIN_SZJWSZ05      -1.4401318  0.0125157  -115.066  &lt; 2e-16 ***\nORIGIN_SZJWSZ06      -1.0717271  0.0106704  -100.439  &lt; 2e-16 ***\nORIGIN_SZJWSZ07      -2.7512270  0.0275134   -99.996  &lt; 2e-16 ***\nORIGIN_SZJWSZ08       1.8682135  0.0041149   454.017  &lt; 2e-16 ***\nORIGIN_SZJWSZ09       1.7847006  0.0039011   457.486  &lt; 2e-16 ***\nORIGIN_SZKLSZ01       0.1995591  0.0049023    40.707  &lt; 2e-16 ***\nORIGIN_SZKLSZ02      -0.4523335  0.0063224   -71.545  &lt; 2e-16 ***\nORIGIN_SZKLSZ03      -0.3595233  0.0059501   -60.423  &lt; 2e-16 ***\nORIGIN_SZKLSZ04      -2.1912270  0.0118737  -184.544  &lt; 2e-16 ***\nORIGIN_SZKLSZ05      -0.7904405  0.0082724   -95.552  &lt; 2e-16 ***\nORIGIN_SZKLSZ06      -4.5781225  0.1857303   -24.649  &lt; 2e-16 ***\nORIGIN_SZKLSZ07      -1.0553296  0.0084090  -125.500  &lt; 2e-16 ***\nORIGIN_SZKLSZ08      -1.4333180  0.0091526  -156.602  &lt; 2e-16 ***\nORIGIN_SZLKSZ01      -3.3183770  0.0387450   -85.647  &lt; 2e-16 ***\nORIGIN_SZMDSZ01      -2.6480242  0.0280231   -94.494  &lt; 2e-16 ***\nORIGIN_SZMDSZ02      -0.9531449  0.0103551   -92.046  &lt; 2e-16 ***\nORIGIN_SZMDSZ03      -2.0097262  0.0170309  -118.005  &lt; 2e-16 ***\nORIGIN_SZMPSZ01      -1.0632250  0.0083675  -127.066  &lt; 2e-16 ***\nORIGIN_SZMPSZ02      -0.5590933  0.0068986   -81.044  &lt; 2e-16 ***\nORIGIN_SZMPSZ03       0.0125385  0.0053192     2.357   0.0184 *  \nORIGIN_SZMUSZ02      -3.8374234  0.1037565   -36.985  &lt; 2e-16 ***\nORIGIN_SZNTSZ01      -2.8373583  0.0352949   -80.390  &lt; 2e-16 ***\nORIGIN_SZNTSZ02      -3.1538933  0.0232290  -135.774  &lt; 2e-16 ***\nORIGIN_SZNTSZ03      -0.8515395  0.0077806  -109.443  &lt; 2e-16 ***\nORIGIN_SZNTSZ05      -3.2637875  0.0496355   -65.755  &lt; 2e-16 ***\nORIGIN_SZNTSZ06      -3.7496896  0.0557554   -67.252  &lt; 2e-16 ***\nORIGIN_SZNVSZ01       0.4959413  0.0044827   110.635  &lt; 2e-16 ***\nORIGIN_SZNVSZ02      -0.5530790  0.0064719   -85.459  &lt; 2e-16 ***\nORIGIN_SZNVSZ03      -1.1862516  0.0077877  -152.323  &lt; 2e-16 ***\nORIGIN_SZNVSZ04      -1.4642910  0.0090910  -161.070  &lt; 2e-16 ***\nORIGIN_SZNVSZ05      -2.5864659  0.0157862  -163.844  &lt; 2e-16 ***\nORIGIN_SZPGSZ01      -0.7885243  0.0122311   -64.469  &lt; 2e-16 ***\nORIGIN_SZPGSZ02      -0.5217885  0.0072345   -72.125  &lt; 2e-16 ***\nORIGIN_SZPGSZ03       0.9421480  0.0044396   212.214  &lt; 2e-16 ***\nORIGIN_SZPGSZ04       1.0450387  0.0044216   236.346  &lt; 2e-16 ***\nORIGIN_SZPGSZ05       0.2263192  0.0057633    39.269  &lt; 2e-16 ***\nORIGIN_SZPLSZ01      -0.8480823  0.0104369   -81.258  &lt; 2e-16 ***\nORIGIN_SZPLSZ02      -1.7175782  0.0147790  -116.218  &lt; 2e-16 ***\nORIGIN_SZPLSZ03      -2.9936592  0.0367204   -81.526  &lt; 2e-16 ***\nORIGIN_SZPLSZ04      -3.3026314  0.0368383   -89.652  &lt; 2e-16 ***\nORIGIN_SZPLSZ05      -2.4897914  0.0224504  -110.902  &lt; 2e-16 ***\nORIGIN_SZPNSZ01       1.3589692  0.0045842   296.448  &lt; 2e-16 ***\nORIGIN_SZPNSZ02      -0.5485444  0.0110824   -49.497  &lt; 2e-16 ***\nORIGIN_SZPNSZ03      -1.9287895  0.0194002   -99.421  &lt; 2e-16 ***\nORIGIN_SZPNSZ04      -2.8062198  0.0311201   -90.174  &lt; 2e-16 ***\nORIGIN_SZPNSZ05      -2.3203138  0.0262763   -88.305  &lt; 2e-16 ***\nORIGIN_SZPRSZ01      -0.8321444  0.0114154   -72.897  &lt; 2e-16 ***\nORIGIN_SZPRSZ02       0.8980816  0.0046165   194.538  &lt; 2e-16 ***\nORIGIN_SZPRSZ03       0.7532873  0.0046266   162.816  &lt; 2e-16 ***\nORIGIN_SZPRSZ04      -0.3757327  0.0075164   -49.989  &lt; 2e-16 ***\nORIGIN_SZPRSZ05       1.2817237  0.0043273   296.193  &lt; 2e-16 ***\nORIGIN_SZPRSZ06      -0.4042531  0.0086514   -46.727  &lt; 2e-16 ***\nORIGIN_SZPRSZ07      -2.1300641  0.0161047  -132.264  &lt; 2e-16 ***\nORIGIN_SZPRSZ08      -0.0102792  0.0063830    -1.610   0.1073    \nORIGIN_SZQTSZ01      -0.3187953  0.0068482   -46.552  &lt; 2e-16 ***\nORIGIN_SZQTSZ02      -0.7542760  0.0063275  -119.207  &lt; 2e-16 ***\nORIGIN_SZQTSZ03      -0.1674438  0.0056836   -29.461  &lt; 2e-16 ***\nORIGIN_SZQTSZ04      -0.9784607  0.0071297  -137.237  &lt; 2e-16 ***\nORIGIN_SZQTSZ05      -0.3031218  0.0059964   -50.550  &lt; 2e-16 ***\nORIGIN_SZQTSZ06      -0.5162679  0.0064822   -79.644  &lt; 2e-16 ***\nORIGIN_SZQTSZ07      -1.3977412  0.0096370  -145.039  &lt; 2e-16 ***\nORIGIN_SZQTSZ08      -0.0641033  0.0057007   -11.245  &lt; 2e-16 ***\nORIGIN_SZQTSZ09      -0.6332869  0.0066340   -95.461  &lt; 2e-16 ***\nORIGIN_SZQTSZ10      -0.4798813  0.0065145   -73.663  &lt; 2e-16 ***\nORIGIN_SZQTSZ11      -1.7680890  0.0098789  -178.977  &lt; 2e-16 ***\nORIGIN_SZQTSZ12      -1.4664096  0.0104393  -140.471  &lt; 2e-16 ***\nORIGIN_SZQTSZ13      -0.3321663  0.0064150   -51.780  &lt; 2e-16 ***\nORIGIN_SZQTSZ14      -1.5411842  0.0098475  -156.505  &lt; 2e-16 ***\nORIGIN_SZQTSZ15      -0.9795208  0.0102743   -95.337  &lt; 2e-16 ***\nORIGIN_SZRCSZ01      -1.3230264  0.0126536  -104.557  &lt; 2e-16 ***\nORIGIN_SZRCSZ06      -0.5882674  0.0084750   -69.412  &lt; 2e-16 ***\nORIGIN_SZRVSZ01      -3.4226656  0.0323717  -105.730  &lt; 2e-16 ***\nORIGIN_SZRVSZ02      -2.7988845  0.0277647  -100.807  &lt; 2e-16 ***\nORIGIN_SZRVSZ03      -3.0305951  0.0237875  -127.403  &lt; 2e-16 ***\nORIGIN_SZRVSZ04      -3.2779444  0.0556701   -58.882  &lt; 2e-16 ***\nORIGIN_SZRVSZ05      -2.2791731  0.0164437  -138.605  &lt; 2e-16 ***\nORIGIN_SZSBSZ01       0.6341692  0.0055297   114.685  &lt; 2e-16 ***\nORIGIN_SZSBSZ02      -0.7238164  0.0082129   -88.132  &lt; 2e-16 ***\nORIGIN_SZSBSZ03       0.9114552  0.0046127   197.597  &lt; 2e-16 ***\nORIGIN_SZSBSZ04       0.6858447  0.0052926   129.587  &lt; 2e-16 ***\nORIGIN_SZSBSZ05      -0.1301508  0.0065439   -19.889  &lt; 2e-16 ***\nORIGIN_SZSBSZ06      -1.7360445  0.0171922  -100.979  &lt; 2e-16 ***\nORIGIN_SZSBSZ07      -1.1789839  0.0125568   -93.892  &lt; 2e-16 ***\nORIGIN_SZSBSZ08      -1.2426128  0.0122175  -101.707  &lt; 2e-16 ***\nORIGIN_SZSBSZ09      -0.6467589  0.0085797   -75.382  &lt; 2e-16 ***\nORIGIN_SZSESZ02       0.9437017  0.0044111   213.936  &lt; 2e-16 ***\nORIGIN_SZSESZ03       1.1729037  0.0041655   281.575  &lt; 2e-16 ***\nORIGIN_SZSESZ04       0.7654128  0.0048718   157.110  &lt; 2e-16 ***\nORIGIN_SZSESZ05      -0.2294461  0.0059158   -38.785  &lt; 2e-16 ***\nORIGIN_SZSESZ06       0.6975898  0.0046912   148.702  &lt; 2e-16 ***\nORIGIN_SZSESZ07      -2.5700065  0.0196084  -131.067  &lt; 2e-16 ***\nORIGIN_SZSGSZ01      -1.0544617  0.0085507  -123.319  &lt; 2e-16 ***\nORIGIN_SZSGSZ02      -1.1336073  0.0095894  -118.214  &lt; 2e-16 ***\nORIGIN_SZSGSZ03       0.2011727  0.0051675    38.930  &lt; 2e-16 ***\nORIGIN_SZSGSZ04       0.2624590  0.0047915    54.776  &lt; 2e-16 ***\nORIGIN_SZSGSZ05      -1.7768714  0.0105974  -167.671  &lt; 2e-16 ***\nORIGIN_SZSGSZ06       0.4199408  0.0045407    92.483  &lt; 2e-16 ***\nORIGIN_SZSGSZ07      -0.6068962  0.0062347   -97.342  &lt; 2e-16 ***\nORIGIN_SZSKSZ01      -0.2113948  0.0077648   -27.225  &lt; 2e-16 ***\nORIGIN_SZSKSZ02       0.5327488  0.0056933    93.574  &lt; 2e-16 ***\nORIGIN_SZSKSZ03      -0.7103912  0.0079832   -88.986  &lt; 2e-16 ***\nORIGIN_SZSKSZ04      -2.5754920  0.0270186   -95.323  &lt; 2e-16 ***\nORIGIN_SZSKSZ05      -1.4178945  0.0155167   -91.379  &lt; 2e-16 ***\nORIGIN_SZSLSZ01      -3.2481927  0.0305825  -106.211  &lt; 2e-16 ***\nORIGIN_SZSLSZ04      -0.6891163  0.0076938   -89.568  &lt; 2e-16 ***\nORIGIN_SZSRSZ01      -2.2351063  0.0158286  -141.207  &lt; 2e-16 ***\nORIGIN_SZTHSZ01      -2.2503101  0.0488674   -46.049  &lt; 2e-16 ***\nORIGIN_SZTHSZ03      -2.2773119  0.0224274  -101.542  &lt; 2e-16 ***\nORIGIN_SZTHSZ04      -2.0423201  0.0286889   -71.189  &lt; 2e-16 ***\nORIGIN_SZTHSZ06      -2.2955290  0.0178414  -128.663  &lt; 2e-16 ***\nORIGIN_SZTMSZ01       0.4824051  0.0058158    82.948  &lt; 2e-16 ***\nORIGIN_SZTMSZ02       2.1911756  0.0037956   577.295  &lt; 2e-16 ***\nORIGIN_SZTMSZ03       1.3958381  0.0041089   339.712  &lt; 2e-16 ***\nORIGIN_SZTMSZ04       0.9023632  0.0047421   190.286  &lt; 2e-16 ***\nORIGIN_SZTMSZ05      -0.2645831  0.0075358   -35.110  &lt; 2e-16 ***\nORIGIN_SZTNSZ01      -1.7828391  0.0103757  -171.829  &lt; 2e-16 ***\nORIGIN_SZTNSZ02      -1.6482997  0.0097794  -168.548  &lt; 2e-16 ***\nORIGIN_SZTNSZ03      -2.1974006  0.0133771  -164.266  &lt; 2e-16 ***\nORIGIN_SZTNSZ04      -0.7492096  0.0071974  -104.094  &lt; 2e-16 ***\nORIGIN_SZTPSZ01      -0.5842570  0.0062883   -92.912  &lt; 2e-16 ***\nORIGIN_SZTPSZ02       0.5020483  0.0043476   115.476  &lt; 2e-16 ***\nORIGIN_SZTPSZ03      -0.4998092  0.0060847   -82.141  &lt; 2e-16 ***\nORIGIN_SZTPSZ04      -0.2388066  0.0057798   -41.317  &lt; 2e-16 ***\nORIGIN_SZTPSZ05      -0.1520051  0.0060743   -25.024  &lt; 2e-16 ***\nORIGIN_SZTPSZ06       0.4095248  0.0059459    68.875  &lt; 2e-16 ***\nORIGIN_SZTPSZ07      -0.1762519  0.0063193   -27.891  &lt; 2e-16 ***\nORIGIN_SZTPSZ08      -1.0247450  0.0091101  -112.484  &lt; 2e-16 ***\nORIGIN_SZTPSZ09      -0.3187897  0.0061903   -51.498  &lt; 2e-16 ***\nORIGIN_SZTPSZ10      -0.6488288  0.0076354   -84.976  &lt; 2e-16 ***\nORIGIN_SZTPSZ11       0.1463240  0.0054609    26.795  &lt; 2e-16 ***\nORIGIN_SZTPSZ12      -0.5602149  0.0065225   -85.889  &lt; 2e-16 ***\nORIGIN_SZTSSZ01      -3.5581922  0.0473866   -75.089  &lt; 2e-16 ***\nORIGIN_SZTSSZ02       0.2507171  0.0073339    34.186  &lt; 2e-16 ***\nORIGIN_SZTSSZ03       0.3189859  0.0070725    45.102  &lt; 2e-16 ***\nORIGIN_SZTSSZ04       0.3148947  0.0074623    42.198  &lt; 2e-16 ***\nORIGIN_SZTSSZ05      -1.1475836  0.0140359   -81.760  &lt; 2e-16 ***\nORIGIN_SZTSSZ06      -1.3520272  0.0171764   -78.714  &lt; 2e-16 ***\nORIGIN_SZWCSZ01      -0.1244050  0.0078600   -15.828  &lt; 2e-16 ***\nORIGIN_SZWCSZ02      -2.9222918  0.0315944   -92.494  &lt; 2e-16 ***\nORIGIN_SZWCSZ03      -4.2194432  0.1240860   -34.004  &lt; 2e-16 ***\nORIGIN_SZWDSZ01       1.3310700  0.0041463   321.028  &lt; 2e-16 ***\nORIGIN_SZWDSZ02       0.9453630  0.0047521   198.934  &lt; 2e-16 ***\nORIGIN_SZWDSZ03       2.0578468  0.0040469   508.495  &lt; 2e-16 ***\nORIGIN_SZWDSZ04       1.0164885  0.0049713   204.471  &lt; 2e-16 ***\nORIGIN_SZWDSZ05       0.4654287  0.0049999    93.087  &lt; 2e-16 ***\nORIGIN_SZWDSZ06       1.1591226  0.0046126   251.292  &lt; 2e-16 ***\nORIGIN_SZWDSZ07      -0.4168250  0.0080345   -51.879  &lt; 2e-16 ***\nORIGIN_SZWDSZ08      -0.5361245  0.0078779   -68.054  &lt; 2e-16 ***\nORIGIN_SZWDSZ09       1.4544589  0.0044030   330.337  &lt; 2e-16 ***\nORIGIN_SZYSSZ01      -0.1372251  0.0056434   -24.316  &lt; 2e-16 ***\nORIGIN_SZYSSZ02       0.8831289  0.0049730   177.584  &lt; 2e-16 ***\nORIGIN_SZYSSZ03       1.7332402  0.0042770   405.250  &lt; 2e-16 ***\nORIGIN_SZYSSZ04       0.8404561  0.0045384   185.186  &lt; 2e-16 ***\nORIGIN_SZYSSZ05      -0.1120440  0.0059210   -18.923  &lt; 2e-16 ***\nORIGIN_SZYSSZ06      -1.1650420  0.0107940  -107.934  &lt; 2e-16 ***\nORIGIN_SZYSSZ07      -1.1647600  0.0112679  -103.370  &lt; 2e-16 ***\nORIGIN_SZYSSZ08       0.0521578  0.0061045     8.544  &lt; 2e-16 ***\nORIGIN_SZYSSZ09       1.3640045  0.0042393   321.750  &lt; 2e-16 ***\nlog(DESTIN_AGE7_12)   0.0310508  0.0005469    56.778  &lt; 2e-16 ***\nlog(DESTIN_AGE13_24)  0.3696152  0.0008476   436.066  &lt; 2e-16 ***\nlog(DESTIN_AGE25_64) -0.3156201  0.0007399  -426.552  &lt; 2e-16 ***\nlog(dist)            -0.6877846  0.0001306 -5266.858  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 60796037  on 14733  degrees of freedom\nResidual deviance: 26504448  on 14451  degrees of freedom\nAIC: 26596641\n\nNumber of Fisher Scoring iterations: 7\n\n\nThe R-squared value of the origin-constrained SIM is 0.425.\n\nCalcRSquared(orcSIM$data$TRIPS, orcSIM$fitted.values)\n\n[1] 0.4245111"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#destination-constrained-sim",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#destination-constrained-sim",
    "title": "Hands-on Ex 9B",
    "section": "3.6 Destination-constrained SIM",
    "text": "3.6 Destination-constrained SIM\nWe calibrate a destination-constrained SIM as follows:\n\ndecSIM &lt;- glm(formula = TRIPS ~ \n                DESTIN_SZ + \n                log(ORIGIN_AGE7_12) + \n                log(ORIGIN_AGE13_24) + \n                log(ORIGIN_AGE25_64) + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(decSIM)\n\n\nCall:\nglm(formula = TRIPS ~ DESTIN_SZ + log(ORIGIN_AGE7_12) + log(ORIGIN_AGE13_24) + \n    log(ORIGIN_AGE25_64) + log(dist), family = poisson(link = \"log\"), \n    data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                       Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)          11.0720649  0.0033387  3316.311  &lt; 2e-16 ***\nDESTIN_SZAMSZ02       0.1852968  0.0041527    44.621  &lt; 2e-16 ***\nDESTIN_SZAMSZ03       0.2128031  0.0040885    52.049  &lt; 2e-16 ***\nDESTIN_SZAMSZ04      -0.8972995  0.0060638  -147.976  &lt; 2e-16 ***\nDESTIN_SZAMSZ05      -1.1339418  0.0061804  -183.473  &lt; 2e-16 ***\nDESTIN_SZAMSZ06      -0.8487725  0.0059244  -143.267  &lt; 2e-16 ***\nDESTIN_SZAMSZ07      -1.8066517  0.0096073  -188.049  &lt; 2e-16 ***\nDESTIN_SZAMSZ08      -1.0799461  0.0067767  -159.362  &lt; 2e-16 ***\nDESTIN_SZAMSZ09      -0.9952558  0.0060438  -164.673  &lt; 2e-16 ***\nDESTIN_SZAMSZ10       0.2201892  0.0043741    50.340  &lt; 2e-16 ***\nDESTIN_SZAMSZ11      -0.4349092  0.0086213   -50.446  &lt; 2e-16 ***\nDESTIN_SZAMSZ12       0.0158986  0.0049856     3.189  0.00143 ** \nDESTIN_SZBDSZ01       0.5117016  0.0037830   135.263  &lt; 2e-16 ***\nDESTIN_SZBDSZ02      -0.3307180  0.0049527   -66.775  &lt; 2e-16 ***\nDESTIN_SZBDSZ03      -0.0232998  0.0042692    -5.458 4.83e-08 ***\nDESTIN_SZBDSZ04       0.9540570  0.0034477   276.724  &lt; 2e-16 ***\nDESTIN_SZBDSZ05       0.3392867  0.0039002    86.992  &lt; 2e-16 ***\nDESTIN_SZBDSZ06       0.1597645  0.0042193    37.865  &lt; 2e-16 ***\nDESTIN_SZBDSZ07      -1.0478710  0.0092938  -112.750  &lt; 2e-16 ***\nDESTIN_SZBDSZ08      -1.8110923  0.0105724  -171.305  &lt; 2e-16 ***\nDESTIN_SZBKSZ01      -1.2422949  0.0065586  -189.415  &lt; 2e-16 ***\nDESTIN_SZBKSZ02      -0.2862891  0.0052053   -55.000  &lt; 2e-16 ***\nDESTIN_SZBKSZ03      -0.5531058  0.0055616   -99.451  &lt; 2e-16 ***\nDESTIN_SZBKSZ04      -0.0780893  0.0048278   -16.175  &lt; 2e-16 ***\nDESTIN_SZBKSZ05      -0.8894679  0.0057113  -155.739  &lt; 2e-16 ***\nDESTIN_SZBKSZ06      -0.8735113  0.0060936  -143.349  &lt; 2e-16 ***\nDESTIN_SZBKSZ07       0.2008727  0.0040341    49.794  &lt; 2e-16 ***\nDESTIN_SZBKSZ08      -1.1080882  0.0068759  -161.155  &lt; 2e-16 ***\nDESTIN_SZBKSZ09      -0.3079773  0.0049065   -62.769  &lt; 2e-16 ***\nDESTIN_SZBLSZ01      -0.5623349  0.0070249   -80.049  &lt; 2e-16 ***\nDESTIN_SZBLSZ02       0.4534757  0.0065229    69.520  &lt; 2e-16 ***\nDESTIN_SZBLSZ03       1.0664524  0.0074195   143.736  &lt; 2e-16 ***\nDESTIN_SZBLSZ04      -0.3209662  0.0131597   -24.390  &lt; 2e-16 ***\nDESTIN_SZBMSZ01      -0.2698406  0.0046919   -57.512  &lt; 2e-16 ***\nDESTIN_SZBMSZ02      -0.4965536  0.0048849  -101.651  &lt; 2e-16 ***\nDESTIN_SZBMSZ03      -0.7906801  0.0056859  -139.061  &lt; 2e-16 ***\nDESTIN_SZBMSZ04      -0.4284013  0.0048904   -87.601  &lt; 2e-16 ***\nDESTIN_SZBMSZ05      -0.4199940  0.0065983   -63.652  &lt; 2e-16 ***\nDESTIN_SZBMSZ06      -1.9147547  0.0123063  -155.591  &lt; 2e-16 ***\nDESTIN_SZBMSZ07      -0.2265615  0.0045297   -50.017  &lt; 2e-16 ***\nDESTIN_SZBMSZ08      -1.1619546  0.0062636  -185.509  &lt; 2e-16 ***\nDESTIN_SZBMSZ09      -2.6442887  0.0143545  -184.213  &lt; 2e-16 ***\nDESTIN_SZBMSZ10      -1.7643824  0.0089290  -197.602  &lt; 2e-16 ***\nDESTIN_SZBMSZ11      -1.5842892  0.0079304  -199.774  &lt; 2e-16 ***\nDESTIN_SZBMSZ12      -1.0167052  0.0077744  -130.776  &lt; 2e-16 ***\nDESTIN_SZBMSZ13      -0.4371753  0.0050839   -85.991  &lt; 2e-16 ***\nDESTIN_SZBMSZ14      -0.9577515  0.0076374  -125.403  &lt; 2e-16 ***\nDESTIN_SZBMSZ15      -1.0854212  0.0068710  -157.972  &lt; 2e-16 ***\nDESTIN_SZBMSZ16      -2.2953368  0.0107911  -212.707  &lt; 2e-16 ***\nDESTIN_SZBMSZ17      -2.6322277  0.0164773  -159.749  &lt; 2e-16 ***\nDESTIN_SZBPSZ01      -0.7101053  0.0054624  -129.998  &lt; 2e-16 ***\nDESTIN_SZBPSZ02      -1.5474896  0.0083287  -185.803  &lt; 2e-16 ***\nDESTIN_SZBPSZ03      -1.1611407  0.0075123  -154.565  &lt; 2e-16 ***\nDESTIN_SZBPSZ04      -0.7028609  0.0058078  -121.020  &lt; 2e-16 ***\nDESTIN_SZBPSZ05       0.2754829  0.0039525    69.699  &lt; 2e-16 ***\nDESTIN_SZBPSZ06      -1.0077024  0.0077403  -130.189  &lt; 2e-16 ***\nDESTIN_SZBPSZ07      -0.7413012  0.0077771   -95.319  &lt; 2e-16 ***\nDESTIN_SZBSSZ01      -0.3194362  0.0045804   -69.739  &lt; 2e-16 ***\nDESTIN_SZBSSZ02      -0.7820187  0.0051078  -153.102  &lt; 2e-16 ***\nDESTIN_SZBSSZ03       0.2033281  0.0038255    53.151  &lt; 2e-16 ***\nDESTIN_SZBTSZ01       0.0302978  0.0041594     7.284 3.23e-13 ***\nDESTIN_SZBTSZ02      -0.8721155  0.0065666  -132.810  &lt; 2e-16 ***\nDESTIN_SZBTSZ03      -0.2200433  0.0047958   -45.882  &lt; 2e-16 ***\nDESTIN_SZBTSZ04      -1.8039520  0.0103713  -173.938  &lt; 2e-16 ***\nDESTIN_SZBTSZ05      -0.8947709  0.0067421  -132.714  &lt; 2e-16 ***\nDESTIN_SZBTSZ06      -0.8364293  0.0059757  -139.972  &lt; 2e-16 ***\nDESTIN_SZBTSZ07      -2.0772780  0.0105603  -196.705  &lt; 2e-16 ***\nDESTIN_SZBTSZ08      -1.3236499  0.0086834  -152.434  &lt; 2e-16 ***\nDESTIN_SZCBSZ01      -4.8301319  0.3162418   -15.274  &lt; 2e-16 ***\nDESTIN_SZCCSZ01      -1.0207882  0.0080154  -127.353  &lt; 2e-16 ***\nDESTIN_SZCHSZ01      -1.0389616  0.0095291  -109.030  &lt; 2e-16 ***\nDESTIN_SZCHSZ02       0.0656864  0.0052279    12.565  &lt; 2e-16 ***\nDESTIN_SZCHSZ03       1.3924466  0.0039118   355.956  &lt; 2e-16 ***\nDESTIN_SZCKSZ01      -0.2127434  0.0047578   -44.715  &lt; 2e-16 ***\nDESTIN_SZCKSZ02      -0.5167632  0.0051559  -100.227  &lt; 2e-16 ***\nDESTIN_SZCKSZ03       0.5383421  0.0038672   139.207  &lt; 2e-16 ***\nDESTIN_SZCKSZ04      -0.7282445  0.0059886  -121.605  &lt; 2e-16 ***\nDESTIN_SZCKSZ05      -0.6074140  0.0065447   -92.810  &lt; 2e-16 ***\nDESTIN_SZCKSZ06       0.4961340  0.0045254   109.634  &lt; 2e-16 ***\nDESTIN_SZCLSZ01       0.3122676  0.0047425    65.845  &lt; 2e-16 ***\nDESTIN_SZCLSZ02      -2.3030933  0.0133374  -172.679  &lt; 2e-16 ***\nDESTIN_SZCLSZ03      -1.0832335  0.0076555  -141.497  &lt; 2e-16 ***\nDESTIN_SZCLSZ04      -0.1319656  0.0044889   -29.398  &lt; 2e-16 ***\nDESTIN_SZCLSZ05      -1.3767449  0.0084080  -163.742  &lt; 2e-16 ***\nDESTIN_SZCLSZ06       0.1588305  0.0040207    39.504  &lt; 2e-16 ***\nDESTIN_SZCLSZ07      -0.6651443  0.0052627  -126.389  &lt; 2e-16 ***\nDESTIN_SZCLSZ08      -0.4300984  0.0057224   -75.161  &lt; 2e-16 ***\nDESTIN_SZCLSZ09       0.3632491  0.0063773    56.960  &lt; 2e-16 ***\nDESTIN_SZDTSZ02      -2.8860959  0.0348379   -82.844  &lt; 2e-16 ***\nDESTIN_SZDTSZ03      -1.4155739  0.0144113   -98.227  &lt; 2e-16 ***\nDESTIN_SZDTSZ13      -2.2197108  0.0161427  -137.505  &lt; 2e-16 ***\nDESTIN_SZGLSZ01       0.0360456  0.0051226     7.037 1.97e-12 ***\nDESTIN_SZGLSZ02      -0.2944546  0.0046197   -63.739  &lt; 2e-16 ***\nDESTIN_SZGLSZ03       0.3996641  0.0038387   104.115  &lt; 2e-16 ***\nDESTIN_SZGLSZ04       0.3387134  0.0038028    89.071  &lt; 2e-16 ***\nDESTIN_SZGLSZ05       0.1935512  0.0038854    49.816  &lt; 2e-16 ***\nDESTIN_SZHGSZ01       0.2886226  0.0038829    74.332  &lt; 2e-16 ***\nDESTIN_SZHGSZ02      -0.6115672  0.0051189  -119.473  &lt; 2e-16 ***\nDESTIN_SZHGSZ03      -1.0528824  0.0061020  -172.547  &lt; 2e-16 ***\nDESTIN_SZHGSZ04      -0.2363236  0.0043617   -54.182  &lt; 2e-16 ***\nDESTIN_SZHGSZ05      -0.3003303  0.0044868   -66.936  &lt; 2e-16 ***\nDESTIN_SZHGSZ06      -0.8190218  0.0054086  -151.430  &lt; 2e-16 ***\nDESTIN_SZHGSZ07       0.1973306  0.0040340    48.916  &lt; 2e-16 ***\nDESTIN_SZHGSZ08      -0.4434470  0.0048969   -90.556  &lt; 2e-16 ***\nDESTIN_SZHGSZ09       0.0495733  0.0051346     9.655  &lt; 2e-16 ***\nDESTIN_SZHGSZ10      -2.9142272  0.0262066  -111.202  &lt; 2e-16 ***\nDESTIN_SZJESZ01      -0.1274822  0.0048238   -26.428  &lt; 2e-16 ***\nDESTIN_SZJESZ02      -0.5332323  0.0051518  -103.505  &lt; 2e-16 ***\nDESTIN_SZJESZ03      -0.6434751  0.0056630  -113.627  &lt; 2e-16 ***\nDESTIN_SZJESZ04      -0.1952696  0.0065530   -29.798  &lt; 2e-16 ***\nDESTIN_SZJESZ05      -1.0016142  0.0097677  -102.543  &lt; 2e-16 ***\nDESTIN_SZJESZ06       0.4183634  0.0040647   102.925  &lt; 2e-16 ***\nDESTIN_SZJESZ07      -1.1907296  0.0081559  -145.997  &lt; 2e-16 ***\nDESTIN_SZJESZ08      -0.6819949  0.0078081   -87.345  &lt; 2e-16 ***\nDESTIN_SZJESZ09      -0.3842693  0.0053974   -71.195  &lt; 2e-16 ***\nDESTIN_SZJESZ10       0.6233846  0.0069391    89.836  &lt; 2e-16 ***\nDESTIN_SZJESZ11       0.8588253  0.0065842   130.438  &lt; 2e-16 ***\nDESTIN_SZJWSZ01      -0.5743273  0.0064564   -88.954  &lt; 2e-16 ***\nDESTIN_SZJWSZ02      -0.3954232  0.0051665   -76.535  &lt; 2e-16 ***\nDESTIN_SZJWSZ03       0.5694389  0.0039307   144.871  &lt; 2e-16 ***\nDESTIN_SZJWSZ04       0.8606902  0.0037226   231.205  &lt; 2e-16 ***\nDESTIN_SZJWSZ05      -0.2823924  0.0060826   -46.426  &lt; 2e-16 ***\nDESTIN_SZJWSZ06       0.2352724  0.0054595    43.094  &lt; 2e-16 ***\nDESTIN_SZJWSZ07      -1.5375403  0.0280040   -54.904  &lt; 2e-16 ***\nDESTIN_SZJWSZ08       0.3147094  0.0044680    70.437  &lt; 2e-16 ***\nDESTIN_SZJWSZ09       1.2720518  0.0034024   373.865  &lt; 2e-16 ***\nDESTIN_SZKLSZ01      -0.6242607  0.0051546  -121.107  &lt; 2e-16 ***\nDESTIN_SZKLSZ02      -0.7374046  0.0057144  -129.044  &lt; 2e-16 ***\nDESTIN_SZKLSZ03      -1.3284719  0.0065173  -203.839  &lt; 2e-16 ***\nDESTIN_SZKLSZ04      -1.7896899  0.0087381  -204.814  &lt; 2e-16 ***\nDESTIN_SZKLSZ05      -0.9281552  0.0071071  -130.596  &lt; 2e-16 ***\nDESTIN_SZKLSZ06      -2.4472009  0.0362066   -67.590  &lt; 2e-16 ***\nDESTIN_SZKLSZ07      -1.1154762  0.0065760  -169.627  &lt; 2e-16 ***\nDESTIN_SZKLSZ08      -0.5706917  0.0050918  -112.080  &lt; 2e-16 ***\nDESTIN_SZLKSZ01      -1.6795064  0.0204169   -82.260  &lt; 2e-16 ***\nDESTIN_SZMDSZ01      -1.5536339  0.0198358   -78.325  &lt; 2e-16 ***\nDESTIN_SZMDSZ02      -1.2079509  0.0111348  -108.484  &lt; 2e-16 ***\nDESTIN_SZMDSZ03      -2.9726073  0.0250846  -118.503  &lt; 2e-16 ***\nDESTIN_SZMPSZ01      -1.1488342  0.0077130  -148.948  &lt; 2e-16 ***\nDESTIN_SZMPSZ02      -0.8985650  0.0060322  -148.961  &lt; 2e-16 ***\nDESTIN_SZMPSZ03      -0.1802688  0.0046394   -38.856  &lt; 2e-16 ***\nDESTIN_SZMUSZ02      -2.2856058  0.0199642  -114.485  &lt; 2e-16 ***\nDESTIN_SZNTSZ01      -3.5819854  0.0447754   -79.999  &lt; 2e-16 ***\nDESTIN_SZNTSZ02      -1.8970904  0.0108739  -174.462  &lt; 2e-16 ***\nDESTIN_SZNTSZ03      -1.1453158  0.0076148  -150.406  &lt; 2e-16 ***\nDESTIN_SZNTSZ05      -1.8600812  0.0249543   -74.539  &lt; 2e-16 ***\nDESTIN_SZNTSZ06      -3.0005362  0.0428602   -70.007  &lt; 2e-16 ***\nDESTIN_SZNVSZ01      -0.3540976  0.0044294   -79.943  &lt; 2e-16 ***\nDESTIN_SZNVSZ02      -0.6354596  0.0052782  -120.393  &lt; 2e-16 ***\nDESTIN_SZNVSZ03      -0.6926039  0.0054248  -127.673  &lt; 2e-16 ***\nDESTIN_SZNVSZ04      -2.2171459  0.0106997  -207.216  &lt; 2e-16 ***\nDESTIN_SZNVSZ05      -1.8175824  0.0089062  -204.081  &lt; 2e-16 ***\nDESTIN_SZPGSZ01      -1.6121145  0.0153049  -105.333  &lt; 2e-16 ***\nDESTIN_SZPGSZ02      -0.9704812  0.0067275  -144.257  &lt; 2e-16 ***\nDESTIN_SZPGSZ03       0.2711837  0.0040244    67.385  &lt; 2e-16 ***\nDESTIN_SZPGSZ04      -0.2060179  0.0044926   -45.857  &lt; 2e-16 ***\nDESTIN_SZPGSZ05      -0.9938937  0.0070849  -140.283  &lt; 2e-16 ***\nDESTIN_SZPLSZ01      -0.3008324  0.0068281   -44.058  &lt; 2e-16 ***\nDESTIN_SZPLSZ02      -1.4752107  0.0131164  -112.471  &lt; 2e-16 ***\nDESTIN_SZPLSZ03      -0.1959443  0.0095866   -20.439  &lt; 2e-16 ***\nDESTIN_SZPLSZ04      -0.2883047  0.0093371   -30.877  &lt; 2e-16 ***\nDESTIN_SZPLSZ05      -0.8039780  0.0116854   -68.802  &lt; 2e-16 ***\nDESTIN_SZPNSZ01       0.9421407  0.0050047   188.249  &lt; 2e-16 ***\nDESTIN_SZPNSZ02       1.3639714  0.0064548   211.310  &lt; 2e-16 ***\nDESTIN_SZPNSZ03       0.5711018  0.0077106    74.067  &lt; 2e-16 ***\nDESTIN_SZPNSZ04       1.3960432  0.0075778   184.229  &lt; 2e-16 ***\nDESTIN_SZPNSZ05       0.4474974  0.0115933    38.600  &lt; 2e-16 ***\nDESTIN_SZPRSZ01      -1.1291886  0.0084669  -133.366  &lt; 2e-16 ***\nDESTIN_SZPRSZ02      -0.3162629  0.0049878   -63.407  &lt; 2e-16 ***\nDESTIN_SZPRSZ03       0.4878487  0.0038516   126.660  &lt; 2e-16 ***\nDESTIN_SZPRSZ04      -0.7406307  0.0079063   -93.676  &lt; 2e-16 ***\nDESTIN_SZPRSZ05      -0.0733002  0.0044984   -16.295  &lt; 2e-16 ***\nDESTIN_SZPRSZ06       0.2616531  0.0052026    50.293  &lt; 2e-16 ***\nDESTIN_SZPRSZ07      -1.4589011  0.0117302  -124.372  &lt; 2e-16 ***\nDESTIN_SZPRSZ08      -0.8621991  0.0064876  -132.901  &lt; 2e-16 ***\nDESTIN_SZQTSZ01      -1.1965821  0.0085396  -140.121  &lt; 2e-16 ***\nDESTIN_SZQTSZ02      -1.4263894  0.0073430  -194.251  &lt; 2e-16 ***\nDESTIN_SZQTSZ03      -0.7982677  0.0064063  -124.606  &lt; 2e-16 ***\nDESTIN_SZQTSZ04      -0.9187054  0.0065358  -140.565  &lt; 2e-16 ***\nDESTIN_SZQTSZ05      -0.8844581  0.0058478  -151.245  &lt; 2e-16 ***\nDESTIN_SZQTSZ06      -1.1629136  0.0063565  -182.948  &lt; 2e-16 ***\nDESTIN_SZQTSZ07      -1.4908922  0.0108734  -137.113  &lt; 2e-16 ***\nDESTIN_SZQTSZ08      -0.0247369  0.0047985    -5.155 2.53e-07 ***\nDESTIN_SZQTSZ09      -0.5510822  0.0057381   -96.039  &lt; 2e-16 ***\nDESTIN_SZQTSZ10      -0.6181793  0.0054209  -114.037  &lt; 2e-16 ***\nDESTIN_SZQTSZ11      -0.4072294  0.0054692   -74.458  &lt; 2e-16 ***\nDESTIN_SZQTSZ12      -0.5688076  0.0070694   -80.460  &lt; 2e-16 ***\nDESTIN_SZQTSZ13      -0.1613461  0.0051342   -31.426  &lt; 2e-16 ***\nDESTIN_SZQTSZ14      -0.4899105  0.0062248   -78.703  &lt; 2e-16 ***\nDESTIN_SZQTSZ15      -0.1580039  0.0073137   -21.604  &lt; 2e-16 ***\nDESTIN_SZRCSZ01      -0.5530825  0.0071801   -77.030  &lt; 2e-16 ***\nDESTIN_SZRCSZ06      -2.0318919  0.0188791  -107.627  &lt; 2e-16 ***\nDESTIN_SZRVSZ01      -2.5041818  0.0162325  -154.269  &lt; 2e-16 ***\nDESTIN_SZRVSZ02      -3.1631541  0.0326142   -96.987  &lt; 2e-16 ***\nDESTIN_SZRVSZ03      -2.4702654  0.0135081  -182.872  &lt; 2e-16 ***\nDESTIN_SZRVSZ04      -1.8004502  0.0154976  -116.176  &lt; 2e-16 ***\nDESTIN_SZRVSZ05      -2.9498980  0.0256329  -115.083  &lt; 2e-16 ***\nDESTIN_SZSBSZ01      -0.2407682  0.0060596   -39.733  &lt; 2e-16 ***\nDESTIN_SZSBSZ02      -1.1716104  0.0076342  -153.469  &lt; 2e-16 ***\nDESTIN_SZSBSZ03       0.5025478  0.0041456   121.224  &lt; 2e-16 ***\nDESTIN_SZSBSZ04      -0.0336083  0.0051433    -6.534 6.39e-11 ***\nDESTIN_SZSBSZ05      -1.0065693  0.0071975  -139.849  &lt; 2e-16 ***\nDESTIN_SZSBSZ06      -2.3640414  0.0221608  -106.677  &lt; 2e-16 ***\nDESTIN_SZSBSZ07      -1.0042413  0.0181727   -55.261  &lt; 2e-16 ***\nDESTIN_SZSBSZ08       1.1356376  0.0051662   219.821  &lt; 2e-16 ***\nDESTIN_SZSBSZ09       0.6729359  0.0048386   139.076  &lt; 2e-16 ***\nDESTIN_SZSESZ02      -0.3864535  0.0046690   -82.770  &lt; 2e-16 ***\nDESTIN_SZSESZ03       0.4365473  0.0036988   118.024  &lt; 2e-16 ***\nDESTIN_SZSESZ04      -0.7772131  0.0054287  -143.166  &lt; 2e-16 ***\nDESTIN_SZSESZ05      -0.4159594  0.0047537   -87.502  &lt; 2e-16 ***\nDESTIN_SZSESZ06      -0.7197420  0.0057104  -126.040  &lt; 2e-16 ***\nDESTIN_SZSESZ07      -3.0503330  0.0226808  -134.490  &lt; 2e-16 ***\nDESTIN_SZSGSZ01      -0.5759283  0.0058294   -98.798  &lt; 2e-16 ***\nDESTIN_SZSGSZ02      -0.1161709  0.0051649   -22.492  &lt; 2e-16 ***\nDESTIN_SZSGSZ03      -0.4106263  0.0047157   -87.077  &lt; 2e-16 ***\nDESTIN_SZSGSZ04      -0.3163870  0.0046868   -67.506  &lt; 2e-16 ***\nDESTIN_SZSGSZ05      -2.2280281  0.0097909  -227.562  &lt; 2e-16 ***\nDESTIN_SZSGSZ06       0.3187814  0.0037949    84.002  &lt; 2e-16 ***\nDESTIN_SZSGSZ07      -0.5874335  0.0051371  -114.352  &lt; 2e-16 ***\nDESTIN_SZSISZ01      -1.2917491  0.0257804   -50.106  &lt; 2e-16 ***\nDESTIN_SZSKSZ01      -0.1088797  0.0066893   -16.277  &lt; 2e-16 ***\nDESTIN_SZSKSZ02       0.9106755  0.0050278   181.128  &lt; 2e-16 ***\nDESTIN_SZSKSZ03      -0.1543859  0.0059159   -26.097  &lt; 2e-16 ***\nDESTIN_SZSKSZ04      -0.7057575  0.0139698   -50.520  &lt; 2e-16 ***\nDESTIN_SZSKSZ05      -0.0121301  0.0104904    -1.156  0.24755    \nDESTIN_SZSLSZ01      -0.6832113  0.0083380   -81.939  &lt; 2e-16 ***\nDESTIN_SZSLSZ04      -0.8877801  0.0070348  -126.199  &lt; 2e-16 ***\nDESTIN_SZSRSZ01      -2.1769985  0.0127231  -171.106  &lt; 2e-16 ***\nDESTIN_SZTHSZ01      -2.9236668  0.0366843   -79.698  &lt; 2e-16 ***\nDESTIN_SZTHSZ03      -2.2436488  0.0250852   -89.441  &lt; 2e-16 ***\nDESTIN_SZTHSZ04      -2.1614123  0.0213692  -101.146  &lt; 2e-16 ***\nDESTIN_SZTHSZ06      -1.5413261  0.0150039  -102.728  &lt; 2e-16 ***\nDESTIN_SZTMSZ01      -0.0352953  0.0055152    -6.400 1.56e-10 ***\nDESTIN_SZTMSZ02       1.5046218  0.0032643   460.933  &lt; 2e-16 ***\nDESTIN_SZTMSZ03       0.6299992  0.0037167   169.506  &lt; 2e-16 ***\nDESTIN_SZTMSZ04       0.8101842  0.0037611   215.414  &lt; 2e-16 ***\nDESTIN_SZTMSZ05       0.4133985  0.0051282    80.613  &lt; 2e-16 ***\nDESTIN_SZTNSZ01      -1.2547855  0.0066985  -187.324  &lt; 2e-16 ***\nDESTIN_SZTNSZ02      -1.9449320  0.0096551  -201.441  &lt; 2e-16 ***\nDESTIN_SZTNSZ03      -2.0073616  0.0115726  -173.458  &lt; 2e-16 ***\nDESTIN_SZTNSZ04      -1.2287484  0.0068502  -179.374  &lt; 2e-16 ***\nDESTIN_SZTPSZ01      -0.6386471  0.0055775  -114.505  &lt; 2e-16 ***\nDESTIN_SZTPSZ02       0.1716304  0.0037260    46.062  &lt; 2e-16 ***\nDESTIN_SZTPSZ03      -0.4174415  0.0054889   -76.052  &lt; 2e-16 ***\nDESTIN_SZTPSZ04      -1.4950882  0.0071592  -208.835  &lt; 2e-16 ***\nDESTIN_SZTPSZ05      -0.8842788  0.0056754  -155.809  &lt; 2e-16 ***\nDESTIN_SZTPSZ06      -0.1789661  0.0062669   -28.558  &lt; 2e-16 ***\nDESTIN_SZTPSZ07      -1.9286389  0.0116567  -165.454  &lt; 2e-16 ***\nDESTIN_SZTPSZ08      -1.4130347  0.0085538  -165.195  &lt; 2e-16 ***\nDESTIN_SZTPSZ09      -0.4981579  0.0059404   -83.860  &lt; 2e-16 ***\nDESTIN_SZTPSZ10      -1.1404224  0.0084489  -134.980  &lt; 2e-16 ***\nDESTIN_SZTPSZ11      -0.3973636  0.0050912   -78.049  &lt; 2e-16 ***\nDESTIN_SZTPSZ12      -0.8099589  0.0061327  -132.072  &lt; 2e-16 ***\nDESTIN_SZTSSZ01      -0.8455348  0.0208533   -40.547  &lt; 2e-16 ***\nDESTIN_SZTSSZ02       0.5462129  0.0093784    58.242  &lt; 2e-16 ***\nDESTIN_SZTSSZ03       1.4128184  0.0064443   219.237  &lt; 2e-16 ***\nDESTIN_SZTSSZ04       1.2433626  0.0067892   183.138  &lt; 2e-16 ***\nDESTIN_SZTSSZ05       1.3979287  0.0073701   189.675  &lt; 2e-16 ***\nDESTIN_SZTSSZ06       0.1654437  0.0137913    11.996  &lt; 2e-16 ***\nDESTIN_SZWCSZ01       1.3237346  0.0045380   291.698  &lt; 2e-16 ***\nDESTIN_SZWCSZ02      -0.7071355  0.0122995   -57.493  &lt; 2e-16 ***\nDESTIN_SZWCSZ03      -2.2322890  0.0325130   -68.658  &lt; 2e-16 ***\nDESTIN_SZWDSZ01       1.3833409  0.0034823   397.248  &lt; 2e-16 ***\nDESTIN_SZWDSZ02      -0.4933824  0.0055232   -89.330  &lt; 2e-16 ***\nDESTIN_SZWDSZ03       1.0032194  0.0036331   276.136  &lt; 2e-16 ***\nDESTIN_SZWDSZ04      -0.4482317  0.0058446   -76.692  &lt; 2e-16 ***\nDESTIN_SZWDSZ05      -0.1842471  0.0053992   -34.125  &lt; 2e-16 ***\nDESTIN_SZWDSZ06       0.4160272  0.0040354   103.093  &lt; 2e-16 ***\nDESTIN_SZWDSZ07       0.4464085  0.0061783    72.255  &lt; 2e-16 ***\nDESTIN_SZWDSZ08       0.4097875  0.0060966    67.216  &lt; 2e-16 ***\nDESTIN_SZWDSZ09       0.5609089  0.0044866   125.018  &lt; 2e-16 ***\nDESTIN_SZYSSZ01       1.0631470  0.0038249   277.952  &lt; 2e-16 ***\nDESTIN_SZYSSZ02       0.1815975  0.0048221    37.660  &lt; 2e-16 ***\nDESTIN_SZYSSZ03      -0.1701590  0.0051388   -33.113  &lt; 2e-16 ***\nDESTIN_SZYSSZ04      -0.0488067  0.0048687   -10.025  &lt; 2e-16 ***\nDESTIN_SZYSSZ05      -1.6356303  0.0100323  -163.037  &lt; 2e-16 ***\nDESTIN_SZYSSZ06      -1.8593634  0.0098619  -188.541  &lt; 2e-16 ***\nDESTIN_SZYSSZ07      -1.0655380  0.0111530   -95.538  &lt; 2e-16 ***\nDESTIN_SZYSSZ08       0.5479624  0.0039557   138.525  &lt; 2e-16 ***\nDESTIN_SZYSSZ09       0.3662081  0.0038906    94.127  &lt; 2e-16 ***\nlog(ORIGIN_AGE7_12)   0.1312205  0.0007252   180.949  &lt; 2e-16 ***\nlog(ORIGIN_AGE13_24)  0.6245430  0.0009598   650.677  &lt; 2e-16 ***\nlog(ORIGIN_AGE25_64) -0.4273627  0.0009266  -461.217  &lt; 2e-16 ***\nlog(dist)            -0.6917367  0.0001295 -5343.066  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 60796037  on 14733  degrees of freedom\nResidual deviance: 25692617  on 14450  degrees of freedom\nAIC: 25784812\n\nNumber of Fisher Scoring iterations: 7\n\n\nThe R-squared value of the destination-constrained SIM is 0.513.\n\nCalcRSquared(decSIM$data$TRIPS, decSIM$fitted.values)\n\n[1] 0.5133868"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#doubly-constrained-sim",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#doubly-constrained-sim",
    "title": "Hands-on Ex 9B",
    "section": "3.7 Doubly-constrained SIM",
    "text": "3.7 Doubly-constrained SIM\nWe calibrate a doubly-constrained SIM as follows:\n\ndbcSIM &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ + \n                DESTIN_SZ + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(dbcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(dist), family = poisson(link = \"log\"), \n    data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                  Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)     12.4165310  0.0043949  2825.242  &lt; 2e-16 ***\nORIGIN_SZAMSZ02  0.9496891  0.0045740   207.630  &lt; 2e-16 ***\nORIGIN_SZAMSZ03  0.5519174  0.0046672   118.253  &lt; 2e-16 ***\nORIGIN_SZAMSZ04  0.1028140  0.0052468    19.596  &lt; 2e-16 ***\nORIGIN_SZAMSZ05  0.0822549  0.0058663    14.022  &lt; 2e-16 ***\nORIGIN_SZAMSZ06  0.6617809  0.0052580   125.861  &lt; 2e-16 ***\nORIGIN_SZAMSZ07 -0.9508298  0.0097681   -97.340  &lt; 2e-16 ***\nORIGIN_SZAMSZ08 -0.7271779  0.0090946   -79.958  &lt; 2e-16 ***\nORIGIN_SZAMSZ09  0.4896781  0.0055203    88.704  &lt; 2e-16 ***\nORIGIN_SZAMSZ10  0.4819428  0.0048175   100.040  &lt; 2e-16 ***\nORIGIN_SZAMSZ11 -1.7719841  0.0130695  -135.582  &lt; 2e-16 ***\nORIGIN_SZAMSZ12 -1.7679107  0.0108777  -162.526  &lt; 2e-16 ***\nORIGIN_SZBDSZ01  0.8314812  0.0045187   184.010  &lt; 2e-16 ***\nORIGIN_SZBDSZ02  0.4305836  0.0052535    81.961  &lt; 2e-16 ***\nORIGIN_SZBDSZ03  0.8009370  0.0046384   172.676  &lt; 2e-16 ***\nORIGIN_SZBDSZ04  1.4562985  0.0040456   359.971  &lt; 2e-16 ***\nORIGIN_SZBDSZ05  0.4501939  0.0046960    95.867  &lt; 2e-16 ***\nORIGIN_SZBDSZ06  0.7745026  0.0047424   163.314  &lt; 2e-16 ***\nORIGIN_SZBDSZ07 -1.1784123  0.0098105  -120.117  &lt; 2e-16 ***\nORIGIN_SZBDSZ08 -0.9830996  0.0091135  -107.873  &lt; 2e-16 ***\nORIGIN_SZBKSZ01 -0.3042966  0.0067086   -45.359  &lt; 2e-16 ***\nORIGIN_SZBKSZ02  0.4801541  0.0054160    88.655  &lt; 2e-16 ***\nORIGIN_SZBKSZ03  0.7823931  0.0052007   150.440  &lt; 2e-16 ***\nORIGIN_SZBKSZ04 -0.1292545  0.0061735   -20.937  &lt; 2e-16 ***\nORIGIN_SZBKSZ05 -0.0258584  0.0060192    -4.296 1.74e-05 ***\nORIGIN_SZBKSZ06  0.1994719  0.0061206    32.590  &lt; 2e-16 ***\nORIGIN_SZBKSZ07  0.7434860  0.0046598   159.553  &lt; 2e-16 ***\nORIGIN_SZBKSZ08  0.1625007  0.0055219    29.428  &lt; 2e-16 ***\nORIGIN_SZBKSZ09 -0.0864293  0.0059533   -14.518  &lt; 2e-16 ***\nORIGIN_SZBLSZ01 -2.1022485  0.0150316  -139.855  &lt; 2e-16 ***\nORIGIN_SZBLSZ02 -2.9460181  0.0195760  -150.491  &lt; 2e-16 ***\nORIGIN_SZBLSZ03 -4.9412872  0.0398540  -123.985  &lt; 2e-16 ***\nORIGIN_SZBLSZ04 -2.8143593  0.0239209  -117.653  &lt; 2e-16 ***\nORIGIN_SZBMSZ01 -0.0264561  0.0053639    -4.932 8.13e-07 ***\nORIGIN_SZBMSZ02 -0.8656513  0.0068511  -126.353  &lt; 2e-16 ***\nORIGIN_SZBMSZ03 -0.1723467  0.0059613   -28.911  &lt; 2e-16 ***\nORIGIN_SZBMSZ04  0.2169844  0.0053578    40.499  &lt; 2e-16 ***\nORIGIN_SZBMSZ05 -2.0252956  0.0126107  -160.602  &lt; 2e-16 ***\nORIGIN_SZBMSZ06 -1.7642018  0.0163931  -107.619  &lt; 2e-16 ***\nORIGIN_SZBMSZ07 -0.3271629  0.0058137   -56.274  &lt; 2e-16 ***\nORIGIN_SZBMSZ08 -0.2533255  0.0059335   -42.694  &lt; 2e-16 ***\nORIGIN_SZBMSZ09 -0.7712635  0.0087939   -87.704  &lt; 2e-16 ***\nORIGIN_SZBMSZ10 -1.0098048  0.0092519  -109.145  &lt; 2e-16 ***\nORIGIN_SZBMSZ11 -0.3816187  0.0067302   -56.702  &lt; 2e-16 ***\nORIGIN_SZBMSZ12 -0.6666616  0.0095680   -69.676  &lt; 2e-16 ***\nORIGIN_SZBMSZ13 -0.0076108  0.0059040    -1.289  0.19737    \nORIGIN_SZBMSZ14 -0.1682476  0.0069391   -24.246  &lt; 2e-16 ***\nORIGIN_SZBMSZ15  0.0904585  0.0062822    14.399  &lt; 2e-16 ***\nORIGIN_SZBMSZ16 -1.1808741  0.0092258  -127.997  &lt; 2e-16 ***\nORIGIN_SZBMSZ17 -1.7189127  0.0158408  -108.512  &lt; 2e-16 ***\nORIGIN_SZBPSZ01  0.4294645  0.0058051    73.980  &lt; 2e-16 ***\nORIGIN_SZBPSZ02  0.5028906  0.0068169    73.771  &lt; 2e-16 ***\nORIGIN_SZBPSZ03  0.6656178  0.0066126   100.658  &lt; 2e-16 ***\nORIGIN_SZBPSZ04  0.5203612  0.0053224    97.769  &lt; 2e-16 ***\nORIGIN_SZBPSZ05  0.5377769  0.0047907   112.256  &lt; 2e-16 ***\nORIGIN_SZBPSZ06 -1.2327809  0.0094950  -129.835  &lt; 2e-16 ***\nORIGIN_SZBPSZ07 -0.9035255  0.0088739  -101.818  &lt; 2e-16 ***\nORIGIN_SZBSSZ01  0.1210027  0.0053990    22.412  &lt; 2e-16 ***\nORIGIN_SZBSSZ02  0.4618449  0.0048641    94.951  &lt; 2e-16 ***\nORIGIN_SZBSSZ03  0.2160739  0.0047835    45.170  &lt; 2e-16 ***\nORIGIN_SZBTSZ01 -0.1108042  0.0055599   -19.929  &lt; 2e-16 ***\nORIGIN_SZBTSZ02 -0.8911221  0.0079213  -112.498  &lt; 2e-16 ***\nORIGIN_SZBTSZ03 -0.2203980  0.0059325   -37.151  &lt; 2e-16 ***\nORIGIN_SZBTSZ04 -0.6427946  0.0105438   -60.964  &lt; 2e-16 ***\nORIGIN_SZBTSZ05 -1.4662312  0.0111784  -131.166  &lt; 2e-16 ***\nORIGIN_SZBTSZ06 -0.6105884  0.0073456   -83.123  &lt; 2e-16 ***\nORIGIN_SZBTSZ07 -1.9041317  0.0132781  -143.404  &lt; 2e-16 ***\nORIGIN_SZBTSZ08 -1.0627939  0.0095982  -110.728  &lt; 2e-16 ***\nORIGIN_SZCBSZ01 -2.9365941  0.0548632   -53.526  &lt; 2e-16 ***\nORIGIN_SZCCSZ01 -1.5313555  0.0134599  -113.772  &lt; 2e-16 ***\nORIGIN_SZCHSZ01 -1.2034494  0.0119468  -100.734  &lt; 2e-16 ***\nORIGIN_SZCHSZ02 -0.8299415  0.0081984  -101.232  &lt; 2e-16 ***\nORIGIN_SZCHSZ03 -0.5143946  0.0061944   -83.042  &lt; 2e-16 ***\nORIGIN_SZCKSZ01  0.2372583  0.0053612    44.255  &lt; 2e-16 ***\nORIGIN_SZCKSZ02  0.9124836  0.0054472   167.515  &lt; 2e-16 ***\nORIGIN_SZCKSZ03  0.7237808  0.0048401   149.539  &lt; 2e-16 ***\nORIGIN_SZCKSZ04  1.6884022  0.0050169   336.540  &lt; 2e-16 ***\nORIGIN_SZCKSZ05  1.3932005  0.0062346   223.464  &lt; 2e-16 ***\nORIGIN_SZCKSZ06  1.0670053  0.0066112   161.394  &lt; 2e-16 ***\nORIGIN_SZCLSZ01 -0.8602837  0.0079240  -108.567  &lt; 2e-16 ***\nORIGIN_SZCLSZ02 -1.3853421  0.0137444  -100.793  &lt; 2e-16 ***\nORIGIN_SZCLSZ03 -0.8582608  0.0081177  -105.727  &lt; 2e-16 ***\nORIGIN_SZCLSZ04  0.7836027  0.0046427   168.782  &lt; 2e-16 ***\nORIGIN_SZCLSZ05 -1.8121756  0.0148960  -121.655  &lt; 2e-16 ***\nORIGIN_SZCLSZ06  0.8296870  0.0043909   188.955  &lt; 2e-16 ***\nORIGIN_SZCLSZ07 -0.2325219  0.0057432   -40.487  &lt; 2e-16 ***\nORIGIN_SZCLSZ08  0.2714336  0.0062625    43.342  &lt; 2e-16 ***\nORIGIN_SZCLSZ09 -2.2223744  0.0160946  -138.082  &lt; 2e-16 ***\nORIGIN_SZDTSZ02 -4.0704970  0.0834192   -48.796  &lt; 2e-16 ***\nORIGIN_SZDTSZ03 -3.4529031  0.0738295   -46.769  &lt; 2e-16 ***\nORIGIN_SZDTSZ13 -2.8301983  0.0313085   -90.397  &lt; 2e-16 ***\nORIGIN_SZGLSZ01 -1.4674986  0.0093137  -157.563  &lt; 2e-16 ***\nORIGIN_SZGLSZ02  0.2749369  0.0050051    54.931  &lt; 2e-16 ***\nORIGIN_SZGLSZ03  0.0781954  0.0049748    15.718  &lt; 2e-16 ***\nORIGIN_SZGLSZ04  0.8167797  0.0043260   188.808  &lt; 2e-16 ***\nORIGIN_SZGLSZ05  0.5277509  0.0044879   117.595  &lt; 2e-16 ***\nORIGIN_SZHGSZ01  0.2323885  0.0048555    47.861  &lt; 2e-16 ***\nORIGIN_SZHGSZ02  0.5707182  0.0048256   118.268  &lt; 2e-16 ***\nORIGIN_SZHGSZ03  0.4231170  0.0052149    81.136  &lt; 2e-16 ***\nORIGIN_SZHGSZ04  0.9341168  0.0044128   211.681  &lt; 2e-16 ***\nORIGIN_SZHGSZ05  1.2192790  0.0043790   278.437  &lt; 2e-16 ***\nORIGIN_SZHGSZ06  0.0490041  0.0054961     8.916  &lt; 2e-16 ***\nORIGIN_SZHGSZ07  0.6337041  0.0045735   138.559  &lt; 2e-16 ***\nORIGIN_SZHGSZ08  0.0312612  0.0054684     5.717 1.09e-08 ***\nORIGIN_SZHGSZ09 -0.6985397  0.0071800   -97.289  &lt; 2e-16 ***\nORIGIN_SZHGSZ10 -2.9958967  0.0422303   -70.942  &lt; 2e-16 ***\nORIGIN_SZJESZ01  0.4363431  0.0051329    85.010  &lt; 2e-16 ***\nORIGIN_SZJESZ02  0.3460900  0.0051372    67.370  &lt; 2e-16 ***\nORIGIN_SZJESZ03  0.2928005  0.0055108    53.132  &lt; 2e-16 ***\nORIGIN_SZJESZ04 -1.1924298  0.0093540  -127.478  &lt; 2e-16 ***\nORIGIN_SZJESZ05 -2.0178136  0.0139479  -144.668  &lt; 2e-16 ***\nORIGIN_SZJESZ06  0.1637633  0.0050685    32.310  &lt; 2e-16 ***\nORIGIN_SZJESZ07 -1.8227460  0.0119383  -152.680  &lt; 2e-16 ***\nORIGIN_SZJESZ08 -1.1556281  0.0117870   -98.043  &lt; 2e-16 ***\nORIGIN_SZJESZ09  0.4766229  0.0052813    90.248  &lt; 2e-16 ***\nORIGIN_SZJESZ10 -2.6868992  0.0186864  -143.789  &lt; 2e-16 ***\nORIGIN_SZJESZ11 -3.0618150  0.0199755  -153.278  &lt; 2e-16 ***\nORIGIN_SZJWSZ01  0.4417418  0.0068611    64.383  &lt; 2e-16 ***\nORIGIN_SZJWSZ02  0.9738087  0.0047905   203.281  &lt; 2e-16 ***\nORIGIN_SZJWSZ03  1.1548028  0.0045180   255.599  &lt; 2e-16 ***\nORIGIN_SZJWSZ04  0.9078417  0.0046668   194.532  &lt; 2e-16 ***\nORIGIN_SZJWSZ05 -1.7092500  0.0127422  -134.141  &lt; 2e-16 ***\nORIGIN_SZJWSZ06 -1.3284287  0.0109785  -121.002  &lt; 2e-16 ***\nORIGIN_SZJWSZ07 -2.3231549  0.0281427   -82.549  &lt; 2e-16 ***\nORIGIN_SZJWSZ08  1.9386127  0.0046041   421.059  &lt; 2e-16 ***\nORIGIN_SZJWSZ09  1.3987549  0.0042610   328.266  &lt; 2e-16 ***\nORIGIN_SZKLSZ01  0.2617735  0.0050089    52.261  &lt; 2e-16 ***\nORIGIN_SZKLSZ02 -0.4325093  0.0064279   -67.286  &lt; 2e-16 ***\nORIGIN_SZKLSZ03 -0.2787173  0.0060380   -46.161  &lt; 2e-16 ***\nORIGIN_SZKLSZ04 -1.9432693  0.0119163  -163.076  &lt; 2e-16 ***\nORIGIN_SZKLSZ05 -0.5420067  0.0085529   -63.371  &lt; 2e-16 ***\nORIGIN_SZKLSZ06 -4.2949009  0.1857686   -23.120  &lt; 2e-16 ***\nORIGIN_SZKLSZ07 -0.8576946  0.0085178  -100.694  &lt; 2e-16 ***\nORIGIN_SZKLSZ08 -1.3840925  0.0092323  -149.918  &lt; 2e-16 ***\nORIGIN_SZLKSZ01 -2.8108510  0.0392356   -71.640  &lt; 2e-16 ***\nORIGIN_SZMDSZ01 -1.6745388  0.0296543   -56.469  &lt; 2e-16 ***\nORIGIN_SZMDSZ02 -0.8193738  0.0106631   -76.842  &lt; 2e-16 ***\nORIGIN_SZMDSZ03 -1.5088267  0.0172032   -87.706  &lt; 2e-16 ***\nORIGIN_SZMPSZ01 -0.9860154  0.0085053  -115.929  &lt; 2e-16 ***\nORIGIN_SZMPSZ02 -0.5958875  0.0070097   -85.008  &lt; 2e-16 ***\nORIGIN_SZMPSZ03 -0.0490122  0.0054582    -8.980  &lt; 2e-16 ***\nORIGIN_SZMUSZ02 -3.5233367  0.1037749   -33.952  &lt; 2e-16 ***\nORIGIN_SZNTSZ01 -2.6451541  0.0353125   -74.907  &lt; 2e-16 ***\nORIGIN_SZNTSZ02 -2.7710546  0.0232841  -119.011  &lt; 2e-16 ***\nORIGIN_SZNTSZ03 -0.6123404  0.0079083   -77.430  &lt; 2e-16 ***\nORIGIN_SZNTSZ05 -2.9257445  0.0496704   -58.903  &lt; 2e-16 ***\nORIGIN_SZNTSZ06 -3.3260031  0.0557966   -59.609  &lt; 2e-16 ***\nORIGIN_SZNVSZ01  0.6421306  0.0046037   139.482  &lt; 2e-16 ***\nORIGIN_SZNVSZ02 -0.4251550  0.0065890   -64.525  &lt; 2e-16 ***\nORIGIN_SZNVSZ03 -1.0765622  0.0078766  -136.679  &lt; 2e-16 ***\nORIGIN_SZNVSZ04 -1.2289504  0.0091468  -134.358  &lt; 2e-16 ***\nORIGIN_SZNVSZ05 -2.3551389  0.0158219  -148.853  &lt; 2e-16 ***\nORIGIN_SZPGSZ01  0.1518212  0.0154825     9.806  &lt; 2e-16 ***\nORIGIN_SZPGSZ02 -0.4062609  0.0073780   -55.064  &lt; 2e-16 ***\nORIGIN_SZPGSZ03  0.8976913  0.0046122   194.636  &lt; 2e-16 ***\nORIGIN_SZPGSZ04  1.1161685  0.0045850   243.437  &lt; 2e-16 ***\nORIGIN_SZPGSZ05  0.4794249  0.0060213    79.621  &lt; 2e-16 ***\nORIGIN_SZPLSZ01 -0.8322377  0.0107898   -77.132  &lt; 2e-16 ***\nORIGIN_SZPLSZ02 -1.2968937  0.0149841   -86.551  &lt; 2e-16 ***\nORIGIN_SZPLSZ03 -3.2744991  0.0374541   -87.427  &lt; 2e-16 ***\nORIGIN_SZPLSZ04 -3.5423615  0.0372570   -95.079  &lt; 2e-16 ***\nORIGIN_SZPLSZ05 -2.4343705  0.0227807  -106.861  &lt; 2e-16 ***\nORIGIN_SZPNSZ01  0.8052461  0.0056124   143.476  &lt; 2e-16 ***\nORIGIN_SZPNSZ02 -1.8042362  0.0128222  -140.712  &lt; 2e-16 ***\nORIGIN_SZPNSZ03 -2.6363996  0.0200058  -131.782  &lt; 2e-16 ***\nORIGIN_SZPNSZ04 -4.8427070  0.0320126  -151.275  &lt; 2e-16 ***\nORIGIN_SZPNSZ05 -3.6613775  0.0285686  -128.161  &lt; 2e-16 ***\nORIGIN_SZPRSZ01 -0.5645384  0.0117126   -48.199  &lt; 2e-16 ***\nORIGIN_SZPRSZ02  0.9145886  0.0048137   189.998  &lt; 2e-16 ***\nORIGIN_SZPRSZ03  0.4478971  0.0048102    93.113  &lt; 2e-16 ***\nORIGIN_SZPRSZ04 -0.5312444  0.0079019   -67.230  &lt; 2e-16 ***\nORIGIN_SZPRSZ05  1.1462662  0.0045250   253.318  &lt; 2e-16 ***\nORIGIN_SZPRSZ06 -0.7392744  0.0090347   -81.826  &lt; 2e-16 ***\nORIGIN_SZPRSZ07 -2.1667862  0.0162528  -133.318  &lt; 2e-16 ***\nORIGIN_SZPRSZ08 -0.1327079  0.0065712   -20.195  &lt; 2e-16 ***\nORIGIN_SZQTSZ01  0.1062151  0.0071538    14.847  &lt; 2e-16 ***\nORIGIN_SZQTSZ02 -0.4993990  0.0064382   -77.568  &lt; 2e-16 ***\nORIGIN_SZQTSZ03  0.1161844  0.0058822    19.752  &lt; 2e-16 ***\nORIGIN_SZQTSZ04 -0.8102612  0.0072742  -111.389  &lt; 2e-16 ***\nORIGIN_SZQTSZ05 -0.0417272  0.0061917    -6.739 1.59e-11 ***\nORIGIN_SZQTSZ06 -0.2521417  0.0066449   -37.945  &lt; 2e-16 ***\nORIGIN_SZQTSZ07 -1.2395975  0.0097496  -127.143  &lt; 2e-16 ***\nORIGIN_SZQTSZ08 -0.1105467  0.0059364   -18.622  &lt; 2e-16 ***\nORIGIN_SZQTSZ09 -0.5078461  0.0067895   -74.798  &lt; 2e-16 ***\nORIGIN_SZQTSZ10 -0.3866593  0.0066995   -57.714  &lt; 2e-16 ***\nORIGIN_SZQTSZ11 -1.5264609  0.0099770  -152.998  &lt; 2e-16 ***\nORIGIN_SZQTSZ12 -1.3866518  0.0106887  -129.730  &lt; 2e-16 ***\nORIGIN_SZQTSZ13 -0.3764286  0.0066707   -56.430  &lt; 2e-16 ***\nORIGIN_SZQTSZ14 -1.4907399  0.0100120  -148.896  &lt; 2e-16 ***\nORIGIN_SZQTSZ15 -1.0552239  0.0108792   -96.994  &lt; 2e-16 ***\nORIGIN_SZRCSZ01 -1.3136074  0.0126986  -103.445  &lt; 2e-16 ***\nORIGIN_SZRCSZ06 -0.2418276  0.0085509   -28.281  &lt; 2e-16 ***\nORIGIN_SZRVSZ01 -2.9263747  0.0324968   -90.051  &lt; 2e-16 ***\nORIGIN_SZRVSZ02 -2.2980940  0.0278202   -82.605  &lt; 2e-16 ***\nORIGIN_SZRVSZ03 -2.4663765  0.0238674  -103.336  &lt; 2e-16 ***\nORIGIN_SZRVSZ04 -3.1853677  0.0556939   -57.194  &lt; 2e-16 ***\nORIGIN_SZRVSZ05 -1.5695490  0.0166684   -94.163  &lt; 2e-16 ***\nORIGIN_SZSBSZ01  0.7674590  0.0061811   124.163  &lt; 2e-16 ***\nORIGIN_SZSBSZ02 -0.7307279  0.0084105   -86.883  &lt; 2e-16 ***\nORIGIN_SZSBSZ03  0.5920074  0.0050167   118.008  &lt; 2e-16 ***\nORIGIN_SZSBSZ04  0.3684857  0.0058575    62.908  &lt; 2e-16 ***\nORIGIN_SZSBSZ05 -0.0036863  0.0068459    -0.538  0.59026    \nORIGIN_SZSBSZ06 -1.1939284  0.0181541   -65.766  &lt; 2e-16 ***\nORIGIN_SZSBSZ07 -0.4896579  0.0135618   -36.106  &lt; 2e-16 ***\nORIGIN_SZSBSZ08 -2.1221691  0.0127258  -166.762  &lt; 2e-16 ***\nORIGIN_SZSBSZ09 -1.2032410  0.0089611  -134.273  &lt; 2e-16 ***\nORIGIN_SZSESZ02  1.0721820  0.0045336   236.498  &lt; 2e-16 ***\nORIGIN_SZSESZ03  1.0808012  0.0042923   251.801  &lt; 2e-16 ***\nORIGIN_SZSESZ04  1.0137448  0.0050668   200.076  &lt; 2e-16 ***\nORIGIN_SZSESZ05 -0.1678679  0.0060206   -27.882  &lt; 2e-16 ***\nORIGIN_SZSESZ06  0.9165834  0.0048323   189.677  &lt; 2e-16 ***\nORIGIN_SZSESZ07 -2.2499789  0.0196327  -114.603  &lt; 2e-16 ***\nORIGIN_SZSGSZ01 -0.9369800  0.0087282  -107.351  &lt; 2e-16 ***\nORIGIN_SZSGSZ02 -1.1690716  0.0097131  -120.360  &lt; 2e-16 ***\nORIGIN_SZSGSZ03  0.2604352  0.0052709    49.410  &lt; 2e-16 ***\nORIGIN_SZSGSZ04  0.3468823  0.0048897    70.942  &lt; 2e-16 ***\nORIGIN_SZSGSZ05 -1.5927797  0.0106308  -149.827  &lt; 2e-16 ***\nORIGIN_SZSGSZ06  0.3605651  0.0046361    77.774  &lt; 2e-16 ***\nORIGIN_SZSGSZ07 -0.5333873  0.0063119   -84.504  &lt; 2e-16 ***\nORIGIN_SZSKSZ01 -0.2706750  0.0082836   -32.676  &lt; 2e-16 ***\nORIGIN_SZSKSZ02  0.0970953  0.0063378    15.320  &lt; 2e-16 ***\nORIGIN_SZSKSZ03 -0.6954342  0.0082538   -84.256  &lt; 2e-16 ***\nORIGIN_SZSKSZ04 -2.3863580  0.0284607   -83.847  &lt; 2e-16 ***\nORIGIN_SZSKSZ05 -1.5443140  0.0179059   -86.246  &lt; 2e-16 ***\nORIGIN_SZSLSZ01 -2.9450656  0.0307283   -95.842  &lt; 2e-16 ***\nORIGIN_SZSLSZ04 -0.5739349  0.0077851   -73.722  &lt; 2e-16 ***\nORIGIN_SZSRSZ01 -1.6136735  0.0160199  -100.729  &lt; 2e-16 ***\nORIGIN_SZTHSZ01 -2.6034976  0.0489378   -53.200  &lt; 2e-16 ***\nORIGIN_SZTHSZ03 -1.2770601  0.0229815   -55.569  &lt; 2e-16 ***\nORIGIN_SZTHSZ04 -2.0110399  0.0287527   -69.943  &lt; 2e-16 ***\nORIGIN_SZTHSZ06 -1.7720116  0.0180394   -98.230  &lt; 2e-16 ***\nORIGIN_SZTMSZ01  0.1254729  0.0060924    20.595  &lt; 2e-16 ***\nORIGIN_SZTMSZ02  1.6667504  0.0039836   418.403  &lt; 2e-16 ***\nORIGIN_SZTMSZ03  1.0941176  0.0042911   254.976  &lt; 2e-16 ***\nORIGIN_SZTMSZ04  0.3209520  0.0050349    63.746  &lt; 2e-16 ***\nORIGIN_SZTMSZ05 -0.8155124  0.0079342  -102.785  &lt; 2e-16 ***\nORIGIN_SZTNSZ01 -1.4237298  0.0104636  -136.064  &lt; 2e-16 ***\nORIGIN_SZTNSZ02 -1.2718890  0.0098660  -128.916  &lt; 2e-16 ***\nORIGIN_SZTNSZ03 -1.7960517  0.0134675  -133.362  &lt; 2e-16 ***\nORIGIN_SZTNSZ04 -0.3508142  0.0073556   -47.694  &lt; 2e-16 ***\nORIGIN_SZTPSZ01 -0.3841699  0.0064137   -59.898  &lt; 2e-16 ***\nORIGIN_SZTPSZ02  0.5315265  0.0044497   119.451  &lt; 2e-16 ***\nORIGIN_SZTPSZ03 -0.4669723  0.0062160   -75.124  &lt; 2e-16 ***\nORIGIN_SZTPSZ04 -0.0617169  0.0058830   -10.491  &lt; 2e-16 ***\nORIGIN_SZTPSZ05  0.0713309  0.0062133    11.480  &lt; 2e-16 ***\nORIGIN_SZTPSZ06  0.6800356  0.0069456    97.909  &lt; 2e-16 ***\nORIGIN_SZTPSZ07 -0.0432782  0.0064382    -6.722 1.79e-11 ***\nORIGIN_SZTPSZ08 -0.6976429  0.0092416   -75.490  &lt; 2e-16 ***\nORIGIN_SZTPSZ09 -0.3708833  0.0063548   -58.363  &lt; 2e-16 ***\nORIGIN_SZTPSZ10 -0.4063575  0.0077803   -52.229  &lt; 2e-16 ***\nORIGIN_SZTPSZ11  0.1040282  0.0056115    18.538  &lt; 2e-16 ***\nORIGIN_SZTPSZ12 -0.5104672  0.0066261   -77.039  &lt; 2e-16 ***\nORIGIN_SZTSSZ01 -3.5036830  0.0487290   -71.901  &lt; 2e-16 ***\nORIGIN_SZTSSZ02 -0.0386819  0.0094886    -4.077 4.57e-05 ***\nORIGIN_SZTSSZ03 -0.3862387  0.0095139   -40.597  &lt; 2e-16 ***\nORIGIN_SZTSSZ04 -0.6380676  0.0099905   -63.867  &lt; 2e-16 ***\nORIGIN_SZTSSZ05 -2.7354613  0.0162414  -168.425  &lt; 2e-16 ***\nORIGIN_SZTSSZ06 -2.6310865  0.0255772  -102.868  &lt; 2e-16 ***\nORIGIN_SZWCSZ01 -1.1561047  0.0087394  -132.286  &lt; 2e-16 ***\nORIGIN_SZWCSZ02 -2.6956217  0.0319117   -84.471  &lt; 2e-16 ***\nORIGIN_SZWCSZ03 -4.3526889  0.1241082   -35.072  &lt; 2e-16 ***\nORIGIN_SZWDSZ01  0.8712417  0.0043720   199.277  &lt; 2e-16 ***\nORIGIN_SZWDSZ02  0.9119539  0.0050326   181.210  &lt; 2e-16 ***\nORIGIN_SZWDSZ03  1.6205678  0.0045250   358.136  &lt; 2e-16 ***\nORIGIN_SZWDSZ04  1.2081941  0.0054272   222.618  &lt; 2e-16 ***\nORIGIN_SZWDSZ05  0.4284783  0.0052752    81.224  &lt; 2e-16 ***\nORIGIN_SZWDSZ06  0.9018716  0.0049820   181.028  &lt; 2e-16 ***\nORIGIN_SZWDSZ07 -0.6444820  0.0084731   -76.062  &lt; 2e-16 ***\nORIGIN_SZWDSZ08 -0.8764983  0.0082622  -106.085  &lt; 2e-16 ***\nORIGIN_SZWDSZ09  1.3292589  0.0048663   273.158  &lt; 2e-16 ***\nORIGIN_SZYSSZ01 -0.4780462  0.0058489   -81.733  &lt; 2e-16 ***\nORIGIN_SZYSSZ02  0.9323419  0.0054402   171.380  &lt; 2e-16 ***\nORIGIN_SZYSSZ03  2.0577240  0.0046737   440.274  &lt; 2e-16 ***\nORIGIN_SZYSSZ04  0.8697472  0.0047269   184.000  &lt; 2e-16 ***\nORIGIN_SZYSSZ05  0.1662764  0.0060376    27.540  &lt; 2e-16 ***\nORIGIN_SZYSSZ06 -0.8115617  0.0109084   -74.398  &lt; 2e-16 ***\nORIGIN_SZYSSZ07 -0.8971248  0.0119220   -75.250  &lt; 2e-16 ***\nORIGIN_SZYSSZ08 -0.2738680  0.0063553   -43.093  &lt; 2e-16 ***\nORIGIN_SZYSSZ09  1.2274518  0.0044951   273.066  &lt; 2e-16 ***\nDESTIN_SZAMSZ02 -0.0516322  0.0042829   -12.055  &lt; 2e-16 ***\nDESTIN_SZAMSZ03  0.0801823  0.0041904    19.135  &lt; 2e-16 ***\nDESTIN_SZAMSZ04 -0.9282211  0.0061322  -151.368  &lt; 2e-16 ***\nDESTIN_SZAMSZ05 -1.0794168  0.0062543  -172.588  &lt; 2e-16 ***\nDESTIN_SZAMSZ06 -0.8839603  0.0060851  -145.267  &lt; 2e-16 ***\nDESTIN_SZAMSZ07 -1.5835093  0.0096846  -163.508  &lt; 2e-16 ***\nDESTIN_SZAMSZ08 -0.9756903  0.0068829  -141.756  &lt; 2e-16 ***\nDESTIN_SZAMSZ09 -1.0362692  0.0061651  -168.087  &lt; 2e-16 ***\nDESTIN_SZAMSZ10 -0.1227646  0.0044788   -27.410  &lt; 2e-16 ***\nDESTIN_SZAMSZ11 -0.4802374  0.0088108   -54.506  &lt; 2e-16 ***\nDESTIN_SZAMSZ12  0.2142621  0.0050653    42.300  &lt; 2e-16 ***\nDESTIN_SZBDSZ01  0.3582789  0.0039578    90.524  &lt; 2e-16 ***\nDESTIN_SZBDSZ02 -0.4368229  0.0051384   -85.012  &lt; 2e-16 ***\nDESTIN_SZBDSZ03 -0.1568727  0.0044329   -35.388  &lt; 2e-16 ***\nDESTIN_SZBDSZ04  0.6731669  0.0036215   185.882  &lt; 2e-16 ***\nDESTIN_SZBDSZ05  0.3647198  0.0040496    90.062  &lt; 2e-16 ***\nDESTIN_SZBDSZ06  0.0589240  0.0044352    13.286  &lt; 2e-16 ***\nDESTIN_SZBDSZ07 -0.6648168  0.0095742   -69.438  &lt; 2e-16 ***\nDESTIN_SZBDSZ08 -1.7214136  0.0106600  -161.483  &lt; 2e-16 ***\nDESTIN_SZBKSZ01 -1.2688264  0.0067263  -188.637  &lt; 2e-16 ***\nDESTIN_SZBKSZ02 -0.3912129  0.0055446   -70.558  &lt; 2e-16 ***\nDESTIN_SZBKSZ03 -0.8663392  0.0058693  -147.605  &lt; 2e-16 ***\nDESTIN_SZBKSZ04 -0.1247273  0.0051254   -24.335  &lt; 2e-16 ***\nDESTIN_SZBKSZ05 -0.7407774  0.0059120  -125.300  &lt; 2e-16 ***\nDESTIN_SZBKSZ06 -0.9934643  0.0063345  -156.834  &lt; 2e-16 ***\nDESTIN_SZBKSZ07  0.0882230  0.0042928    20.551  &lt; 2e-16 ***\nDESTIN_SZBKSZ08 -1.1134447  0.0070752  -157.372  &lt; 2e-16 ***\nDESTIN_SZBKSZ09 -0.1788171  0.0051327   -34.839  &lt; 2e-16 ***\nDESTIN_SZBLSZ01 -0.7696433  0.0071898  -107.047  &lt; 2e-16 ***\nDESTIN_SZBLSZ02  0.4076650  0.0068001    59.950  &lt; 2e-16 ***\nDESTIN_SZBLSZ03  1.5398488  0.0078230   196.836  &lt; 2e-16 ***\nDESTIN_SZBLSZ04 -0.3499486  0.0136985   -25.546  &lt; 2e-16 ***\nDESTIN_SZBMSZ01 -0.2114705  0.0048311   -43.773  &lt; 2e-16 ***\nDESTIN_SZBMSZ02 -0.3316806  0.0049958   -66.391  &lt; 2e-16 ***\nDESTIN_SZBMSZ03 -0.5134774  0.0058534   -87.723  &lt; 2e-16 ***\nDESTIN_SZBMSZ04 -0.2205274  0.0051028   -43.217  &lt; 2e-16 ***\nDESTIN_SZBMSZ05 -0.2101165  0.0067710   -31.032  &lt; 2e-16 ***\nDESTIN_SZBMSZ06 -1.3832385  0.0124821  -110.818  &lt; 2e-16 ***\nDESTIN_SZBMSZ07 -0.0133462  0.0046787    -2.853  0.00434 ** \nDESTIN_SZBMSZ08 -0.9056756  0.0063868  -141.805  &lt; 2e-16 ***\nDESTIN_SZBMSZ09 -2.3175407  0.0144523  -160.358  &lt; 2e-16 ***\nDESTIN_SZBMSZ10 -1.3973725  0.0090463  -154.470  &lt; 2e-16 ***\nDESTIN_SZBMSZ11 -1.3950206  0.0080459  -173.383  &lt; 2e-16 ***\nDESTIN_SZBMSZ12 -0.6882789  0.0081539   -84.411  &lt; 2e-16 ***\nDESTIN_SZBMSZ13 -0.2729120  0.0052969   -51.523  &lt; 2e-16 ***\nDESTIN_SZBMSZ14 -0.7581980  0.0080215   -94.521  &lt; 2e-16 ***\nDESTIN_SZBMSZ15 -0.9323237  0.0071093  -131.142  &lt; 2e-16 ***\nDESTIN_SZBMSZ16 -2.0655530  0.0108490  -190.391  &lt; 2e-16 ***\nDESTIN_SZBMSZ17 -2.5124893  0.0165366  -151.935  &lt; 2e-16 ***\nDESTIN_SZBPSZ01 -0.8203274  0.0057682  -142.216  &lt; 2e-16 ***\nDESTIN_SZBPSZ02 -1.5284265  0.0087447  -174.783  &lt; 2e-16 ***\nDESTIN_SZBPSZ03 -1.2434382  0.0080852  -153.792  &lt; 2e-16 ***\nDESTIN_SZBPSZ04 -0.7778558  0.0060900  -127.727  &lt; 2e-16 ***\nDESTIN_SZBPSZ05  0.1782204  0.0042331    42.101  &lt; 2e-16 ***\nDESTIN_SZBPSZ06 -0.6758807  0.0079728   -84.773  &lt; 2e-16 ***\nDESTIN_SZBPSZ07 -0.5029450  0.0081151   -61.976  &lt; 2e-16 ***\nDESTIN_SZBSSZ01 -0.1269916  0.0046949   -27.049  &lt; 2e-16 ***\nDESTIN_SZBSSZ02 -0.7536917  0.0051895  -145.233  &lt; 2e-16 ***\nDESTIN_SZBSSZ03  0.2747969  0.0039115    70.254  &lt; 2e-16 ***\nDESTIN_SZBTSZ01  0.1708577  0.0043381    39.385  &lt; 2e-16 ***\nDESTIN_SZBTSZ02 -0.6820190  0.0067243  -101.427  &lt; 2e-16 ***\nDESTIN_SZBTSZ03  0.0610599  0.0049825    12.255  &lt; 2e-16 ***\nDESTIN_SZBTSZ04 -1.3199639  0.0107063  -123.288  &lt; 2e-16 ***\nDESTIN_SZBTSZ05 -0.4174991  0.0069221   -60.314  &lt; 2e-16 ***\nDESTIN_SZBTSZ06 -0.5260242  0.0061145   -86.029  &lt; 2e-16 ***\nDESTIN_SZBTSZ07 -1.6678047  0.0106335  -156.844  &lt; 2e-16 ***\nDESTIN_SZBTSZ08 -0.7999935  0.0089175   -89.711  &lt; 2e-16 ***\nDESTIN_SZCBSZ01 -5.6321332  0.3162476   -17.809  &lt; 2e-16 ***\nDESTIN_SZCCSZ01 -0.9342781  0.0081409  -114.763  &lt; 2e-16 ***\nDESTIN_SZCHSZ01 -1.2808546  0.0096774  -132.355  &lt; 2e-16 ***\nDESTIN_SZCHSZ02  0.0067332  0.0054322     1.239  0.21516    \nDESTIN_SZCHSZ03  1.0988838  0.0041378   265.570  &lt; 2e-16 ***\nDESTIN_SZCKSZ01 -0.3192235  0.0050632   -63.048  &lt; 2e-16 ***\nDESTIN_SZCKSZ02 -0.7776453  0.0055279  -140.676  &lt; 2e-16 ***\nDESTIN_SZCKSZ03  0.2772358  0.0042541    65.170  &lt; 2e-16 ***\nDESTIN_SZCKSZ04 -1.3842048  0.0065159  -212.436  &lt; 2e-16 ***\nDESTIN_SZCKSZ05 -1.2051808  0.0076814  -156.897  &lt; 2e-16 ***\nDESTIN_SZCKSZ06  0.1321955  0.0061568    21.472  &lt; 2e-16 ***\nDESTIN_SZCLSZ01  0.1942449  0.0049977    38.867  &lt; 2e-16 ***\nDESTIN_SZCLSZ02 -2.0828648  0.0134597  -154.749  &lt; 2e-16 ***\nDESTIN_SZCLSZ03 -0.8823728  0.0078307  -112.681  &lt; 2e-16 ***\nDESTIN_SZCLSZ04 -0.2311432  0.0047194   -48.977  &lt; 2e-16 ***\nDESTIN_SZCLSZ05 -1.0113430  0.0085536  -118.237  &lt; 2e-16 ***\nDESTIN_SZCLSZ06  0.0694682  0.0042166    16.475  &lt; 2e-16 ***\nDESTIN_SZCLSZ07 -0.4953961  0.0054184   -91.429  &lt; 2e-16 ***\nDESTIN_SZCLSZ08 -0.3849563  0.0061404   -62.693  &lt; 2e-16 ***\nDESTIN_SZCLSZ09  0.4201808  0.0067112    62.609  &lt; 2e-16 ***\nDESTIN_SZDTSZ02 -2.6513032  0.0348725   -76.029  &lt; 2e-16 ***\nDESTIN_SZDTSZ03 -1.5192228  0.0144477  -105.153  &lt; 2e-16 ***\nDESTIN_SZDTSZ13 -2.2041951  0.0161726  -136.292  &lt; 2e-16 ***\nDESTIN_SZGLSZ01 -0.0139744  0.0052464    -2.664  0.00773 ** \nDESTIN_SZGLSZ02 -0.2850816  0.0047467   -60.059  &lt; 2e-16 ***\nDESTIN_SZGLSZ03  0.3511872  0.0039473    88.969  &lt; 2e-16 ***\nDESTIN_SZGLSZ04  0.2909117  0.0039436    73.769  &lt; 2e-16 ***\nDESTIN_SZGLSZ05  0.1845361  0.0040011    46.121  &lt; 2e-16 ***\nDESTIN_SZHGSZ01  0.1418382  0.0039875    35.571  &lt; 2e-16 ***\nDESTIN_SZHGSZ02 -0.7233151  0.0052374  -138.105  &lt; 2e-16 ***\nDESTIN_SZHGSZ03 -1.1918463  0.0062129  -191.834  &lt; 2e-16 ***\nDESTIN_SZHGSZ04 -0.4380360  0.0044839   -97.691  &lt; 2e-16 ***\nDESTIN_SZHGSZ05 -0.5671024  0.0046427  -122.149  &lt; 2e-16 ***\nDESTIN_SZHGSZ06 -0.8271411  0.0054935  -150.566  &lt; 2e-16 ***\nDESTIN_SZHGSZ07  0.0721800  0.0041589    17.356  &lt; 2e-16 ***\nDESTIN_SZHGSZ08 -0.4297429  0.0050021   -85.913  &lt; 2e-16 ***\nDESTIN_SZHGSZ09 -0.2085461  0.0052544   -39.690  &lt; 2e-16 ***\nDESTIN_SZHGSZ10 -2.9169699  0.0262698  -111.039  &lt; 2e-16 ***\nDESTIN_SZJESZ01 -0.2822473  0.0051166   -55.163  &lt; 2e-16 ***\nDESTIN_SZJESZ02 -0.6761389  0.0053635  -126.063  &lt; 2e-16 ***\nDESTIN_SZJESZ03 -0.7371756  0.0058983  -124.980  &lt; 2e-16 ***\nDESTIN_SZJESZ04 -0.4593491  0.0067970   -67.581  &lt; 2e-16 ***\nDESTIN_SZJESZ05 -1.1418012  0.0099049  -115.277  &lt; 2e-16 ***\nDESTIN_SZJESZ06  0.1759680  0.0042791    41.123  &lt; 2e-16 ***\nDESTIN_SZJESZ07 -1.2260587  0.0082714  -148.229  &lt; 2e-16 ***\nDESTIN_SZJESZ08 -0.8547001  0.0080417  -106.283  &lt; 2e-16 ***\nDESTIN_SZJESZ09 -0.4306353  0.0057006   -75.542  &lt; 2e-16 ***\nDESTIN_SZJESZ10  0.6584971  0.0073664    89.392  &lt; 2e-16 ***\nDESTIN_SZJESZ11  0.9661208  0.0070491   137.056  &lt; 2e-16 ***\nDESTIN_SZJWSZ01 -0.9128436  0.0069529  -131.290  &lt; 2e-16 ***\nDESTIN_SZJWSZ02 -0.7285851  0.0054839  -132.859  &lt; 2e-16 ***\nDESTIN_SZJWSZ03  0.2601455  0.0043215    60.198  &lt; 2e-16 ***\nDESTIN_SZJWSZ04  0.6860274  0.0041135   166.775  &lt; 2e-16 ***\nDESTIN_SZJWSZ05 -0.4684576  0.0062875   -74.506  &lt; 2e-16 ***\nDESTIN_SZJWSZ06 -0.2459774  0.0057575   -42.723  &lt; 2e-16 ***\nDESTIN_SZJWSZ07 -1.8854234  0.0287721   -65.529  &lt; 2e-16 ***\nDESTIN_SZJWSZ08 -0.5523308  0.0051054  -108.186  &lt; 2e-16 ***\nDESTIN_SZJWSZ09  0.8818747  0.0037800   233.301  &lt; 2e-16 ***\nDESTIN_SZKLSZ01 -0.5814386  0.0052711  -110.308  &lt; 2e-16 ***\nDESTIN_SZKLSZ02 -0.7090577  0.0058161  -121.914  &lt; 2e-16 ***\nDESTIN_SZKLSZ03 -1.2191910  0.0065984  -184.772  &lt; 2e-16 ***\nDESTIN_SZKLSZ04 -1.6961428  0.0087866  -193.038  &lt; 2e-16 ***\nDESTIN_SZKLSZ05 -0.6927144  0.0073574   -94.153  &lt; 2e-16 ***\nDESTIN_SZKLSZ06 -2.2967464  0.0362605   -63.340  &lt; 2e-16 ***\nDESTIN_SZKLSZ07 -0.9536980  0.0066777  -142.819  &lt; 2e-16 ***\nDESTIN_SZKLSZ08 -0.4565596  0.0051736   -88.249  &lt; 2e-16 ***\nDESTIN_SZLKSZ01 -1.7277135  0.0207336   -83.329  &lt; 2e-16 ***\nDESTIN_SZMDSZ01 -1.7155417  0.0210080   -81.661  &lt; 2e-16 ***\nDESTIN_SZMDSZ02 -1.3694928  0.0114174  -119.948  &lt; 2e-16 ***\nDESTIN_SZMDSZ03 -2.7183729  0.0252678  -107.582  &lt; 2e-16 ***\nDESTIN_SZMPSZ01 -0.8051991  0.0078564  -102.490  &lt; 2e-16 ***\nDESTIN_SZMPSZ02 -0.7627000  0.0061386  -124.246  &lt; 2e-16 ***\nDESTIN_SZMPSZ03 -0.0649484  0.0047787   -13.591  &lt; 2e-16 ***\nDESTIN_SZMUSZ02 -1.9549128  0.0200160   -97.667  &lt; 2e-16 ***\nDESTIN_SZNTSZ01 -3.3048398  0.0448053   -73.760  &lt; 2e-16 ***\nDESTIN_SZNTSZ02 -1.6454847  0.0109337  -150.497  &lt; 2e-16 ***\nDESTIN_SZNTSZ03 -1.1389723  0.0077396  -147.161  &lt; 2e-16 ***\nDESTIN_SZNTSZ05 -2.0264109  0.0250226   -80.983  &lt; 2e-16 ***\nDESTIN_SZNTSZ06 -3.3496282  0.0428989   -78.082  &lt; 2e-16 ***\nDESTIN_SZNVSZ01 -0.3407614  0.0045493   -74.905  &lt; 2e-16 ***\nDESTIN_SZNVSZ02 -0.4987695  0.0053942   -92.465  &lt; 2e-16 ***\nDESTIN_SZNVSZ03 -0.4936107  0.0055158   -89.491  &lt; 2e-16 ***\nDESTIN_SZNVSZ04 -1.9141281  0.0107557  -177.964  &lt; 2e-16 ***\nDESTIN_SZNVSZ05 -1.5378263  0.0089577  -171.677  &lt; 2e-16 ***\nDESTIN_SZPGSZ01 -1.7744485  0.0194346   -91.304  &lt; 2e-16 ***\nDESTIN_SZPGSZ02 -0.9282918  0.0069006  -134.523  &lt; 2e-16 ***\nDESTIN_SZPGSZ03  0.0885025  0.0042145    21.000  &lt; 2e-16 ***\nDESTIN_SZPGSZ04 -0.3879375  0.0046862   -82.784  &lt; 2e-16 ***\nDESTIN_SZPGSZ05 -0.9649873  0.0074625  -129.311  &lt; 2e-16 ***\nDESTIN_SZPLSZ01 -0.6159175  0.0070845   -86.939  &lt; 2e-16 ***\nDESTIN_SZPLSZ02 -1.7551386  0.0133081  -131.885  &lt; 2e-16 ***\nDESTIN_SZPLSZ03 -0.1378379  0.0098704   -13.965  &lt; 2e-16 ***\nDESTIN_SZPLSZ04 -0.1411200  0.0096446   -14.632  &lt; 2e-16 ***\nDESTIN_SZPLSZ05 -0.8483196  0.0119048   -71.259  &lt; 2e-16 ***\nDESTIN_SZPNSZ01 -0.1579087  0.0057330   -27.544  &lt; 2e-16 ***\nDESTIN_SZPNSZ02  1.0243480  0.0076680   133.587  &lt; 2e-16 ***\nDESTIN_SZPNSZ03  0.0451598  0.0081444     5.545 2.94e-08 ***\nDESTIN_SZPNSZ04  1.8941928  0.0087479   216.530  &lt; 2e-16 ***\nDESTIN_SZPNSZ05  1.0341581  0.0130830    79.046  &lt; 2e-16 ***\nDESTIN_SZPRSZ01 -1.4038513  0.0086911  -161.527  &lt; 2e-16 ***\nDESTIN_SZPRSZ02 -0.4942539  0.0052403   -94.319  &lt; 2e-16 ***\nDESTIN_SZPRSZ03  0.4219510  0.0040281   104.751  &lt; 2e-16 ***\nDESTIN_SZPRSZ04 -0.4841099  0.0083498   -57.979  &lt; 2e-16 ***\nDESTIN_SZPRSZ05 -0.2988481  0.0047512   -62.899  &lt; 2e-16 ***\nDESTIN_SZPRSZ06  0.0012333  0.0054530     0.226  0.82108    \nDESTIN_SZPRSZ07 -1.1417482  0.0118845   -96.070  &lt; 2e-16 ***\nDESTIN_SZPRSZ08 -0.8259249  0.0066757  -123.720  &lt; 2e-16 ***\nDESTIN_SZQTSZ01 -1.2134330  0.0089222  -136.002  &lt; 2e-16 ***\nDESTIN_SZQTSZ02 -1.2397956  0.0074512  -166.388  &lt; 2e-16 ***\nDESTIN_SZQTSZ03 -0.7448659  0.0066511  -111.992  &lt; 2e-16 ***\nDESTIN_SZQTSZ04 -0.6243112  0.0066812   -93.443  &lt; 2e-16 ***\nDESTIN_SZQTSZ05 -0.6102589  0.0060458  -100.940  &lt; 2e-16 ***\nDESTIN_SZQTSZ06 -0.9164592  0.0065095  -140.788  &lt; 2e-16 ***\nDESTIN_SZQTSZ07 -1.4600643  0.0109976  -132.762  &lt; 2e-16 ***\nDESTIN_SZQTSZ08  0.0004582  0.0050178     0.091  0.92724    \nDESTIN_SZQTSZ09 -0.5226213  0.0058901   -88.728  &lt; 2e-16 ***\nDESTIN_SZQTSZ10 -0.3867082  0.0055876   -69.208  &lt; 2e-16 ***\nDESTIN_SZQTSZ11  0.0260589  0.0055065     4.732 2.22e-06 ***\nDESTIN_SZQTSZ12 -0.3387634  0.0072779   -46.547  &lt; 2e-16 ***\nDESTIN_SZQTSZ13 -0.0512118  0.0053664    -9.543  &lt; 2e-16 ***\nDESTIN_SZQTSZ14 -0.2555346  0.0063792   -40.057  &lt; 2e-16 ***\nDESTIN_SZQTSZ15 -0.1820651  0.0077537   -23.481  &lt; 2e-16 ***\nDESTIN_SZRCSZ01 -0.4641196  0.0072515   -64.003  &lt; 2e-16 ***\nDESTIN_SZRCSZ06 -2.0929548  0.0189106  -110.676  &lt; 2e-16 ***\nDESTIN_SZRVSZ01 -1.7885682  0.0163492  -109.398  &lt; 2e-16 ***\nDESTIN_SZRVSZ02 -3.1669721  0.0326320   -97.051  &lt; 2e-16 ***\nDESTIN_SZRVSZ03 -2.0306835  0.0135749  -149.591  &lt; 2e-16 ***\nDESTIN_SZRVSZ04 -1.5113470  0.0155637   -97.107  &lt; 2e-16 ***\nDESTIN_SZRVSZ05 -2.3683855  0.0259334   -91.326  &lt; 2e-16 ***\nDESTIN_SZSBSZ01 -0.5841063  0.0068588   -85.162  &lt; 2e-16 ***\nDESTIN_SZSBSZ02 -1.0777704  0.0078288  -137.667  &lt; 2e-16 ***\nDESTIN_SZSBSZ03  0.4734371  0.0045880   103.190  &lt; 2e-16 ***\nDESTIN_SZSBSZ04  0.0546094  0.0057517     9.494  &lt; 2e-16 ***\nDESTIN_SZSBSZ05 -0.9588198  0.0075242  -127.431  &lt; 2e-16 ***\nDESTIN_SZSBSZ06 -1.8528944  0.0234040   -79.170  &lt; 2e-16 ***\nDESTIN_SZSBSZ07 -1.8403768  0.0195878   -93.955  &lt; 2e-16 ***\nDESTIN_SZSBSZ08  0.9205969  0.0055698   165.285  &lt; 2e-16 ***\nDESTIN_SZSBSZ09  0.5166486  0.0051939    99.472  &lt; 2e-16 ***\nDESTIN_SZSESZ02 -0.5728211  0.0048270  -118.669  &lt; 2e-16 ***\nDESTIN_SZSESZ03  0.2554787  0.0038335    66.645  &lt; 2e-16 ***\nDESTIN_SZSESZ04 -0.8982794  0.0056698  -158.432  &lt; 2e-16 ***\nDESTIN_SZSESZ05 -0.4661655  0.0048578   -95.962  &lt; 2e-16 ***\nDESTIN_SZSESZ06 -0.8392849  0.0059198  -141.777  &lt; 2e-16 ***\nDESTIN_SZSESZ07 -3.2182325  0.0227089  -141.717  &lt; 2e-16 ***\nDESTIN_SZSGSZ01 -0.2751206  0.0059581   -46.176  &lt; 2e-16 ***\nDESTIN_SZSGSZ02 -0.2951806  0.0052515   -56.209  &lt; 2e-16 ***\nDESTIN_SZSGSZ03 -0.4469508  0.0048181   -92.766  &lt; 2e-16 ***\nDESTIN_SZSGSZ04 -0.2842809  0.0047961   -59.274  &lt; 2e-16 ***\nDESTIN_SZSGSZ05 -2.0643753  0.0098252  -210.109  &lt; 2e-16 ***\nDESTIN_SZSGSZ06  0.2501247  0.0038873    64.343  &lt; 2e-16 ***\nDESTIN_SZSGSZ07 -0.5743750  0.0052184  -110.067  &lt; 2e-16 ***\nDESTIN_SZSISZ01 -1.1030669  0.0259113   -42.571  &lt; 2e-16 ***\nDESTIN_SZSKSZ01 -0.5462538  0.0071443   -76.460  &lt; 2e-16 ***\nDESTIN_SZSKSZ02  0.2965180  0.0056707    52.290  &lt; 2e-16 ***\nDESTIN_SZSKSZ03 -0.4521490  0.0062177   -72.719  &lt; 2e-16 ***\nDESTIN_SZSKSZ04 -0.6665145  0.0148252   -44.958  &lt; 2e-16 ***\nDESTIN_SZSKSZ05 -0.1474142  0.0121958   -12.087  &lt; 2e-16 ***\nDESTIN_SZSLSZ01 -0.8855715  0.0084587  -104.693  &lt; 2e-16 ***\nDESTIN_SZSLSZ04 -1.1787840  0.0071355  -165.200  &lt; 2e-16 ***\nDESTIN_SZSRSZ01 -1.6435064  0.0128822  -127.580  &lt; 2e-16 ***\nDESTIN_SZTHSZ01 -3.4388625  0.0367651   -93.536  &lt; 2e-16 ***\nDESTIN_SZTHSZ03 -2.5809435  0.0256853  -100.483  &lt; 2e-16 ***\nDESTIN_SZTHSZ04 -2.4887189  0.0214441  -116.056  &lt; 2e-16 ***\nDESTIN_SZTHSZ06 -1.7965101  0.0152160  -118.067  &lt; 2e-16 ***\nDESTIN_SZTMSZ01 -0.3251891  0.0058067   -56.002  &lt; 2e-16 ***\nDESTIN_SZTMSZ02  1.1558743  0.0034703   333.080  &lt; 2e-16 ***\nDESTIN_SZTMSZ03  0.4525619  0.0039244   115.319  &lt; 2e-16 ***\nDESTIN_SZTMSZ04  0.8223271  0.0040060   205.274  &lt; 2e-16 ***\nDESTIN_SZTMSZ05  0.3880619  0.0054308    71.456  &lt; 2e-16 ***\nDESTIN_SZTNSZ01 -0.9533112  0.0067853  -140.496  &lt; 2e-16 ***\nDESTIN_SZTNSZ02 -1.5909451  0.0097396  -163.348  &lt; 2e-16 ***\nDESTIN_SZTNSZ03 -1.6470771  0.0116598  -141.261  &lt; 2e-16 ***\nDESTIN_SZTNSZ04 -1.0686173  0.0069848  -152.993  &lt; 2e-16 ***\nDESTIN_SZTPSZ01 -0.5180183  0.0056886   -91.063  &lt; 2e-16 ***\nDESTIN_SZTPSZ02  0.2160781  0.0038283    56.443  &lt; 2e-16 ***\nDESTIN_SZTPSZ03 -0.2479956  0.0056651   -43.776  &lt; 2e-16 ***\nDESTIN_SZTPSZ04 -1.5015463  0.0072444  -207.271  &lt; 2e-16 ***\nDESTIN_SZTPSZ05 -0.9551144  0.0057981  -164.729  &lt; 2e-16 ***\nDESTIN_SZTPSZ06 -0.4846634  0.0074621   -64.950  &lt; 2e-16 ***\nDESTIN_SZTPSZ07 -1.9753440  0.0118295  -166.984  &lt; 2e-16 ***\nDESTIN_SZTPSZ08 -1.3455063  0.0086909  -154.817  &lt; 2e-16 ***\nDESTIN_SZTPSZ09 -0.3556620  0.0061296   -58.024  &lt; 2e-16 ***\nDESTIN_SZTPSZ10 -1.3213501  0.0085951  -153.733  &lt; 2e-16 ***\nDESTIN_SZTPSZ11 -0.3877006  0.0052409   -73.977  &lt; 2e-16 ***\nDESTIN_SZTPSZ12 -0.7064020  0.0062472  -113.075  &lt; 2e-16 ***\nDESTIN_SZTSSZ01 -0.8827157  0.0218327   -40.431  &lt; 2e-16 ***\nDESTIN_SZTSSZ02 -0.6067055  0.0115514   -52.522  &lt; 2e-16 ***\nDESTIN_SZTSSZ03  0.4380259  0.0086774    50.479  &lt; 2e-16 ***\nDESTIN_SZTSSZ04  0.4902124  0.0089922    54.515  &lt; 2e-16 ***\nDESTIN_SZTSSZ05  1.4336278  0.0093410   153.477  &lt; 2e-16 ***\nDESTIN_SZTSSZ06  0.9223573  0.0209024    44.127  &lt; 2e-16 ***\nDESTIN_SZWCSZ01  1.1559309  0.0051787   223.208  &lt; 2e-16 ***\nDESTIN_SZWCSZ02 -1.2664455  0.0126131  -100.407  &lt; 2e-16 ***\nDESTIN_SZWCSZ03 -2.7360882  0.0325753   -83.993  &lt; 2e-16 ***\nDESTIN_SZWDSZ01  0.8193492  0.0037301   219.657  &lt; 2e-16 ***\nDESTIN_SZWDSZ02 -0.7852474  0.0058655  -133.875  &lt; 2e-16 ***\nDESTIN_SZWDSZ03  0.5742422  0.0041884   137.104  &lt; 2e-16 ***\nDESTIN_SZWDSZ04 -0.8391525  0.0065075  -128.951  &lt; 2e-16 ***\nDESTIN_SZWDSZ05 -0.3510692  0.0057253   -61.319  &lt; 2e-16 ***\nDESTIN_SZWDSZ06  0.1358804  0.0043968    30.905  &lt; 2e-16 ***\nDESTIN_SZWDSZ07 -0.2207379  0.0066369   -33.259  &lt; 2e-16 ***\nDESTIN_SZWDSZ08 -0.0264655  0.0065065    -4.068 4.75e-05 ***\nDESTIN_SZWDSZ09 -0.2065828  0.0050524   -40.888  &lt; 2e-16 ***\nDESTIN_SZYSSZ01  0.7467996  0.0040979   182.238  &lt; 2e-16 ***\nDESTIN_SZYSSZ02 -0.3002718  0.0053434   -56.195  &lt; 2e-16 ***\nDESTIN_SZYSSZ03 -1.1087686  0.0057219  -193.778  &lt; 2e-16 ***\nDESTIN_SZYSSZ04 -0.3748076  0.0051481   -72.805  &lt; 2e-16 ***\nDESTIN_SZYSSZ05 -1.7909654  0.0102064  -175.475  &lt; 2e-16 ***\nDESTIN_SZYSSZ06 -1.8519179  0.0099601  -185.933  &lt; 2e-16 ***\nDESTIN_SZYSSZ07 -0.9246626  0.0118101   -78.294  &lt; 2e-16 ***\nDESTIN_SZYSSZ08  0.4403129  0.0041268   106.697  &lt; 2e-16 ***\nDESTIN_SZYSSZ09  0.0267012  0.0041393     6.451 1.11e-10 ***\nlog(dist)       -0.6721961  0.0001353 -4969.566  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 60796037  on 14733  degrees of freedom\nResidual deviance: 20988409  on 14175  degrees of freedom\nAIC: 21081154\n\nNumber of Fisher Scoring iterations: 7\n\n\nThe R-squared value of the doubly-constrained SIM is 0.574.\n\nCalcRSquared(dbcSIM$data$TRIPS, dbcSIM$fitted.values)\n\n[1] 0.5739638"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#model-comparison",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#model-comparison",
    "title": "Hands-on Ex 9B",
    "section": "3.8 Model comparison",
    "text": "3.8 Model comparison\nWe could compare the model performance using the root mean squared error (RMSE). We first create a list of the four models.\n\nmodel_list &lt;- list(unconstrained=uncSIM,\n                   originConstrained=orcSIM,\n                   destinationConstrained=decSIM,\n                   doublyConstrained=dbcSIM)\n\nWe then compute the RMSE of all the models using the compare_performance() function from the performance package. The results show that doubly constrained SIM is the best model with the smallest RMSE value of 3252.\n\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n# Comparison of Model Performance Indices\n\nName                   | Model |     RMSE\n-----------------------------------------\nunconstrained          |   glm | 4177.524\noriginConstrained      |   glm | 3643.596\ndestinationConstrained |   glm | 3347.482\ndoublyConstrained      |   glm | 3252.297"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#visualising-fitted-values",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09B.html#visualising-fitted-values",
    "title": "Hands-on Ex 9B",
    "section": "3.9 Visualising fitted values",
    "text": "3.9 Visualising fitted values\nIn this section, we will visualise the observed values against the fitted values.\n\nExtract models’ fitted valuesVisualisation\n\n\nThe code below extracts the fitted values from each model and appends them to the SIM_data dataset.\n\n# Unconstrained SIM\ndf &lt;- as.data.frame(uncSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(uncTRIPS = \"uncSIM$fitted.values\")\n\n\n# Origin-constrained SIM\ndf &lt;- as.data.frame(orcSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(orcTRIPS = \"orcSIM$fitted.values\")\n\n\n# Destination-constrained SIM\ndf &lt;- as.data.frame(decSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(decTRIPS = \"decSIM$fitted.values\")\n\n\n# Doubly-constrained SIM\ndf &lt;- as.data.frame(dbcSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(dbcTRIPS = \"dbcSIM$fitted.values\")\n\n\n\n\n\nCode\nunc_p &lt;- ggplot(data = SIM_data,\n                aes(x = uncTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\norc_p &lt;- ggplot(data = SIM_data,\n                aes(x = orcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndec_p &lt;- ggplot(data = SIM_data,\n                aes(x = decTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndbc_p &lt;- ggplot(data = SIM_data,\n                aes(x = dbcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\nggarrange(unc_p, orc_p, dec_p, dbc_p,\n          ncol = 2,\n          nrow = 2)\n\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html",
    "title": "In-class Ex 10",
    "section": "",
    "text": "In this exercise, we will walk through the steps of Spatial Interaction analysis and highlight key tips. This exercise follows a similar approach to Hands-on Ex 9A and 9B.\n\npacman::p_load(tmap, sf, sp, DT, stplanr, performance, reshape2, ggpubr, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#bus-commuters-by-origindestination-data",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#bus-commuters-by-origindestination-data",
    "title": "In-class Ex 10",
    "section": "2.1 Bus Commuters by Origin/Destination data",
    "text": "2.1 Bus Commuters by Origin/Destination data\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202210.csv\")\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE) \n\n\nodbus6_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\ndatatable(odbus6_9)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#bus-stop-locations",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#bus-stop-locations",
    "title": "In-class Ex 10",
    "section": "2.2 Bus stop locations",
    "text": "2.2 Bus stop locations\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex10/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#mpsz-2019",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#mpsz-2019",
    "title": "In-class Ex 10",
    "section": "2.3 MPSZ-2019",
    "text": "2.3 MPSZ-2019\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex10/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#retrieve-planning-subzone-of-each-bus-stop",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#retrieve-planning-subzone-of-each-bus-stop",
    "title": "In-class Ex 10",
    "section": "2.4 Retrieve planning subzone of each bus stop",
    "text": "2.4 Retrieve planning subzone of each bus stop\nWhen using st_intersection(), we overlay busstop on the planning subzone. The resulting output is still at the bus stop level.\n\nbusstop_mpsz &lt;- st_intersection(busstop, mpsz) %&gt;%\n  select(BUS_STOP_N, SUBZONE_C) %&gt;%\n  st_drop_geometry()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#combine-origindestination-bus-stops-with-mpsz",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#combine-origindestination-bus-stops-with-mpsz",
    "title": "In-class Ex 10",
    "section": "2.5 Combine origin/destination bus stops with mpsz",
    "text": "2.5 Combine origin/destination bus stops with mpsz\nWe retrieve the subzone id for the origin bus stops:\n\nod_data &lt;- left_join(odbus6_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nWe can use the code below to check for duplicated records.\n\nduplicate &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\nduplicate\n\n# A tibble: 976 × 4\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ\n   &lt;chr&gt;     &lt;fct&gt;     &lt;dbl&gt; &lt;chr&gt;    \n 1 22501     22009         3 JWSZ09   \n 2 22501     22009         3 JWSZ09   \n 3 22501     22451        85 JWSZ09   \n 4 22501     22451        85 JWSZ09   \n 5 22501     22469        18 JWSZ09   \n 6 22501     22469        18 JWSZ09   \n 7 22501     22479        29 JWSZ09   \n 8 22501     22479        29 JWSZ09   \n 9 22501     22509         3 JWSZ09   \n10 22501     22509         3 JWSZ09   \n# ℹ 966 more rows\n\n\nIf there are duplicated records, we use unique() to de-duplicate them.\n\nod_data &lt;- unique(od_data)\n\nWe retrieve the subzone id for the destination bus stops:\n\nod_data &lt;- left_join(od_data , busstop_mpsz,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) \n\nWe can use the code below to check for duplicated records.\n\nduplicate &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\nduplicate\n\n# A tibble: 1,256 × 5\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ SUBZONE_C\n   &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    \n 1 1012      82221         1 &lt;NA&gt;      GLSZ05   \n 2 1012      82221         1 &lt;NA&gt;      GLSZ05   \n 3 1112      51071        49 &lt;NA&gt;      CCSZ01   \n 4 1112      51071        49 &lt;NA&gt;      CCSZ01   \n 5 1112      53041         4 &lt;NA&gt;      BSSZ01   \n 6 1112      53041         4 &lt;NA&gt;      BSSZ01   \n 7 1112      82221         1 &lt;NA&gt;      GLSZ05   \n 8 1112      82221         1 &lt;NA&gt;      GLSZ05   \n 9 1113      51071         2 &lt;NA&gt;      CCSZ01   \n10 1113      51071         2 &lt;NA&gt;      CCSZ01   \n# ℹ 1,246 more rows\n\n\nIf there are duplicated records, we use unique() to de-duplicate them.\n\nod_data &lt;- unique(od_data)\n\nIn the final step, we remove rows with null values in either the origin or destination subzone, then aggregate the total number of trips for each origin-destination subzone pair.\n\nod_data &lt;- od_data %&gt;%\n  rename(DESTIN_SZ = SUBZONE_C) %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;%\n  summarise(MORNING_PEAK = sum(TRIPS))\nglimpse(od_data)\n\nRows: 14,734\nColumns: 3\nGroups: ORIGIN_SZ [279]\n$ ORIGIN_SZ    &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01…\n$ DESTIN_SZ    &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMSZ06…\n$ MORNING_PEAK &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63,…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#remove-intra-zonal-flows",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#remove-intra-zonal-flows",
    "title": "In-class Ex 10",
    "section": "3.1 Remove intra-zonal flows",
    "text": "3.1 Remove intra-zonal flows\nThis study excludes intra-zonal flows, so they are removed from the analysis.\n\nod_data_fij &lt;- od_data[od_data$ORIGIN_SZ != od_data$DESTIN_SZ,]"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#create-inter-zonal-desire-lines",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#create-inter-zonal-desire-lines",
    "title": "In-class Ex 10",
    "section": "3.2 Create inter-zonal desire lines",
    "text": "3.2 Create inter-zonal desire lines\nWe use the od2line() function from the stplanr package to create inter-zonal desire lines.\n\nflowLine &lt;- od2line(flow = od_data_fij, \n                    zones = mpsz,\n                    zone_code = \"SUBZONE_C\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#visualise-desire-lines",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#visualise-desire-lines",
    "title": "In-class Ex 10",
    "section": "3.3 Visualise desire lines",
    "text": "3.3 Visualise desire lines\n\nDesire lines on weekday morning peak hoursFiltering high-intensity desire lines\n\n\nThe map below shows inter-zonal bus commuter flows on weekdays between 6:00 and 9:00 am.\n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %&gt;%  \ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.5)\n\n\n\n\n\n\nWhen inter-zonal bus commuter flows are complex or highly skewed, it can be effective to focus on selected flows, such as those with values greater than or equal to 5,000, as shown below.\n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.5)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#convert-to-sp-dataframe",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#convert-to-sp-dataframe",
    "title": "In-class Ex 10",
    "section": "4.1 Convert to sp dataframe",
    "text": "4.1 Convert to sp dataframe\nBefore computing the distance matrix (i.e., distances between pairs of locations), we convert the sf dataframe to an sp dataframe. Although the distance matrix can be computed directly from an sf dataframe, the sp method is generally more time-efficient.\n\nmpsz_sp &lt;- as(mpsz, \"Spatial\")\nmpsz_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 332 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 6\nnames       : SUBZONE_N, SUBZONE_C, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C \nmin values  : ADMIRALTY,    AMSZ01, ANG MO KIO,         AM, CENTRAL REGION,       CR \nmax values  :    YUNNAN,    YSSZ09,     YISHUN,         YS,    WEST REGION,       WR"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#compute-distance-matrix",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#compute-distance-matrix",
    "title": "In-class Ex 10",
    "section": "4.2 Compute distance matrix",
    "text": "4.2 Compute distance matrix\nWe use the spDists() function from the sp package to compute the Euclidean distance between the centroids of the planning subzones.\n\ndist &lt;- spDists(mpsz_sp, \n                longlat = FALSE)\nhead(dist, n=c(10, 10))\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]      [,7]\n [1,]     0.000  3926.0025  3939.108 20252.964  2989.9839  1431.330 19211.836\n [2,]  3926.003     0.0000   305.737 16513.865   951.8314  5254.066 16242.523\n [3,]  3939.108   305.7370     0.000 16412.062  1045.9088  5299.849 16026.146\n [4,] 20252.964 16513.8648 16412.062     0.000 17450.3044 21665.795  7229.017\n [5,]  2989.984   951.8314  1045.909 17450.304     0.0000  4303.232 17020.916\n [6,]  1431.330  5254.0664  5299.849 21665.795  4303.2323     0.000 20617.082\n [7,] 19211.836 16242.5230 16026.146  7229.017 17020.9161 20617.082     0.000\n [8,] 14960.942 12749.4101 12477.871 11284.279 13336.0421 16281.453  5606.082\n [9,]  7515.256  7934.8082  7649.776 18427.503  7801.6163  8403.896 14810.930\n[10,]  6391.342  4975.0021  4669.295 15469.566  5226.8731  7707.091 13111.391\n           [,8]      [,9]     [,10]\n [1,] 14960.942  7515.256  6391.342\n [2,] 12749.410  7934.808  4975.002\n [3,] 12477.871  7649.776  4669.295\n [4,] 11284.279 18427.503 15469.566\n [5,] 13336.042  7801.616  5226.873\n [6,] 16281.453  8403.896  7707.091\n [7,]  5606.082 14810.930 13111.391\n [8,]     0.000  9472.024  8575.490\n [9,]  9472.024     0.000  3780.800\n[10,]  8575.490  3780.800     0.000"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#label-row-and-column-headers-of-distance-matrix",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#label-row-and-column-headers-of-distance-matrix",
    "title": "In-class Ex 10",
    "section": "4.3 Label row and column headers of distance matrix",
    "text": "4.3 Label row and column headers of distance matrix\nSince the row and column headers of the distance matrix are unlabeled, we perform the following steps to add labels for the planning subzone codes:\n\nCreate a list of planning subzone codes sorted to match the order of the distance matrix.\nAttach SUBZONE_C labels to the rows and columns of the distance matrix for alignment.\n\n\nsz_names &lt;- mpsz$SUBZONE_C\n\ncolnames(dist) &lt;- paste0(sz_names)\nrownames(dist) &lt;- paste0(sz_names)\n\nhead(dist, n=c(5, 5))\n\n          MESZ01     RVSZ05    SRSZ01   WISZ01     MUSZ02\nMESZ01     0.000  3926.0025  3939.108 20252.96  2989.9839\nRVSZ05  3926.003     0.0000   305.737 16513.86   951.8314\nSRSZ01  3939.108   305.7370     0.000 16412.06  1045.9088\nWISZ01 20252.964 16513.8648 16412.062     0.00 17450.3044\nMUSZ02  2989.984   951.8314  1045.909 17450.30     0.0000"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#convert-distance-matrix-to-long-table-format",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#convert-distance-matrix-to-long-table-format",
    "title": "In-class Ex 10",
    "section": "4.4 Convert distance matrix to long table format",
    "text": "4.4 Convert distance matrix to long table format\nWe use the melt() function to convert the distance matrix into a long-table format. Note that intra-zonal distances are 0.\n\ndistPair &lt;- melt(dist) %&gt;%\n  rename(dist = value)\nhead(distPair, 10)\n\n     Var1   Var2      dist\n1  MESZ01 MESZ01     0.000\n2  RVSZ05 MESZ01  3926.003\n3  SRSZ01 MESZ01  3939.108\n4  WISZ01 MESZ01 20252.964\n5  MUSZ02 MESZ01  2989.984\n6  MPSZ05 MESZ01  1431.330\n7  WISZ03 MESZ01 19211.836\n8  WISZ02 MESZ01 14960.942\n9  SISZ02 MESZ01  7515.256\n10 SISZ01 MESZ01  6391.342"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#update-intra-zonal-distance",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#update-intra-zonal-distance",
    "title": "In-class Ex 10",
    "section": "4.5 Update intra-zonal distance",
    "text": "4.5 Update intra-zonal distance\nWe assign a small non-zero constant to replace intra-zonal distances of 0.\nFirst, we find out the minimum inter-zonal distance using summary().\n\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n      Var1             Var2             dist        \n MESZ01 :   331   MESZ01 :   331   Min.   :  173.8  \n RVSZ05 :   331   RVSZ05 :   331   1st Qu.: 7149.5  \n SRSZ01 :   331   SRSZ01 :   331   Median :11890.0  \n WISZ01 :   331   WISZ01 :   331   Mean   :12229.4  \n MUSZ02 :   331   MUSZ02 :   331   3rd Qu.:16401.7  \n MPSZ05 :   331   MPSZ05 :   331   Max.   :49894.4  \n (Other):107906   (Other):107906                    \n\n\nWe assign a constant of 50m to replace intra-zonal distances.\n\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        50, distPair$dist)\n\ndistPair %&gt;%\n  summary()\n\n      Var1             Var2             dist      \n MESZ01 :   332   MESZ01 :   332   Min.   :   50  \n RVSZ05 :   332   RVSZ05 :   332   1st Qu.: 7097  \n SRSZ01 :   332   SRSZ01 :   332   Median :11864  \n WISZ01 :   332   WISZ01 :   332   Mean   :12193  \n MUSZ02 :   332   MUSZ02 :   332   3rd Qu.:16388  \n MPSZ05 :   332   MPSZ05 :   332   Max.   :49894  \n (Other):108232   (Other):108232                  \n\n\nWe rename the variables for clarity.\n\ndistPair &lt;- distPair %&gt;%\n  rename(orig = Var1,\n         dest = Var2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#prepare-flow-data",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#prepare-flow-data",
    "title": "In-class Ex 10",
    "section": "4.6 Prepare flow data",
    "text": "4.6 Prepare flow data\n\n1. Import OD matrix of bus commuter flow2. Compute total bus commuter trips3. Add new fields for intra-zonal flows4. Combine flow data with distance\n\n\nThe OD matrix of bus commuter flow was computed in Ex 9A. We will import the OD matrix for this exercise.\n\nod_data_fii &lt;- read_rds(\"data/rds/od_data_fii.rds\")\n\n\n\nWe compute the total commuter trips between and within planning subzones as follows:\n\nflow_data &lt;- od_data_fii %&gt;%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;% \n  summarize(TRIPS = sum(MORNING_PEAK)) \nhead(flow_data, 10)\n\n# A tibble: 10 × 3\n# Groups:   ORIGIN_SZ [1]\n   ORIGIN_SZ DESTIN_SZ TRIPS\n   &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt;\n 1 AMSZ01    AMSZ01     1998\n 2 AMSZ01    AMSZ02     8289\n 3 AMSZ01    AMSZ03     8971\n 4 AMSZ01    AMSZ04     2252\n 5 AMSZ01    AMSZ05     6136\n 6 AMSZ01    AMSZ06     2148\n 7 AMSZ01    AMSZ07     1620\n 8 AMSZ01    AMSZ08     1925\n 9 AMSZ01    AMSZ09     1773\n10 AMSZ01    AMSZ10       63\n\n\n\n\nTwo new fields specific to intra-zonal flows are added to the dataset.\n\nflow_data$FlowNoIntra &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$TRIPS)\nflow_data$offset &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\nglimpse(flow_data)\n\nRows: 14,734\nColumns: 5\nGroups: ORIGIN_SZ [279]\n$ ORIGIN_SZ   &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\"…\n$ DESTIN_SZ   &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMSZ06\"…\n$ TRIPS       &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63, …\n$ FlowNoIntra &lt;dbl&gt; 0, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63, 542…\n$ offset      &lt;dbl&gt; 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e…\n\n\n\n\nBefore joining the flow data with the distance dataset, we need to convert the origin and destination subzones to factor data types.\n\nflow_data$ORIGIN_SZ &lt;- as.factor(flow_data$ORIGIN_SZ)\nflow_data$DESTIN_SZ &lt;- as.factor(flow_data$DESTIN_SZ)\n\nflow_data1 &lt;- flow_data %&gt;%\n  left_join(distPair,\n            by = c(\"ORIGIN_SZ\" = \"orig\", \"DESTIN_SZ\" = \"dest\"))\nglimpse(flow_data1)\n\nRows: 14,734\nColumns: 6\nGroups: ORIGIN_SZ [279]\n$ ORIGIN_SZ   &lt;fct&gt; AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AM…\n$ DESTIN_SZ   &lt;fct&gt; AMSZ01, AMSZ02, AMSZ03, AMSZ04, AMSZ05, AMSZ06, AMSZ07, AM…\n$ TRIPS       &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63, …\n$ FlowNoIntra &lt;dbl&gt; 0, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63, 542…\n$ offset      &lt;dbl&gt; 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e…\n$ dist        &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805.297…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#section",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#section",
    "title": "In-class Ex 10",
    "section": "4.7",
    "text": "4.7\n\n1. Import sub-zone population data\n\npop &lt;- read_csv(\"data/aspatial/pop.csv\")\nglimpse(pop)\n\nRows: 332\nColumns: 5\n$ PA       &lt;chr&gt; \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG …\n$ SZ       &lt;chr&gt; \"ANG MO KIO TOWN CENTRE\", \"CHENG SAN\", \"CHONG BOON\", \"KEBUN B…\n$ AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 1050, 420, 810, 390, 980, 0, 260, 0, 1190, 6…\n$ AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2390, 1120, 1920, 1150, 2000, 0, 650, 0, 326…\n$ AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 12460, 3620, 9650, 4350, 11320, 0, 2500, …\n\n\n\n\n2. Append subzone code\nWe left join pop dataset with mpsz dataset to retrieve the subzone codes.\n\npop &lt;- pop %&gt;%\n  left_join(mpsz,\n            by = c(\"PA\" = \"PLN_AREA_N\",\n                   \"SZ\" = \"SUBZONE_N\")) %&gt;%\n  select(1:6) %&gt;%\n  rename(SZ_NAME = SZ,\n         SZ = SUBZONE_C)\nglimpse(pop)\n\nRows: 332\nColumns: 6\n$ PA       &lt;chr&gt; \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG …\n$ SZ_NAME  &lt;chr&gt; \"ANG MO KIO TOWN CENTRE\", \"CHENG SAN\", \"CHONG BOON\", \"KEBUN B…\n$ AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 1050, 420, 810, 390, 980, 0, 260, 0, 1190, 6…\n$ AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2390, 1120, 1920, 1150, 2000, 0, 650, 0, 326…\n$ AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 12460, 3620, 9650, 4350, 11320, 0, 2500, …\n$ SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ06\", \"AMSZ07\", \"AMSZ05\", \"…\n\n\n\n\n3. Prepare origin attribute\nWe add origin attributes to the flow data.\n\nflow_data1 &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            by = c(ORIGIN_SZ = \"SZ\")) %&gt;%\n  rename(ORIGIN_AGE7_12 = AGE7_12,\n         ORIGIN_AGE13_24 = AGE13_24,\n         ORIGIN_AGE25_64 = AGE25_64) %&gt;%\n  select(-c(PA, SZ_NAME))\n\n\n\n4. Prepare destination attribute\nWe add destination attributes to the flow data.\n\nSIM_data &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            by = c(DESTIN_SZ = \"SZ\")) %&gt;%\n  rename(DESTIN_AGE7_12 = AGE7_12,\n         DESTIN_AGE13_24 = AGE13_24,\n         DESTIN_AGE25_64 = AGE25_64) %&gt;%\n  select(-c(PA, SZ_NAME))\nglimpse(SIM_data)\n\nRows: 14,734\nColumns: 12\nGroups: ORIGIN_SZ [279]\n$ ORIGIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ TRIPS           &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, …\n$ FlowNoIntra     &lt;dbl&gt; 0, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, 63,…\n$ offset          &lt;dbl&gt; 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00…\n$ dist            &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  &lt;dbl&gt; 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 &lt;dbl&gt; 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 &lt;dbl&gt; 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 980, 810, 1050, 420, 390, 1190, 0, 0,…\n$ DESTIN_AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2000, 1920, 2390, 1120, 1150, 3260, 0…\n$ DESTIN_AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 11320, 9650, 12460, 3620, 4350, 13…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#replace-zero-values-with-0.99",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#replace-zero-values-with-0.99",
    "title": "In-class Ex 10",
    "section": "3.3 Replace zero values with 0.99",
    "text": "3.3 Replace zero values with 0.99\nWe replace all zero values in the affected explanatory variables with 0.99.\n\nSIM_data$DESTIN_AGE7_12 &lt;- ifelse(\n  SIM_data$DESTIN_AGE7_12 == 0,\n  0.99, SIM_data$DESTIN_AGE7_12)\nSIM_data$DESTIN_AGE13_24 &lt;- ifelse(\n  SIM_data$DESTIN_AGE13_24 == 0,\n  0.99, SIM_data$DESTIN_AGE13_24)\nSIM_data$DESTIN_AGE25_64 &lt;- ifelse(\n  SIM_data$DESTIN_AGE25_64 == 0,\n  0.99, SIM_data$DESTIN_AGE25_64)\nSIM_data$ORIGIN_AGE7_12 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE7_12 == 0,\n  0.99, SIM_data$ORIGIN_AGE7_12)\nSIM_data$ORIGIN_AGE13_24 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE13_24 == 0,\n  0.99, SIM_data$ORIGIN_AGE13_24)\nSIM_data$ORIGIN_AGE25_64 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE25_64 == 0,\n  0.99, SIM_data$ORIGIN_AGE25_64)\n\n\nsummary(SIM_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS         FlowNoIntra      \n Length:14734       Length:14734       Min.   :     1   Min.   :     0.0  \n Class :character   Class :character   1st Qu.:    14   1st Qu.:    13.0  \n Mode  :character   Mode  :character   Median :    76   Median :    70.0  \n                                       Mean   :  1021   Mean   :   839.9  \n                                       3rd Qu.:   426   3rd Qu.:   379.0  \n                                       Max.   :232187   Max.   :148274.0  \n     offset              dist       ORIGIN_AGE7_12    ORIGIN_AGE13_24   \n Min.   :0.000001   Min.   :   50   Min.   :   0.99   Min.   :    0.99  \n 1st Qu.:1.000000   1st Qu.: 3346   1st Qu.: 240.00   1st Qu.:  440.00  \n Median :1.000000   Median : 6067   Median : 700.00   Median : 1350.00  \n Mean   :0.982150   Mean   : 6880   Mean   :1031.86   Mean   : 2268.84  \n 3rd Qu.:1.000000   3rd Qu.: 9729   3rd Qu.:1480.00   3rd Qu.: 3260.00  \n Max.   :1.000000   Max.   :26136   Max.   :6340.00   Max.   :16380.00  \n ORIGIN_AGE25_64    DESTIN_AGE7_12    DESTIN_AGE13_24    DESTIN_AGE25_64   \n Min.   :    0.99   Min.   :   0.99   Min.   :    0.99   Min.   :    0.99  \n 1st Qu.: 2200.00   1st Qu.: 240.00   1st Qu.:  460.00   1st Qu.: 2200.00  \n Median : 6810.00   Median : 720.00   Median : 1420.00   Median : 7030.00  \n Mean   :10487.62   Mean   :1033.40   Mean   : 2290.35   Mean   :10574.46  \n 3rd Qu.:15770.00   3rd Qu.:1500.00   3rd Qu.: 3260.00   3rd Qu.:15830.00  \n Max.   :74610.00   Max.   :6340.00   Max.   :16380.00   Max.   :74610.00"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#unconstrained-sim",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#unconstrained-sim",
    "title": "In-class Ex 10",
    "section": "3.4 Unconstrained SIM",
    "text": "3.4 Unconstrained SIM\nThe model shows that there is a positive relationship (0.82) between origin age 13-24 with the flow. There is an inverse relationship between distance and the total trips (-0.686), which is expected.\n\nuncSIM &lt;- glm(formula = TRIPS ~ \n                log(ORIGIN_AGE7_12) + \n                log(DESTIN_AGE7_12) +\n                log(ORIGIN_AGE13_24) + \n                log(DESTIN_AGE13_24) +\n                log(ORIGIN_AGE25_64) + \n                log(DESTIN_AGE25_64) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nuncSIM\n\n\nCall:  glm(formula = TRIPS ~ log(ORIGIN_AGE7_12) + log(DESTIN_AGE7_12) + \n    log(ORIGIN_AGE13_24) + log(DESTIN_AGE13_24) + log(ORIGIN_AGE25_64) + \n    log(DESTIN_AGE25_64) + log(dist), family = poisson(link = \"log\"), \n    data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n         (Intercept)   log(ORIGIN_AGE7_12)   log(DESTIN_AGE7_12)  \n             10.8165                0.2906                0.1211  \nlog(ORIGIN_AGE13_24)  log(DESTIN_AGE13_24)  log(ORIGIN_AGE25_64)  \n              0.8176                0.4314               -0.7111  \nlog(DESTIN_AGE25_64)             log(dist)  \n             -0.4464               -0.6860  \n\nDegrees of Freedom: 14733 Total (i.e. Null);  14726 Residual\nNull Deviance:      60800000 \nResidual Deviance: 34170000     AIC: 34260000\n\n\nWe use McFadden’s R-squared which is metric for evaluating logistic, Poisson, and negative-binomial regression models.\n\nr2_mcfadden(uncSIM)\n\n# R2 for Generalized Linear Regression\n       R2: 0.437\n  adj. R2: 0.437"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex10/data/geospatial/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "",
    "text": "Financial inclusion is a critical driver of economic growth, macroeconomic stability, and poverty reduction (Nguyen et al., 2021). Grounded in the Schumpeterian model, evidence from countries like Vietnam demonstrates how accessible financial services can empower individuals and businesses to invest, grow, and contribute to broader economic stability. When financial services are widely available, wealth distribution becomes more equitable across social groups. In contrast, when access is limited often to a select affluent population, only this group could grow their wealth, while economically disadvantaged households struggle to get the funding they need (Hamden et al., 2022; Kaliba, Bishagazi, & Gongwe, 2023).\nIn Uganda, approximately 76% of the population resides in rural areas, with agriculture as the main source of income (Hamden et al., 2022). Since the introduction of mobile money in 2009, over 80% of Ugandan adults have acquired a mobile money account, making it the most commonly used financial service (FinScope, 2024; Hamden et al., 2022). However, active account usage remains low, with only 49% of account holders using mobile money regularly (Hamden et al., 2022). While mobile phone ownership and internet access have grown substantially, significant gender and regional gaps persist, particularly affecting rural and marginalised communities such as females (FinScope, 2024). These disparities highlight the challenge of creating a fully inclusive financial system that reaches all demographic groups.\nAlthough previous studies have explored factors influencing financial inclusion, they often take a generalised approach, overlooking geographical variations. This study addresses this gap by applying geographically weighted regression (GWR) to analyse the factors influencing financial inclusion in Uganda at the district level. By adopting this approach, this study aims to uncover district-level factors and patterns of financial inclusion, offering insights that can inform targeted policies and interventions.\n\n\n\nThis study utilises two key datasets:\n\nFinScope Uganda 2023 Survey Dataset: This aspatial dataset includes responses from 3,176 Ugandan adults (aged 16 and older), providing insights into attitudes and behaviors around money management, financial products, and services. Respondents were selected through a rigorous stratified sampling process to ensure representativeness.\nUganda District Boundaries (2020): Geographical boundary data obtained from geoBoundaries, detailing the administrative district boundaries across Uganda.\n\n\n\n\nThe following R packages are loaded for this study:\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, sfdep, GWmodel, tmap, tidyverse, gtsummary, ggstatsplot, performance, see, readxl)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#objectives",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#objectives",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "",
    "text": "This study employs"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#r-packages",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#r-packages",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "",
    "text": "The following R packages are loaded for this study:\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, sfdep, GWmodel, tmap, tidyverse, gtsummary, ggstatsplot, performance, see, readxl)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#demographics",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#demographics",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.1 Demographics",
    "text": "2.1 Demographics\nDemographic variables in this study include:\n\nAge: We created four age-band variables to capture meaningful life stages (16–24, 25–34, 35–44, and 45–54) for aggregation at the district level in subsequent regression analysis. This age-group structure represents the district-level age distribution while avoiding perfect multicollinearity by omitting the 55+ group. Each age group was coded using if_else(), tagging respondents within the group as 1, otherwise as 0.\nGender: Females were tagged as 1 and males as 0.\nEducation: Four education-level variables (primary, secondary, vocational, and degree) were created, with “no formal education” excluded to prevent multicollinearity.\nHousehold Size: Households of five or more members were considered large and tagged as 1.\nRural/Urban: Respondents in rural areas were tagged as 1.\nEmployment Status: We created three variables: formal employment, self-employment, and unemployment. An additional variable, “non-working,” was used for data wrangling but excluded from regression analysis.\nAgricultural Business: Involvement in such businesses were tagged as 1, otherwise as 0.\n\nData preparation involved mutate(), if_else(), and/or case_when() functions, replacing coded missing values (e.g., 999, 998) with NA_real_ to specify a numeric NA type. Variables that are no longer needed are removed using select() and -c() functions.\n\nfin_df1 &lt;- fin_df %&gt;%\n  mutate(age16_24 = if_else(age &lt;= 24, 1, 0),\n         age25_34 = if_else(age &gt;= 25 & age &lt;= 34, 1, 0),\n         age35_44 = if_else(age &gt;= 35 & age &lt;= 44, 1, 0),\n         age45_54 = if_else(age &gt;= 45 & age &lt;= 54, 1, 0)) %&gt;%\n  mutate(gender_female = if_else(gender == 2, 1, 0)) %&gt;%\n  mutate(education_pri = if_else(education %in% c(2,3), 1, 0),\n         education_sec = if_else(education %in% c(4,5), 1, 0),\n         education_voc = if_else(education %in% c(6,7), 1, 0),\n         education_deg = if_else(education == 8, 1, 0)) %&gt;%\n  mutate(household_big = if_else(household_size %in% c(2,3), 1, 0)) %&gt;%\n  mutate(is_rural = if_else(rural_urban == \"Rural\", 1, 0)) %&gt;%\n  mutate(employment_formal = case_when(employment %in% c(3,4,6) ~ 1,\n                                       employment == 99 ~ NA_real_,\n                                       TRUE ~ 0),\n         employment_self = case_when(employment %in% c(1,2) ~ 1,\n                                     employment == 99 ~ NA_real_,\n                                     TRUE ~ 0),\n         employment_unemployed = case_when(employment == 7 ~ 1,\n                                           employment == 99 ~ NA_real_,\n                                           TRUE ~ 0),\n         employment_nonworking = case_when(employment %in% c(7,5,8,9,10) ~ 1,\n                                           employment == 99 ~ NA_real_,\n                                           TRUE ~ 0)) %&gt;%\n  mutate(is_agribusiness = if_else(agribusiness == 1, 1, 0)) %&gt;%\n  select(-c(age, gender, education, household_size, rural_urban, employment, agribusiness))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#income",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#income",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2. Income",
    "text": "2. Income\nincome_source1, income1 low income &lt;= 250K per month med income up till 1M high income above 1M\n\nfin_df2 &lt;- fin_df1 %&gt;%\n  mutate(income1 = if_else(income1 %in% c(8,9,99,997,998), NA_real_, income1),\n         income2 = if_else(income2 %in% c(8,9,99,997,998), NA_real_, income2),\n         income3 = if_else(income3 %in% c(8,9,99,997,998), NA_real_, income3),\n         earned_income1 = case_when(income_source1 %in% c(5,6,7,8,9,10,11) ~ 0,\n                                    income_source1 %in% c(1,2,3,4) ~ income1,\n                                    employment_nonworking == 1 ~ 0,\n                                    TRUE ~ NA_real_),\n         earned_income2 = case_when(income_source2 %in% c(5,6,7,8,9,10,11) ~ 0,\n                                    income_source2 %in% c(1,2,3,4) ~ income2,\n                                    employment_nonworking == 1 ~ 0,\n                                    TRUE ~ NA_real_),\n         earned_income3 = case_when(income_source3 %in% c(5,6,7,8,9,10,11) ~ 0,\n                                    income_source3 %in% c(1,2,3,4) ~ income3,\n                                    employment_nonworking == 1 ~ 0,\n                                    TRUE ~ NA_real_),\n         earned_income = pmax(earned_income1, earned_income2, earned_income3)) %&gt;%\n  mutate(earned_low = case_when(earned_income %in% c(1,2) ~ 1,\n                                is.na(earned_income) ~ NA_real_,\n                                TRUE ~ 0),\n         earned_med = case_when(earned_income %in% c(3,4) ~ 1,\n                                is.na(earned_income) ~ NA_real_,\n                                TRUE ~ 0),\n         earned_high = case_when(earned_income %in% c(5,6,7) ~ 1,\n                                is.na(earned_income) ~ NA_real_,\n                                TRUE ~ 0))\n\n\nfin_df2 &lt;- fin_df2 %&gt;%\n  rowwise() %&gt;%\n  mutate(income_source_cnt = sum(!income_source1 %in% c(10,11),\n                                 !income_source2 %in% c(10,11),\n                                 !income_source3 %in% c(10,11))) %&gt;%\n  ungroup() %&gt;%\n  select(-c(income1, income2, income3, earned_income,\n            earned_income1, earned_income2, earned_income3,\n            income_source1, income_source2, income_source3,\n            employment_nonworking))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#digital-connectivity-literacy",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#digital-connectivity-literacy",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.3 Digital Connectivity & Literacy",
    "text": "2.3 Digital Connectivity & Literacy\nFor digital connectivity and literacy, we considered three variables:\n\nMobile Ownership: Tagged as 1 if the respondent owns a mobile phone (either smartphone or feature phone), otherwise 0.\nInternet Access: Tagged as 1 if the respondent has internet access, otherwise 0.\nDigital Literacy: Calculated as the sum of respondents’ comfort with using mobile phones and the internet, with 1 point assigned for each if literacy_mobile == 1 and literacy_internet == 1.\n\nIn the code, we used relocate() to position these variables as the last columns in the data frame. To compute digital literacy, rowwise() was applied before calculating the combined score for each individual. Finally, we removed variables that were no longer needed.\n\nfin_df3 &lt;- fin_df2 %&gt;% \n  mutate(own_mobile_phone = if_else(own_mobile_phone == 1, 1, 0)) %&gt;%\n  mutate(access_internet = if_else(access_internet == 1, 1, 0)) %&gt;%\n  relocate(c(own_mobile_phone, access_internet), .after = last_col()) %&gt;%\n  rowwise() %&gt;%\n  mutate(digital_literacy = sum(literacy_mobile == 1,literacy_internet == 1)) %&gt;%\n  ungroup() %&gt;%\n  select(-c(is_smartphone, literacy_mobile, literacy_internet))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-literacy",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-literacy",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "4. Financial Literacy",
    "text": "4. Financial Literacy\n\nPlanning/Budgeting\nfinliteracy_plan1=e5_11, finliteracy_plan2=e5_12, finliteracy_plan3=e5_13, finliteracy_plan4=e5_14, finliteracy_plan5=e5_16 +You keep track of the money that you receive and spend +You know how much money you spent last week +You adjust your expenses according to the money you have available +You make a plan or budget to manage your income and expenses +I set long term financial goals and try to achieve them\n\nfin_df4 &lt;- fin_df3 %&gt;%\n  mutate(finliteracy_plan1 = if_else(finliteracy_plan1 == 1, 1, 0),\n         finliteracy_plan2 = if_else(finliteracy_plan2 == 1, 1, 0),\n         finliteracy_plan3 = if_else(finliteracy_plan3 == 1, 1, 0),\n         finliteracy_plan4 = if_else(finliteracy_plan4 == 1, 1, 0),\n         finliteracy_plan5 = if_else(finliteracy_plan5 == 1, 1, 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finliteracy_plan = mean(c(finliteracy_plan1, finliteracy_plan2, \n                                   finliteracy_plan3, finliteracy_plan4,\n                                   finliteracy_plan5))) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finliteracy_plan1, finliteracy_plan2, finliteracy_plan3, \n            finliteracy_plan4, finliteracy_plan5))\n\n\n\nSaving Behaviour\nfinliteracy_save1=f1_1_1, finliteracy_save2=f1_1_3, finliteracy_save3=f1_1_4, finliteracy_save4=f2_1, + You sometimes do not buy things that you want so that you save money instead + You get information about different ways of savings before you decide where/how to save + You try different savings options to find the one where you can get the most interest. + In the past 12 months ? Have you (personally) been saving money in any way?\n\nfin_df4 &lt;- fin_df4 %&gt;%\n  mutate(finliteracy_save1 = if_else(finliteracy_save1 == 1, 1, 0),\n         finliteracy_save2 = if_else(finliteracy_save2 == 1, 1, 0),\n         finliteracy_save3 = if_else(finliteracy_save3 == 1, 1, 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finliteracy_save = mean(c(finliteracy_save1, finliteracy_save2, finliteracy_save3))) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finliteracy_save1, finliteracy_save2, finliteracy_save3))\n\n\n\nAwareness of Financial Products\nfinliteracy_aware1=g1_2, finliteracy_aware2=h2_1_3, finliteracy_aware3=h2_1_4, finliteracy_aware4=h2_1_5, finliteracy_aware5=h2_1_8, finliteracy_aware6=h2_1_9 Are you aware of digital loans? Debit Cards Credit Cards Mobile or Internet Banking Mobile Money wallets or E-money wallets Remittance Channels, e.g., MoneyGram, Western Union\n\nfin_df4 &lt;- fin_df4 %&gt;%\n  mutate(finliteracy_aware1 = if_else(finliteracy_aware1 == 1, 1, 0),\n         finliteracy_aware2 = if_else(finliteracy_aware2 == 1, 1, 0),\n         finliteracy_aware3 = if_else(finliteracy_aware3 == 1, 1, 0),\n         finliteracy_aware4 = if_else(finliteracy_aware4 == 1, 1, 0),\n         finliteracy_aware5 = if_else(finliteracy_aware5 == 1, 1, 0),\n         finliteracy_aware6 = if_else(finliteracy_aware6 == 1, 1, 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finliteracy_aware = mean(c(finliteracy_aware1, finliteracy_aware2, \n                                    finliteracy_aware3, finliteracy_aware4,\n                                    finliteracy_aware5, finliteracy_aware6))) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finliteracy_aware1, finliteracy_aware2, finliteracy_aware3, \n            finliteracy_aware4, finliteracy_aware5, finliteracy_aware6))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "5. Financial Inclusion",
    "text": "5. Financial Inclusion\nfinincl_risk=j1,\nDo you have any existing Insurance policy?\n\nfin_df5 &lt;- fin_df4 %&gt;%\n  mutate(finincl_risk = if_else(finincl_risk == 1, 1, 0)) %&gt;%\n  relocate(finincl_risk, .after = last_col()) \n\nfinincl_save1=f20, finincl_save2=f3_1_1, finincl_save3=f3_1_2, finincl_save4=f3_1_3, finincl_save5=f3_1_4, finincl_save6=f3_1_5, finincl_save7=f3_1_6, finincl_save8=f3_1_8, finincl_save9=f3_1_9,\nHave you ever saved electronically? Please tell me which of the following did you use for saving or keeping money you put away in the past 12 months? Commercial Bank Credit Institution MDI Savings and credit cooperatives (SACCOs) including shares Microfinance Institutions Mobile money Savings group (VSLA, ROSCA) Investment club\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  mutate(finincl_save1 = if_else(finincl_save1 == 1, 1, 0),\n         finincl_save2 = case_when(finincl_save2 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save3 = case_when(finincl_save3 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save4 = case_when(finincl_save4 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save5 = case_when(finincl_save5 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save6 = case_when(finincl_save6 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save7 = case_when(finincl_save7 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save8 = case_when(finincl_save8 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save9 = case_when(finincl_save9 == 1 ~ 1,\n                                   TRUE ~ 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finincl_save = sum(finincl_save1, finincl_save2, finincl_save3,\n                            finincl_save4, finincl_save5, finincl_save6,\n                            finincl_save7, finincl_save8, finincl_save9),\n         finincl_save = pmin(finincl_save, 2)) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finincl_save1, finincl_save2, finincl_save3,\n            finincl_save4, finincl_save5, finincl_save6,\n            finincl_save7, finincl_save8, finincl_save9))\n\nfinincl_remit1=hpp1_1, finincl_remit2=hpp4_1,\nIn the past 12 months, have you sent money to someone in a different place within the country or outside of Uganda? In the past 12 months, have you received money from someone in a different place within the country or from outside the country?\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  mutate(finincl_remit1 = if_else(finincl_remit1 == 1, 1, 0),\n         finincl_remit2 = if_else(finincl_remit2 == 1, 1, 0),\n         finincl_remit = pmax(finincl_remit1, finincl_remit2)) %&gt;%\n  select(-c(finincl_remit1, finincl_remit2))\n\nfinincl_pay1=hpb22, finincl_pay2=hpb23, finincl_pay3=hpb24, finincl_pay4=hpb25, finincl_pay5=hpb26,\nhpb22. Ever used to pay for goods and services: ATM / Debit card hpb23. Ever used to pay for goods and services: Credit card hpb24. Ever used to pay for goods and services: Bank transfer hpb25. Ever used to pay for goods and services: Mobile money hpb26. Ever used to pay for goods and services: Cheque\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  mutate(finincl_pay1 = if_else(finincl_pay1 != 5, 1, 0),\n         finincl_pay2 = if_else(finincl_pay2 != 5, 1, 0),\n         finincl_pay3 = if_else(finincl_pay3 != 5, 1, 0),\n         finincl_pay4 = if_else(finincl_pay4 != 5, 1, 0),\n         finincl_pay5 = if_else(finincl_pay5 != 5, 1, 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finincl_pay = sum(finincl_pay1, finincl_pay2, finincl_pay3,\n                           finincl_pay4, finincl_pay5),\n         finincl_pay = pmin(finincl_pay, 2)) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finincl_pay1, finincl_pay2, finincl_pay3,\n            finincl_pay4, finincl_pay5))\n\nfinincl_loan1=g14_1, finincl_loan2=g14_2, finincl_loan3=g14_3, finincl_loan4=g4_1, finincl_loan5=km10_1\nHave you ever applied for a loan electronically? Have you ever received a loan disbursement/pay-out electronically? Have you made a loan payment electronically? Have you, in the past 12 months, been paying back money that you borrowed (e.g. mortgage, Boda loan etc) from anybody or any institution? Have you ever borrowed money through mobile money services?\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  mutate(finincl_loan1 = if_else(finincl_loan1 == 1, 1, 0),\n         finincl_loan2 = if_else(finincl_loan2 == 1, 1, 0),\n         finincl_loan3 = if_else(finincl_loan3 == 1, 1, 0),\n         finincl_loan4 = if_else(finincl_loan4 == 1, 1, 0),\n         finincl_loan5 = if_else(finincl_loan5 == 1, 1, 0),\n         finincl_loan = pmax(finincl_loan1, finincl_loan2, finincl_loan3,\n                             finincl_loan4, finincl_loan5)) %&gt;%\n  select(-c(finincl_loan1, finincl_loan2, finincl_loan3,\n                             finincl_loan4, finincl_loan5))\n\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  rowwise() %&gt;%\n  mutate(fin_inclusion = sum(finincl_risk, finincl_save, finincl_remit,\n                             finincl_pay, finincl_loan)) %&gt;%\n  ungroup()\nglimpse(fin_df5)\n\nRows: 3,176\nColumns: 33\n$ id                    &lt;chr&gt; \"00100102\", \"00101905\", \"00102802\", \"00103701\", …\n$ district              &lt;chr&gt; \"ABIM\", \"ABIM\", \"ABIM\", \"ABIM\", \"ABIM\", \"ABIM\", …\n$ age16_24              &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, …\n$ age25_34              &lt;dbl&gt; 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, …\n$ age35_44              &lt;dbl&gt; 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, …\n$ age45_54              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ gender_female         &lt;dbl&gt; 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, …\n$ education_pri         &lt;dbl&gt; 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, …\n$ education_sec         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ education_voc         &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, …\n$ education_deg         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ household_big         &lt;dbl&gt; 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, …\n$ is_rural              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ employment_formal     &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, …\n$ employment_self       &lt;dbl&gt; 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, …\n$ employment_unemployed &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ is_agribusiness       &lt;dbl&gt; 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, …\n$ earned_low            &lt;dbl&gt; 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, NA, 1, NA, NA, …\n$ earned_med            &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, NA, 0, NA, NA, …\n$ earned_high           &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NA, 0, NA, NA, …\n$ income_source_cnt     &lt;int&gt; 1, 3, 3, 3, 2, 0, 0, 1, 2, 2, 0, 3, 1, 2, 3, 2, …\n$ own_mobile_phone      &lt;dbl&gt; 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, …\n$ access_internet       &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n$ digital_literacy      &lt;int&gt; 1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, …\n$ finliteracy_plan      &lt;dbl&gt; 1.0, 0.6, 0.4, 0.0, 0.8, 0.6, 1.0, 1.0, 0.2, 0.2…\n$ finliteracy_save      &lt;dbl&gt; 0.3333333, 0.6666667, 0.0000000, 0.0000000, 0.66…\n$ finliteracy_aware     &lt;dbl&gt; 0.5000000, 0.0000000, 0.0000000, 0.0000000, 1.00…\n$ finincl_risk          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ finincl_save          &lt;dbl&gt; 2, 2, 0, 0, 1, 0, 2, 1, 1, 2, 1, 0, 2, 1, 0, 2, …\n$ finincl_remit         &lt;dbl&gt; 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, …\n$ finincl_pay           &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, …\n$ finincl_loan          &lt;dbl&gt; 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, …\n$ fin_inclusion         &lt;dbl&gt; 3, 4, 0, 1, 3, 0, 4, 3, 4, 3, 3, 1, 4, 2, 0, 4, …\n\n\n="
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#aggregation-to-district-level",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#aggregation-to-district-level",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.7 Aggregation to District Level",
    "text": "2.7 Aggregation to District Level\nIn the final step of data wrangling, we convert district names to sentence case using str_to_sentence() function.\nNext, we use group_by() and summarise() to aggregate scores at the district level. For each metric, mean() is applied to calculate the average score or the proportion of cases with the specified attribute. The additional argument na.rm = TRUE is included to ignore missing values in the calculation, effectively imputing the mean for these cases.\n\nfin_df6 &lt;- fin_df5 %&gt;%\n  mutate(district = str_to_sentence(district)) %&gt;%\n  group_by(district) %&gt;%\n  summarise(fin_inclusion = mean(fin_inclusion),\n            age16_24 = mean(age16_24),\n            age25_34 = mean(age25_34),\n            age35_44 = mean(age35_44),\n            age45_54 = mean(age45_54),\n            gender_female = mean(gender_female),\n            education_pri = mean(education_pri),\n            education_sec = mean(education_sec),\n            education_voc = mean(education_voc),\n            education_deg = mean(education_deg),\n            household_big = mean(household_big),\n            is_rural = mean(is_rural),\n            employment_formal = mean(employment_formal, na.rm = TRUE),\n            employment_self = mean(employment_self, na.rm = TRUE),\n            employment_unemployed = mean(employment_unemployed, na.rm = TRUE),\n            is_agribusiness = mean(is_agribusiness),\n            earned_low = mean(earned_low, na.rm = TRUE),\n            earned_med = mean(earned_med, na.rm = TRUE),\n            earned_high = mean(earned_high, na.rm = TRUE),\n            income_source_cnt = mean(income_source_cnt),\n            own_mobile_phone = mean(own_mobile_phone),\n            access_internet = mean(access_internet),\n            digital_literacy = mean(digital_literacy),\n            finliteracy_plan = mean(finliteracy_plan),\n            finliteracy_save = mean(finliteracy_save),\n            finliteracy_aware = mean(finliteracy_aware)) %&gt;%\n  ungroup()\n\n\nhead(fin_df6)\n\n# A tibble: 6 × 27\n  district fin_inclusion age16_24 age25_34 age35_44 age45_54 gender_female\n  &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;         &lt;dbl&gt;\n1 Abim              2.2     0.15     0.45     0.15    0.15           0.7  \n2 Adjumani          3.33    0.233    0.367    0.2     0.1            0.567\n3 Agago             2.8     0.333    0.133    0.233   0.0333         0.433\n4 Alebtong          1.35    0.3      0.15     0.2     0.1            0.65 \n5 Amolatar          2.93    0.133    0.233    0.267   0.267          0.667\n6 Amudat            1.2     0.45     0.3      0.2     0              0.6  \n# ℹ 20 more variables: education_pri &lt;dbl&gt;, education_sec &lt;dbl&gt;,\n#   education_voc &lt;dbl&gt;, education_deg &lt;dbl&gt;, household_big &lt;dbl&gt;,\n#   is_rural &lt;dbl&gt;, employment_formal &lt;dbl&gt;, employment_self &lt;dbl&gt;,\n#   employment_unemployed &lt;dbl&gt;, is_agribusiness &lt;dbl&gt;, earned_low &lt;dbl&gt;,\n#   earned_med &lt;dbl&gt;, earned_high &lt;dbl&gt;, income_source_cnt &lt;dbl&gt;,\n#   own_mobile_phone &lt;dbl&gt;, access_internet &lt;dbl&gt;, digital_literacy &lt;dbl&gt;,\n#   finliteracy_plan &lt;dbl&gt;, finliteracy_save &lt;dbl&gt;, finliteracy_aware &lt;dbl&gt;"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#check-for-mismatched-district-names",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#check-for-mismatched-district-names",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "4. Check for mismatched district names",
    "text": "4. Check for mismatched district names\n\nunmatched1 &lt;- fin_df6 %&gt;% \n  anti_join(uga_district2, by = \"district\") %&gt;%\n  arrange(district) %&gt;%\n  select(district)\nunmatched1\n\n# A tibble: 1 × 1\n  district\n  &lt;chr&gt;   \n1 Rubirizi\n\n\n\nunmatched2 &lt;- uga_district2 %&gt;% \n  st_drop_geometry() %&gt;%\n  anti_join(fin_df6, by = \"district\") %&gt;%\n  arrange(district) %&gt;%\n  select(district) %&gt;%\n  mutate(`Unmatched Districts` = \"Unmatched\")\nunmatched2\n\n# A tibble: 15 × 2\n   district      `Unmatched Districts`\n   &lt;chr&gt;         &lt;chr&gt;                \n 1 Bukwo         Unmatched            \n 2 Butambala     Unmatched            \n 3 Kalaki        Unmatched            \n 4 Kalanga       Unmatched            \n 5 Karenga       Unmatched            \n 6 Kazo          Unmatched            \n 7 Kitagwenga    Unmatched            \n 8 Lake Victoria Unmatched            \n 9 Madi Okollo   Unmatched            \n10 Nakasongola   Unmatched            \n11 Ntoroko       Unmatched            \n12 Obongi        Unmatched            \n13 Rubirzi       Unmatched            \n14 Rwampara      Unmatched            \n15 Terego        Unmatched            \n\n\n\nuga_district3 &lt;- uga_district2 %&gt;%\n  mutate(district = case_when(district == \"Rubirzi\" ~ \"Rubirizi\",\n                              TRUE ~ district)) %&gt;%\n  left_join(unmatched2, by = 'district') %&gt;%\n  mutate(`Unmatched Districts` = factor(case_when(`Unmatched Districts`==\"Unmatched\" ~ \"Unmatched\",\n                                                        TRUE ~ \"Matched\")))\nuga_district3\n\nSimple feature collection with 137 features and 2 fields\nActive geometry column: geometry\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 119207.4 ymin: -162761.4 xmax: 722246.8 ymax: 466343.2\nProjected CRS: Arc 1960 / UTM zone 36N\n# A tibble: 137 × 4\n   district                                   geometry            centroid\n * &lt;chr&gt;                                 &lt;POLYGON [m]&gt;         &lt;POINT [m]&gt;\n 1 Bugiri    ((606271.3 63711.25, 606215.4 60743.19, … (585352.6 58716.74)\n 2 Buvuma    ((541850.3 27437.7, 541850.4 26346.82, 5… (532387.5 23241.58)\n 3 Mukono    ((497216.8 61476.81, 493734.7 55347.47, … (478836.9 52480.04)\n 4 Kalanga   ((398995.6 -23918.89, 399567.6 -24274, 4… (418552.7 -41159.8)\n 5 Mayuge    ((568084.3 52178.1, 570015.3 50868.9, 57…  (563860.5 42410.1)\n 6 Namayingo ((585863.2 35776.32, 591374.4 40518.82, …   (592082 35491.08)\n 7 Moyo      ((390398.5 396699.4, 390339.4 394555.2, … (363573.2 407310.6)\n 8 Yumbe     ((334346.2 404200.6, 334155.9 403240.1, … (307841.5 384746.9)\n 9 Koboko    ((286191.2 412084.8, 286980.2 397413.4, … (275222.5 390052.8)\n10 Maracha   ((282060.2 366131.4, 282060 366005.2, 28… (270940.9 359497.4)\n# ℹ 127 more rows\n# ℹ 1 more variable: `Unmatched Districts` &lt;fct&gt;\n\n\n\ntmap_mode('plot')\ntm_shape(uga_district3) +\n  tm_polygons(\"Unmatched Districts\", palette = c(\"lightgrey\", \"red\")) +  \n  tm_shape(uga_district3 %&gt;% filter(`Unmatched Districts` == \"Unmatched\")) +\n  tm_text(\"district\", size = 0.6, col = \"black\", \n          remove.overlap = TRUE) +\n  tm_layout(legend.position = c(\"left\", \"top\"))\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#combine-dataset",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#combine-dataset",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "6. Combine Dataset",
    "text": "6. Combine Dataset\n\nuga_fin_sf &lt;- uga_district3 %&gt;%\n  filter(`Unmatched Districts` == \"Matched\") %&gt;%\n  select(-c(`Unmatched Districts`)) %&gt;%\n  left_join(fin_df6, by = 'district')\nglimpse(uga_fin_sf)\n\nRows: 123\nColumns: 29\n$ district              &lt;chr&gt; \"Bugiri\", \"Buvuma\", \"Mukono\", \"Mayuge\", \"Namayin…\n$ geometry              &lt;POLYGON [m]&gt; POLYGON ((606271.3 63711.25..., POLYGON …\n$ centroid              &lt;POINT [m]&gt; POINT (585352.6 58716.74), POINT (532387.5…\n$ fin_inclusion         &lt;dbl&gt; 1.866667, 2.400000, 3.360000, 1.700000, 2.800000…\n$ age16_24              &lt;dbl&gt; 0.3000000, 0.0000000, 0.2800000, 0.1750000, 0.15…\n$ age25_34              &lt;dbl&gt; 0.1666667, 0.2000000, 0.3800000, 0.2500000, 0.20…\n$ age35_44              &lt;dbl&gt; 0.2666667, 0.3000000, 0.0600000, 0.2250000, 0.30…\n$ age45_54              &lt;dbl&gt; 0.20000000, 0.40000000, 0.14000000, 0.10000000, …\n$ gender_female         &lt;dbl&gt; 0.7000000, 0.5000000, 0.5600000, 0.6000000, 0.55…\n$ education_pri         &lt;dbl&gt; 0.5333333, 0.4000000, 0.4200000, 0.6750000, 0.70…\n$ education_sec         &lt;dbl&gt; 0.2666667, 0.2000000, 0.3800000, 0.1000000, 0.20…\n$ education_voc         &lt;dbl&gt; 0.03333333, 0.00000000, 0.14000000, 0.02500000, …\n$ education_deg         &lt;dbl&gt; 0.00000000, 0.00000000, 0.02000000, 0.00000000, …\n$ household_big         &lt;dbl&gt; 0.4666667, 0.3000000, 0.2000000, 0.2250000, 0.35…\n$ is_rural              &lt;dbl&gt; 0.6666667, 1.0000000, 0.6000000, 0.7500000, 1.00…\n$ employment_formal     &lt;dbl&gt; 0.00000000, 0.00000000, 0.10000000, 0.00000000, …\n$ employment_self       &lt;dbl&gt; 0.4827586, 0.7777778, 0.6600000, 0.5641026, 0.90…\n$ employment_unemployed &lt;dbl&gt; 0.06896552, 0.00000000, 0.12000000, 0.07692308, …\n$ is_agribusiness       &lt;dbl&gt; 0.3333333, 0.4000000, 0.4000000, 0.3000000, 0.80…\n$ earned_low            &lt;dbl&gt; 0.4230769, 0.6250000, 0.4897959, 0.5714286, 0.63…\n$ earned_med            &lt;dbl&gt; 0.1538462, 0.2500000, 0.2244898, 0.1071429, 0.26…\n$ earned_high           &lt;dbl&gt; 0.00000000, 0.00000000, 0.04081633, 0.00000000, …\n$ income_source_cnt     &lt;dbl&gt; 1.366667, 1.700000, 1.920000, 1.225000, 1.700000…\n$ own_mobile_phone      &lt;dbl&gt; 0.7333333, 0.8000000, 0.8800000, 0.6000000, 0.75…\n$ access_internet       &lt;dbl&gt; 0.06666667, 0.10000000, 0.44000000, 0.07500000, …\n$ digital_literacy      &lt;dbl&gt; 0.8333333, 0.9000000, 1.4600000, 0.7000000, 1.10…\n$ finliteracy_plan      &lt;dbl&gt; 0.4000000, 0.3600000, 0.7600000, 0.3150000, 0.67…\n$ finliteracy_save      &lt;dbl&gt; 0.3444444, 0.4333333, 0.5466667, 0.4666667, 0.71…\n$ finliteracy_aware     &lt;dbl&gt; 0.16666667, 0.21666667, 0.55333333, 0.12500000, …"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#distribution-of-exploratory-variables",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#distribution-of-exploratory-variables",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "Distribution of Exploratory Variables",
    "text": "Distribution of Exploratory Variables\n\nage16_24 &lt;- ggplot(data = uga_fin_sf, aes(x = age16_24)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nage25_34 &lt;- ggplot(data = uga_fin_sf, aes(x = age25_34)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nage35_44 &lt;- ggplot(data = uga_fin_sf, aes(x = age35_44)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nage45_54 &lt;- ggplot(data = uga_fin_sf, aes(x = age45_54)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\ngender_female &lt;- ggplot(data = uga_fin_sf, aes(x = gender_female)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\neducation_pri &lt;- ggplot(data = uga_fin_sf, aes(x = education_pri)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\neducation_sec &lt;- ggplot(data = uga_fin_sf, aes(x = education_sec)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\neducation_voc &lt;- ggplot(data = uga_fin_sf, aes(x = education_voc)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\neducation_deg &lt;- ggplot(data = uga_fin_sf, aes(x = education_deg)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nhousehold_big &lt;- ggplot(data = uga_fin_sf, aes(x = household_big)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nis_rural &lt;- ggplot(data = uga_fin_sf, aes(x = is_rural)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nemployment_formal &lt;- ggplot(data = uga_fin_sf, aes(x = employment_formal)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nemployment_self &lt;- ggplot(data = uga_fin_sf, aes(x = employment_self)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nemployment_unemployed &lt;- ggplot(data = uga_fin_sf, aes(x = employment_unemployed)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nis_agribusiness &lt;- ggplot(data = uga_fin_sf, aes(x = is_agribusiness)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nearned_low &lt;- ggplot(data = uga_fin_sf, aes(x = earned_low)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nearned_med &lt;- ggplot(data = uga_fin_sf, aes(x = earned_med)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nearned_high &lt;- ggplot(data = uga_fin_sf, aes(x = earned_high)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nincome_source_cnt &lt;- ggplot(data = uga_fin_sf, aes(x = income_source_cnt)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nown_mobile_phone &lt;- ggplot(data = uga_fin_sf, aes(x = own_mobile_phone)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\naccess_internet &lt;- ggplot(data = uga_fin_sf, aes(x = access_internet)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\ndigital_literacy &lt;- ggplot(data = uga_fin_sf, aes(x = digital_literacy)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nfinliteracy_plan &lt;- ggplot(data = uga_fin_sf, aes(x = finliteracy_plan)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nfinliteracy_save &lt;- ggplot(data = uga_fin_sf, aes(x = finliteracy_save)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nfinliteracy_aware &lt;- ggplot(data = uga_fin_sf, aes(x = finliteracy_aware)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(age16_24, age25_34, age35_44, age45_54, gender_female, education_pri, \n          education_sec, education_voc, education_deg, household_big, is_rural, \n          employment_formal, employment_self, employment_unemployed, is_agribusiness, \n          earned_low, earned_med, earned_high, income_source_cnt, own_mobile_phone, \n          access_internet, digital_literacy, finliteracy_plan, finliteracy_save, \n          finliteracy_aware, ncol = 3, nrow = 7)\n\n$`1`\n\n\n\n\n\n\n$`2`\n\n\n\n\n\n\nattr(,\"class\")\n[1] \"list\"      \"ggarrange\""
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#statistical-point-map-of-financial-inclusion",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#statistical-point-map-of-financial-inclusion",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "Statistical Point Map of Financial Inclusion",
    "text": "Statistical Point Map of Financial Inclusion\n\ntmap_mode(\"view\")\ntm_shape(uga_fin_sf) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(uga_fin_sf) +  \n  tm_dots(col = \"fin_inclusion\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Financial Inclusion\")+\n  tm_view(set.zoom.limits = c(6,9))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#correlation-analysis",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#correlation-analysis",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "1. Correlation Analysis",
    "text": "1. Correlation Analysis\n\nggcorrmat(fin_df6[, 2:27])\n\n\n\n\n\ncorrplot(cor(fin_df6[, 2:27]))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#initial-mlr",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#initial-mlr",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2. Initial MLR",
    "text": "2. Initial MLR\n\nfinincl_mlr1 &lt;- lm(fin_inclusion ~ age16_24 + age25_34 + age35_44 + age45_54 +\n                    gender_female + education_pri + education_sec + education_voc +\n                    education_deg + household_big + is_rural + employment_formal +\n                    employment_formal + employment_self + employment_unemployed +\n                    is_agribusiness + earned_low + earned_med + earned_high +\n                    income_source_cnt + own_mobile_phone +\n                    access_internet + digital_literacy +\n                    finliteracy_plan + finliteracy_save + finliteracy_aware,\n                data = uga_fin_sf)\n\n\ntbl_regression(finincl_mlr1, intercept = FALSE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    age16_24\n0.25\n-0.57, 1.1\n0.5\n    age25_34\n0.77\n0.05, 1.5\n0.036\n    age35_44\n1.4\n0.54, 2.3\n0.002\n    age45_54\n-0.51\n-1.4, 0.38\n0.3\n    gender_female\n-0.18\n-0.74, 0.39\n0.5\n    education_pri\n-0.01\n-0.58, 0.56\n&gt;0.9\n    education_sec\n0.61\n-0.13, 1.4\n0.11\n    education_voc\n-0.16\n-1.2, 0.92\n0.8\n    education_deg\n-1.4\n-3.3, 0.45\n0.13\n    household_big\n0.06\n-0.31, 0.44\n0.7\n    is_rural\n-0.16\n-0.45, 0.13\n0.3\n    employment_formal\n-0.28\n-1.5, 0.96\n0.7\n    employment_self\n-0.19\n-0.81, 0.42\n0.5\n    employment_unemployed\n-0.70\n-1.9, 0.53\n0.3\n    is_agribusiness\n0.46\n0.13, 0.79\n0.007\n    earned_low\n0.42\n-0.24, 1.1\n0.2\n    earned_med\n1.2\n0.38, 1.9\n0.004\n    earned_high\n1.4\n0.20, 2.6\n0.022\n    income_source_cnt\n0.04\n-0.20, 0.27\n0.8\n    own_mobile_phone\n0.80\n-0.11, 1.7\n0.085\n    access_internet\n0.43\n-0.62, 1.5\n0.4\n    digital_literacy\n-0.12\n-0.94, 0.69\n0.8\n    finliteracy_plan\n0.67\n0.04, 1.3\n0.039\n    finliteracy_save\n0.77\n0.26, 1.3\n0.003\n    finliteracy_aware\n1.9\n1.2, 2.7\n&lt;0.001\n  \n  \n    \n      R² = 0.869; Adjusted R² = 0.835; AIC = 86.3; Statistic = 25.8; p-value = &lt;0.001; σ = 0.311\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\nols_vif_tol(finincl_mlr1)\n\n               Variables  Tolerance       VIF\n1               age16_24 0.45262188  2.209350\n2               age25_34 0.52764860  1.895201\n3               age35_44 0.55006196  1.817977\n4               age45_54 0.55768217  1.793136\n5          gender_female 0.62713154  1.594562\n6          education_pri 0.34623566  2.888206\n7          education_sec 0.23213969  4.307751\n8          education_voc 0.48524042  2.060834\n9          education_deg 0.44388697  2.252826\n10         household_big 0.65467847  1.527467\n11              is_rural 0.62738535  1.593917\n12     employment_formal 0.44696638  2.237305\n13       employment_self 0.24855663  4.023228\n14 employment_unemployed 0.59664145  1.676048\n15       is_agribusiness 0.45336921  2.205708\n16            earned_low 0.24315704  4.112569\n17            earned_med 0.19015660  5.258823\n18           earned_high 0.62936446  1.588904\n19     income_source_cnt 0.44484330  2.247983\n20      own_mobile_phone 0.10347893  9.663803\n21       access_internet 0.09916224 10.084484\n22      digital_literacy 0.05039740 19.842294\n23      finliteracy_plan 0.31488665  3.175746\n24      finliteracy_save 0.35251710  2.836742\n25     finliteracy_aware 0.36002681  2.777571\n\n\n\nfinincl_mlr2 &lt;- lm(fin_inclusion ~ age16_24 + age25_34 + age35_44 + age45_54 +\n                    gender_female + education_pri + education_sec + education_voc +\n                    education_deg + household_big + is_rural + employment_formal +\n                    employment_formal + employment_self + employment_unemployed +\n                    is_agribusiness + earned_low + earned_med + earned_high +\n                    income_source_cnt + own_mobile_phone + access_internet +\n                    finliteracy_plan + finliteracy_save + \n                    finliteracy_aware,\n                data = uga_fin_sf)\n\n\ntbl_regression(finincl_mlr2, intercept = FALSE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    age16_24\n0.24\n-0.57, 1.0\n0.6\n    age25_34\n0.76\n0.05, 1.5\n0.037\n    age35_44\n1.5\n0.56, 2.3\n0.002\n    age45_54\n-0.53\n-1.4, 0.35\n0.2\n    gender_female\n-0.18\n-0.74, 0.38\n0.5\n    education_pri\n-0.03\n-0.57, 0.50\n0.9\n    education_sec\n0.59\n-0.14, 1.3\n0.11\n    education_voc\n-0.18\n-1.2, 0.89\n0.7\n    education_deg\n-1.5\n-3.3, 0.31\n0.10\n    household_big\n0.06\n-0.31, 0.44\n0.7\n    is_rural\n-0.16\n-0.45, 0.13\n0.3\n    employment_formal\n-0.27\n-1.5, 0.97\n0.7\n    employment_self\n-0.21\n-0.81, 0.40\n0.5\n    employment_unemployed\n-0.69\n-1.9, 0.54\n0.3\n    is_agribusiness\n0.47\n0.14, 0.80\n0.005\n    earned_low\n0.40\n-0.24, 1.0\n0.2\n    earned_med\n1.1\n0.38, 1.9\n0.004\n    earned_high\n1.4\n0.23, 2.6\n0.019\n    income_source_cnt\n0.03\n-0.20, 0.27\n0.8\n    own_mobile_phone\n0.71\n0.02, 1.4\n0.045\n    access_internet\n0.31\n-0.37, 0.98\n0.4\n    finliteracy_plan\n0.66\n0.03, 1.3\n0.039\n    finliteracy_save\n0.77\n0.27, 1.3\n0.003\n    finliteracy_aware\n1.9\n1.2, 2.7\n&lt;0.001\n  \n  \n    \n      R² = 0.869; Adjusted R² = 0.837; AIC = 84.5; Statistic = 27.1; p-value = &lt;0.001; σ = 0.309\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\nols_vif_tol(finincl_mlr2)\n\n               Variables Tolerance      VIF\n1               age16_24 0.4581549 2.182668\n2               age25_34 0.5331003 1.875820\n3               age35_44 0.5573649 1.794157\n4               age45_54 0.5666336 1.764809\n5          gender_female 0.6276282 1.593300\n6          education_pri 0.3771017 2.651805\n7          education_sec 0.2385751 4.191553\n8          education_voc 0.4921413 2.031937\n9          education_deg 0.4722443 2.117548\n10         household_big 0.6572598 1.521468\n11              is_rural 0.6290053 1.589812\n12     employment_formal 0.4498742 2.222844\n13       employment_self 0.2517605 3.972029\n14 employment_unemployed 0.5981586 1.671797\n15       is_agribusiness 0.4644502 2.153083\n16            earned_low 0.2497320 4.004292\n17            earned_med 0.1909339 5.237415\n18           earned_high 0.6358058 1.572807\n19     income_source_cnt 0.4474371 2.234951\n20      own_mobile_phone 0.1772264 5.642500\n21       access_internet 0.2388015 4.187578\n22      finliteracy_plan 0.3168609 3.155959\n23      finliteracy_save 0.3527430 2.834925\n24     finliteracy_aware 0.3605272 2.773716\n\n\n\nggcoefstats(finincl_mlr2, sort = \"ascending\")\n\n\n\n\n\nVariable Selection\n\n\nfinincl_mlr3 &lt;- ols_step_forward_p(finincl_mlr2,\n                                   p_val = 0.05,\n                                   details = FALSE)\n\n\nplot(finincl_mlr3)\n\n\n\n\n\ntbl_regression(finincl_mlr3$model, intercept = FALSE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    finliteracy_aware\n1.9\n1.4, 2.5\n&lt;0.001\n    finliteracy_save\n0.95\n0.50, 1.4\n&lt;0.001\n    earned_med\n0.76\n0.31, 1.2\n0.001\n    age35_44\n1.4\n0.72, 2.2\n&lt;0.001\n    age25_34\n0.92\n0.35, 1.5\n0.002\n    earned_high\n0.95\n-0.06, 2.0\n0.065\n    finliteracy_plan\n0.86\n0.34, 1.4\n0.001\n    education_sec\n0.63\n0.09, 1.2\n0.022\n    is_agribusiness\n0.48\n0.21, 0.75\n&lt;0.001\n    own_mobile_phone\n0.55\n0.01, 1.1\n0.045\n  \n  \n    \n      R² = 0.855; Adjusted R² = 0.842; AIC = 68.8; Statistic = 66.1; p-value = &lt;0.001; σ = 0.304\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nTesting for Non-linearity\n\nols_plot_resid_fit(finincl_mlr3$model)\n\n\n\n\nTesting Normality of Residuals\n\nols_plot_resid_hist(finincl_mlr3$model)\n\n\n\n\n\nols_test_normality(finincl_mlr3$model)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.9918         0.6887 \nKolmogorov-Smirnov        0.0617         0.7381 \nCramer-von Mises         21.9979         0.0000 \nAnderson-Darling          0.3313         0.5095 \n-----------------------------------------------\n\n\n\nmlr_output &lt;- as.data.frame(finincl_mlr3$model$residuals) %&gt;%\n  rename(mlr_residuals = `finincl_mlr3$model$residuals`)\n\n\nuga_fin_sf1 &lt;- cbind(uga_fin_sf, mlr_output$mlr_residuals) %&gt;%\n  rename(mlr_residuals = `mlr_output.mlr_residuals`)\n\n\ntmap_mode(\"view\")\ntm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(uga_fin_sf1) +  \n  tm_dots(col = \"mlr_residuals\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(6,9))\n\n\n\n\n\ntmap_mode('plot')\n\nSpatial Stationarity Test\n\nuga_fin_sf1 &lt;- uga_fin_sf1 %&gt;%\n  mutate(nb = st_knn(centroid, k = 6, longlat = FALSE),\n         wt = st_weights(nb, style = \"W\"),\n         .before = \"geometry\")\n\n\nglobal_moran_perm(uga_fin_sf1$mlr_residuals,\n                  uga_fin_sf1$nb,\n                  uga_fin_sf1$wt,\n                  alternative = \"two.sided\",\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.11023, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#introduction",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#introduction",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "",
    "text": "Financial inclusion is a critical driver of economic growth, macroeconomic stability, and poverty reduction (Nguyen et al., 2021). Grounded in the Schumpeterian model, evidence from countries like Vietnam demonstrates how accessible financial services can empower individuals and businesses to invest, grow, and contribute to broader economic stability. When financial services are widely available, wealth distribution becomes more equitable across social groups. In contrast, when access is limited often to a select affluent population, only this group could grow their wealth, while economically disadvantaged households struggle to get the funding they need (Hamden et al., 2022; Kaliba, Bishagazi, & Gongwe, 2023).\nIn Uganda, approximately 76% of the population resides in rural areas, with agriculture as the main source of income (Hamden et al., 2022). Since the introduction of mobile money in 2009, over 80% of Ugandan adults have acquired a mobile money account, making it the most commonly used financial service (FinScope, 2024; Hamden et al., 2022). However, active account usage remains low, with only 49% of account holders using mobile money regularly (Hamden et al., 2022). While mobile phone ownership and internet access have grown substantially, significant gender and regional gaps persist, particularly affecting rural and marginalised communities such as females (FinScope, 2024). These disparities highlight the challenge of creating a fully inclusive financial system that reaches all demographic groups.\nAlthough previous studies have explored factors influencing financial inclusion, they often take a generalised approach, overlooking geographical variations. This study addresses this gap by applying geographically weighted regression (GWR) to analyse the factors influencing financial inclusion in Uganda at the district level. By adopting this approach, this study aims to uncover district-level factors and patterns of financial inclusion, offering insights that can inform targeted policies and interventions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#datasets",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#datasets",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "",
    "text": "This study utilises two key datasets:\n\nFinScope Uganda 2023 Survey Dataset: This aspatial dataset includes responses from 3,176 Ugandan adults (aged 16 and older), providing insights into attitudes and behaviors around money management, financial products, and services. Respondents were selected through a rigorous stratified sampling process to ensure representativeness.\nUganda District Boundaries (2020): Geographical boundary data obtained from geoBoundaries, detailing the administrative district boundaries across Uganda."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#initial-mlr-model",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#initial-mlr-model",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "5.1 Initial MLR Model",
    "text": "5.1 Initial MLR Model\nWe built an initial multiple linear regression (MLR) model with financial inclusion as the dependent variable, regressing it on all explanatory variables using the lm() function.\nThe model summary was generated using tbl_regression() from the gtsummary package. The model achieved an adjusted R² of 0.835 and was statistically significant (p-value &lt; .05). However, when examining the statistical significance of individual independent variables, we found that while some variables were significant (e.g., proportion aged 25–34, proportion involved in agricultural businesses), others were not (e.g., employment-related variables, proportion with large households).\n\nfinincl_mlr1 &lt;- lm(fin_inclusion ~ age16_24 + age25_34 + age35_44 + age45_54 +\n                    gender_female + education_pri + education_sec + education_voc +\n                    education_deg + household_big + is_rural + employment_formal +\n                    employment_formal + employment_self + employment_unemployed +\n                    is_agribusiness + earned_low + earned_med + earned_high +\n                    income_source_cnt + own_mobile_phone +\n                    access_internet + digital_literacy +\n                    finliteracy_plan + finliteracy_save + finliteracy_aware,\n                data = uga_fin_sf)\n\ntbl_regression(finincl_mlr1, intercept = FALSE) %&gt;% \n  add_glance_source_note(label = list(sigma ~ \"\\U03C3\"),\n                         include = c(r.squared, adj.r.squared, \n                                     AIC, statistic,\n                                     p.value, sigma))\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    age16_24\n0.25\n-0.57, 1.1\n0.5\n    age25_34\n0.77\n0.05, 1.5\n0.036\n    age35_44\n1.4\n0.54, 2.3\n0.002\n    age45_54\n-0.51\n-1.4, 0.38\n0.3\n    gender_female\n-0.18\n-0.74, 0.39\n0.5\n    education_pri\n-0.01\n-0.58, 0.56\n&gt;0.9\n    education_sec\n0.61\n-0.13, 1.4\n0.11\n    education_voc\n-0.16\n-1.2, 0.92\n0.8\n    education_deg\n-1.4\n-3.3, 0.45\n0.13\n    household_big\n0.06\n-0.31, 0.44\n0.7\n    is_rural\n-0.16\n-0.45, 0.13\n0.3\n    employment_formal\n-0.28\n-1.5, 0.96\n0.7\n    employment_self\n-0.19\n-0.81, 0.42\n0.5\n    employment_unemployed\n-0.70\n-1.9, 0.53\n0.3\n    is_agribusiness\n0.46\n0.13, 0.79\n0.007\n    earned_low\n0.42\n-0.24, 1.1\n0.2\n    earned_med\n1.2\n0.38, 1.9\n0.004\n    earned_high\n1.4\n0.20, 2.6\n0.022\n    income_source_cnt\n0.04\n-0.20, 0.27\n0.8\n    own_mobile_phone\n0.80\n-0.11, 1.7\n0.085\n    access_internet\n0.43\n-0.62, 1.5\n0.4\n    digital_literacy\n-0.12\n-0.94, 0.69\n0.8\n    finliteracy_plan\n0.67\n0.04, 1.3\n0.039\n    finliteracy_save\n0.77\n0.26, 1.3\n0.003\n    finliteracy_aware\n1.9\n1.2, 2.7\n&lt;0.001\n  \n  \n    \n      R² = 0.869; Adjusted R² = 0.835; AIC = 86.3; Statistic = 25.8; p-value = &lt;0.001; σ = 0.311\n    \n  \n  \n    \n      1 CI = Confidence Interval"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#checking-multicollinearity-of-initial-model",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#checking-multicollinearity-of-initial-model",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "5.2 Checking Multicollinearity of Initial Model",
    "text": "5.2 Checking Multicollinearity of Initial Model\nTo assess multicollinearity, we used the ols_vif_tol() function to calculate the Variance Inflation Factor (VIF) for each variable. The VIF values for Digital Literacy and Internet Access exceeded 10, while Mobile Ownership was close to 10, indicating multicollinearity.\n\nols_vif_tol(finincl_mlr1)\n\n               Variables  Tolerance       VIF\n1               age16_24 0.45262188  2.209350\n2               age25_34 0.52764860  1.895201\n3               age35_44 0.55006196  1.817977\n4               age45_54 0.55768217  1.793136\n5          gender_female 0.62713154  1.594562\n6          education_pri 0.34623566  2.888206\n7          education_sec 0.23213969  4.307751\n8          education_voc 0.48524042  2.060834\n9          education_deg 0.44388697  2.252826\n10         household_big 0.65467847  1.527467\n11              is_rural 0.62738535  1.593917\n12     employment_formal 0.44696638  2.237305\n13       employment_self 0.24855663  4.023228\n14 employment_unemployed 0.59664145  1.676048\n15       is_agribusiness 0.45336921  2.205708\n16            earned_low 0.24315704  4.112569\n17            earned_med 0.19015660  5.258823\n18           earned_high 0.62936446  1.588904\n19     income_source_cnt 0.44484330  2.247983\n20      own_mobile_phone 0.10347893  9.663803\n21       access_internet 0.09916224 10.084484\n22      digital_literacy 0.05039740 19.842294\n23      finliteracy_plan 0.31488665  3.175746\n24      finliteracy_save 0.35251710  2.836742\n25     finliteracy_aware 0.36002681  2.777571"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#second-mlr-model",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#second-mlr-model",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "5.3 Second MLR Model",
    "text": "5.3 Second MLR Model\nConsequently, we removed the Digital Literacy variable, as it had the highest VIF value and because Mobile Ownership and Internet Access were deemed more directly associated with financial inclusion. In the second MLR model, all explantory variables except Digital Literacy were included.\nThe second model achieved an adjusted R² of 0.837 and was statistically significant (p-value &lt; .05). Likewise, we observed some variables were significant (e.g., proportion aged 25–34, proportion involved in agricultural businesses), while others were not (e.g., employment-related variables, proportion with large households).\n\nfinincl_mlr2 &lt;- lm(fin_inclusion ~ age16_24 + age25_34 + age35_44 + age45_54 +\n                    gender_female + education_pri + education_sec + education_voc +\n                    education_deg + household_big + is_rural + employment_formal +\n                    employment_formal + employment_self + employment_unemployed +\n                    is_agribusiness + earned_low + earned_med + earned_high +\n                    income_source_cnt + own_mobile_phone + access_internet +\n                    finliteracy_plan + finliteracy_save + \n                    finliteracy_aware,\n                data = uga_fin_sf)\n\ntbl_regression(finincl_mlr2, intercept = FALSE) %&gt;% \n  add_glance_source_note(label = list(sigma ~ \"\\U03C3\"),\n                         include = c(r.squared, adj.r.squared, \n                                     AIC, statistic,\n                                     p.value, sigma))\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    age16_24\n0.24\n-0.57, 1.0\n0.6\n    age25_34\n0.76\n0.05, 1.5\n0.037\n    age35_44\n1.5\n0.56, 2.3\n0.002\n    age45_54\n-0.53\n-1.4, 0.35\n0.2\n    gender_female\n-0.18\n-0.74, 0.38\n0.5\n    education_pri\n-0.03\n-0.57, 0.50\n0.9\n    education_sec\n0.59\n-0.14, 1.3\n0.11\n    education_voc\n-0.18\n-1.2, 0.89\n0.7\n    education_deg\n-1.5\n-3.3, 0.31\n0.10\n    household_big\n0.06\n-0.31, 0.44\n0.7\n    is_rural\n-0.16\n-0.45, 0.13\n0.3\n    employment_formal\n-0.27\n-1.5, 0.97\n0.7\n    employment_self\n-0.21\n-0.81, 0.40\n0.5\n    employment_unemployed\n-0.69\n-1.9, 0.54\n0.3\n    is_agribusiness\n0.47\n0.14, 0.80\n0.005\n    earned_low\n0.40\n-0.24, 1.0\n0.2\n    earned_med\n1.1\n0.38, 1.9\n0.004\n    earned_high\n1.4\n0.23, 2.6\n0.019\n    income_source_cnt\n0.03\n-0.20, 0.27\n0.8\n    own_mobile_phone\n0.71\n0.02, 1.4\n0.045\n    access_internet\n0.31\n-0.37, 0.98\n0.4\n    finliteracy_plan\n0.66\n0.03, 1.3\n0.039\n    finliteracy_save\n0.77\n0.27, 1.3\n0.003\n    finliteracy_aware\n1.9\n1.2, 2.7\n&lt;0.001\n  \n  \n    \n      R² = 0.869; Adjusted R² = 0.837; AIC = 84.5; Statistic = 27.1; p-value = &lt;0.001; σ = 0.309\n    \n  \n  \n    \n      1 CI = Confidence Interval"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#checking-multicollinearity-of-second-model",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#checking-multicollinearity-of-second-model",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "5.4 Checking Multicollinearity of Second Model",
    "text": "5.4 Checking Multicollinearity of Second Model\nTo assess multicollinearity again. Since the VIF values for all independent variables were below 10, we conclude that there is no more multicollinearity.\n\nols_vif_tol(finincl_mlr2)\n\n               Variables Tolerance      VIF\n1               age16_24 0.4581549 2.182668\n2               age25_34 0.5331003 1.875820\n3               age35_44 0.5573649 1.794157\n4               age45_54 0.5666336 1.764809\n5          gender_female 0.6276282 1.593300\n6          education_pri 0.3771017 2.651805\n7          education_sec 0.2385751 4.191553\n8          education_voc 0.4921413 2.031937\n9          education_deg 0.4722443 2.117548\n10         household_big 0.6572598 1.521468\n11              is_rural 0.6290053 1.589812\n12     employment_formal 0.4498742 2.222844\n13       employment_self 0.2517605 3.972029\n14 employment_unemployed 0.5981586 1.671797\n15       is_agribusiness 0.4644502 2.153083\n16            earned_low 0.2497320 4.004292\n17            earned_med 0.1909339 5.237415\n18           earned_high 0.6358058 1.572807\n19     income_source_cnt 0.4474371 2.234951\n20      own_mobile_phone 0.1772264 5.642500\n21       access_internet 0.2388015 4.187578\n22      finliteracy_plan 0.3168609 3.155959\n23      finliteracy_save 0.3527430 2.834925\n24     finliteracy_aware 0.3605272 2.773716"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#variable-selection-in-third-mlr-model",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#variable-selection-in-third-mlr-model",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "5.5 Variable Selection in Third MLR Model",
    "text": "5.5 Variable Selection in Third MLR Model\nWe used the ols_step_forward_p() function to perform stepwise forward selection, setting a p-value threshold of 0.05 to ensure that all variables included in the final model are statistically significant.\n\nfinincl_mlr3 &lt;- ols_step_forward_p(finincl_mlr2,\n                                   p_val = 0.05,\n                                   details = FALSE)\n\nThe plot below illustrates the stepwise forward selection process, showing incremental changes in Adjusted R², AIC, and RMSE at each step.\n\nplot(finincl_mlr3)\n\n\n\n\nThe summary output shows that the final model includes 10 variables, achieving an adjusted R² of 0.842 and is statistically significant (p-value &lt; .05). All variables, except for high earned income, had p-values below 0.05; high earned income was marginally significant at 0.065. The explanatory variables in the model are:\n\nProportion aged 25–34\nProportion aged 35–44\nProportion with secondary education\nProportion involved in agricultural businesses\nProportion with medium earned income\nProportion with high earned income\nProportion owning mobile phones\nMean financial literacy score for planning/budgeting\nMean financial literacy score for saving behaviors\nMean financial literacy score for awareness of financial products\n\n\ntbl_regression(finincl_mlr3$model, intercept = FALSE) %&gt;% \n  add_glance_source_note(label = list(sigma ~ \"\\U03C3\"),\n                         include = c(r.squared, adj.r.squared, \n                                     AIC, statistic,\n                                     p.value, sigma))\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    finliteracy_aware\n1.9\n1.4, 2.5\n&lt;0.001\n    finliteracy_save\n0.95\n0.50, 1.4\n&lt;0.001\n    earned_med\n0.76\n0.31, 1.2\n0.001\n    age35_44\n1.4\n0.72, 2.2\n&lt;0.001\n    age25_34\n0.92\n0.35, 1.5\n0.002\n    earned_high\n0.95\n-0.06, 2.0\n0.065\n    finliteracy_plan\n0.86\n0.34, 1.4\n0.001\n    education_sec\n0.63\n0.09, 1.2\n0.022\n    is_agribusiness\n0.48\n0.21, 0.75\n&lt;0.001\n    own_mobile_phone\n0.55\n0.01, 1.1\n0.045\n  \n  \n    \n      R² = 0.855; Adjusted R² = 0.842; AIC = 68.8; Statistic = 66.1; p-value = &lt;0.001; σ = 0.304\n    \n  \n  \n    \n      1 CI = Confidence Interval"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#checking-assumptions-of-mlr-model",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#checking-assumptions-of-mlr-model",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "5.6 Checking Assumptions of MLR Model",
    "text": "5.6 Checking Assumptions of MLR Model\nAlthough we confirmed that multicollinearity is not present in the model, we conducted additional checks to ensure that other assumptions of multiple linear regression (MLR) were not violated.\n\nTesting for Non-linearityTesting Normality of Residuals\n\n\nWe used the ols_plot_resid_fit() function to test the assumptions of linearity and additivity in the relationships between the dependent and independent variables. The resulting plot shows data points scattered around the zero line, suggesting that the relationships between the dependent and independent variables are linear.\n\nols_plot_resid_fit(finincl_mlr3$model)\n\n\n\n\n\n\nThe plot below, created with the ols_plot_resid_hist() function, shows that the residuals approximate a normal distribution.\n\nols_plot_resid_hist(finincl_mlr3$model)\n\n\n\n\nTo statistically assess normality, we used the ols_test_normality() function. The summary table indicates that the p-values from the Anderson-Darling, Shapiro-Wilk, and Kolmogorov-Smirnov tests are all greater than the alpha level of 0.05. Therefore, we do not reject the null hypothesis and conclude that there is insufficient evidence to suggest the residuals are non-normally distributed.\n\nols_test_normality(finincl_mlr3$model)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.9918         0.6887 \nKolmogorov-Smirnov        0.0617         0.7381 \nCramer-von Mises         21.9979         0.0000 \nAnderson-Darling          0.3313         0.5095 \n-----------------------------------------------"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#geovisualisation-of-residuals",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#geovisualisation-of-residuals",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "5.7 Geovisualisation of Residuals",
    "text": "5.7 Geovisualisation of Residuals\nTo visualise the residuals of the MLR model on the map, we first extracted the residuals from the model, converted them into a dataframe using as.data.frame(), and renamed the variable for clarity. We then joined the residuals with the uga_fin_sf dataframe, renaming the variable again for easy readability.\n\nmlr_output &lt;- as.data.frame(finincl_mlr3$model$residuals) %&gt;%\n  rename(mlr_residuals = `finincl_mlr3$model$residuals`)\n\nuga_fin_sf1 &lt;- cbind(uga_fin_sf, mlr_output$mlr_residuals) %&gt;%\n  rename(mlr_residuals = `mlr_output.mlr_residuals`)\n\nThe plot indicates that certain clusters of districts have positive residuals (e.g. districts in the west of Uganda), suggesting a possible presence of spatial autocorrelation.\n\n\nCode\ntmap_mode(\"view\")\ntm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(uga_fin_sf1) +  \n  tm_dots(col = \"mlr_residuals\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"MLR Residuals\") +\n  tm_view(set.zoom.limits = c(6,9))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#testing-for-spatial-autocorrelation",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#testing-for-spatial-autocorrelation",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "5.8 Testing for Spatial Autocorrelation",
    "text": "5.8 Testing for Spatial Autocorrelation\nWe use sfdep package to compute the distance weight matrix. We use st_knn() on the centroids, specifying 6 neighbours for each district. We then compute the distance weights using st_weights() function.\n\nuga_fin_sf1 &lt;- uga_fin_sf1 %&gt;%\n  mutate(nb = st_knn(centroid, k = 6, longlat = FALSE),\n         wt = st_weights(nb, style = \"W\"),\n         .before = \"geometry\")\n\nTo confirm the presence of spatial autocorrelation, we perform a Global Moran’s I permutation test to determine whether spatial autocorrelation exists in the residuals.\n\nH₀: The residuals are randomly distributed (spatially stationary).\nH₁: The residuals exhibit spatial dependence (spatially non-stationary).\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed. Since the Observed Global Moran I = 0.11023 which is greater than 0, we can infer than the residuals resemble cluster distribution.\n\nset.seed(1234)\nglobal_moran_perm(uga_fin_sf1$mlr_residuals,\n                  uga_fin_sf1$nb,\n                  uga_fin_sf1$wt,\n                  alternative = \"two.sided\",\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.11023, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#fixed-bandwidth-gwr-model",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#fixed-bandwidth-gwr-model",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "6.1 Fixed-Bandwidth GWR Model",
    "text": "6.1 Fixed-Bandwidth GWR Model\nGiven the presence of spatial autocorrelation, as demonstrated by the Global Moran’s I permutation test, we proceeded to enhance the final MLR model by incorporating spatial components.\nWe conduct the following steps to build a fixed-bandwidth GWR model.\n\n1. Determine Optimal Fixed Bandwidth2. Build GWR model3. GWR Model (Spatial Object)\n\n\nWe used the bw.gwr() function from the GWModel package, setting the adaptive argument to FALSE, to determine the optimal fixed bandwidth for the model. We use bisquare kernel which is commonly used.\nUsing the CV cross-validation approach, it shows that the recommended bandwidth is 724369.1 meters.\n\nbw_fixed &lt;- bw.gwr(fin_inclusion ~ age25_34 + age35_44 + \n                     education_sec + is_agribusiness +\n                     earned_med + earned_high + own_mobile_phone +\n                     finliteracy_plan + finliteracy_save + finliteracy_aware,\n                   data = uga_fin_sf1,\n                   approach = \"CV\",\n                   kernel = \"bisquare\",\n                   adaptive = FALSE,\n                   longlat = FALSE)\n\nFixed bandwidth: 447943 CV score: 13.07855 \nFixed bandwidth: 276899.4 CV score: 14.4272 \nFixed bandwidth: 553653.8 CV score: 12.61 \nFixed bandwidth: 618986.6 CV score: 12.4853 \nFixed bandwidth: 659364.5 CV score: 12.44387 \nFixed bandwidth: 684319.5 CV score: 12.42607 \nFixed bandwidth: 699742.5 CV score: 12.41726 \nFixed bandwidth: 709274.4 CV score: 12.41252 \nFixed bandwidth: 715165.5 CV score: 12.40983 \nFixed bandwidth: 718806.3 CV score: 12.40826 \nFixed bandwidth: 721056.5 CV score: 12.40732 \nFixed bandwidth: 722447.2 CV score: 12.40675 \nFixed bandwidth: 723306.7 CV score: 12.4064 \nFixed bandwidth: 723837.9 CV score: 12.40619 \nFixed bandwidth: 724166.2 CV score: 12.40606 \nFixed bandwidth: 724369.1 CV score: 12.40598 \n\n\n\n\nUsing the optimal fixed bandwidth, we calibrated the GWR model with gwr.basic(). The results indicate that the AIC of the fixed-bandwidth GWR model is 68.8, which is significantly lower than that of the global MLR model (AIC = 50.4). Additionally, the GWR model achieved an adjusted R² of 0.843.\n\ngwr_fixed &lt;- gwr.basic(fin_inclusion ~ age25_34 + age35_44 + \n                         education_sec + is_agribusiness +\n                         earned_med + earned_high + own_mobile_phone +\n                         finliteracy_plan + finliteracy_save + finliteracy_aware,\n                       data = uga_fin_sf1,\n                       bw = bw_fixed, \n                       kernel = 'bisquare', \n                       longlat = FALSE)\ngwr_fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-11-11 00:35:15.421247 \n   Call:\n   gwr.basic(formula = fin_inclusion ~ age25_34 + age35_44 + education_sec + \n    is_agribusiness + earned_med + earned_high + own_mobile_phone + \n    finliteracy_plan + finliteracy_save + finliteracy_aware, \n    data = uga_fin_sf1, bw = bw_fixed, kernel = \"bisquare\", longlat = FALSE)\n\n   Dependent (y) variable:  fin_inclusion\n   Independent variables:  age25_34 age35_44 education_sec is_agribusiness earned_med earned_high own_mobile_phone finliteracy_plan finliteracy_save finliteracy_aware\n   Number of data points: 123\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-0.75863 -0.24213  0.01064  0.19921  0.75298 \n\n   Coefficients:\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)        -0.6543     0.1976  -3.312  0.00125 ** \n   age25_34            0.9206     0.2863   3.215  0.00170 ** \n   age35_44            1.4474     0.3687   3.925  0.00015 ***\n   education_sec       0.6266     0.2690   2.330  0.02162 *  \n   is_agribusiness     0.4839     0.1358   3.563  0.00054 ***\n   earned_med          0.7636     0.2312   3.302  0.00129 ** \n   earned_high         0.9467     0.5078   1.864  0.06489 .  \n   own_mobile_phone    0.5519     0.2721   2.028  0.04494 *  \n   finliteracy_plan    0.8575     0.2607   3.289  0.00134 ** \n   finliteracy_save    0.9507     0.2271   4.186 5.68e-05 ***\n   finliteracy_aware   1.9384     0.2811   6.897 3.33e-10 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 0.3043 on 112 degrees of freedom\n   Multiple R-squared: 0.8551\n   Adjusted R-squared: 0.8422 \n   F-statistic: 66.11 on 10 and 112 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 10.36825\n   Sigma(hat): 0.2927251\n   AIC:  68.82621\n   AICc:  71.66257\n   BIC:  37.31863\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: bisquare \n   Fixed bandwidth: 724369.1 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                          Min.   1st Qu.    Median   3rd Qu.    Max.\n   Intercept         -0.683016 -0.632200 -0.605856 -0.592403 -0.5261\n   age25_34           0.668388  0.794241  0.878266  0.956548  1.0412\n   age35_44           1.106205  1.292176  1.405400  1.567049  1.8719\n   education_sec      0.421038  0.520655  0.610601  0.700123  0.8134\n   is_agribusiness    0.395924  0.432783  0.448846  0.475894  0.5310\n   earned_med         0.551214  0.710599  0.758881  0.826400  0.9363\n   earned_high        0.520001  0.703192  0.825605  0.963703  1.2191\n   own_mobile_phone   0.071497  0.427809  0.615259  0.702556  0.9120\n   finliteracy_plan   0.830708  0.845049  0.859533  0.876469  0.9298\n   finliteracy_save   0.761426  0.885904  0.927344  0.957869  1.0618\n   finliteracy_aware  1.834788  1.931056  2.005183  2.045504  2.1275\n   ************************Diagnostic information*************************\n   Number of data points: 123 \n   Effective number of parameters (2trace(S) - trace(S'S)): 16.87521 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 106.1248 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 71.45903 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 50.40986 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): -17.90227 \n   Residual sum of squares: 9.655359 \n   R-square value:  0.865082 \n   Adjusted R-square value:  0.8434243 \n\n   ***********************************************************************\n   Program stops at: 2024-11-11 00:35:15.431977 \n\n\n\n\nSince certain functions and outputs, such as local p-values of coefficients, are not available for sf objects, we need to build the same fixed-bandwidth GWR model using a Spatial object instead.\nFollowing the GWmodel authors’ methodology, we convert the sf object to a Spatial object, then calibrate the GWR model as before. We use gwr.t.adjust() to compute and adjust the p-values, helping to reduce the risk of type I errors.\n\nuga_fin_sp &lt;- as(uga_fin_sf1, \"Spatial\")\n\ngwr_fixed_sp &lt;- gwr.basic(fin_inclusion ~ age25_34 + age35_44 + \n                         education_sec + is_agribusiness +\n                         earned_med + earned_high + own_mobile_phone +\n                         finliteracy_plan + finliteracy_save + finliteracy_aware,\n                       data = uga_fin_sp,\n                       bw = bw_fixed, \n                       kernel = 'bisquare', \n                       longlat = FALSE)\n\ngwr_fixed_tadj &lt;- gwr.t.adjust(gwr_fixed_sp)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#consolidating-gwr-model-output",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#consolidating-gwr-model-output",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "6.2 Consolidating GWR Model Output",
    "text": "6.2 Consolidating GWR Model Output\nIn this step, we consolidate outputs from our GWR models to enable visualisation and further examination.\nFirst, we retrieve the SDF output from the fixed-bandwidth GWR model (sf object version), drop the geometry using st_drop_geometry(), convert it to a tibble with as_tibble(), and remove unnecessary columns.\nNext, we extract the Bonferroni-corrected local coefficient p-values from the Spatial object version of the GWR model. These output p-values are binary (0 or 1), where 1 indicates statistical significance. We created a function, sig_recode, to recode values of 1 as “significant” and values of 0 as “non-significant.”\nFinally, we combined these two outputs into the uga_fin_sf1 dataframe.\n\ngwr_fixed_output &lt;- gwr_fixed$SDF %&gt;% \n  st_drop_geometry() %&gt;%\n  as_tibble() %&gt;%\n  select(-c(2:11))\n\nsig_recode &lt;- function(x) {\n  factor(if_else(x == 1, \"Significant\", \"Non-significant\"), levels = c(\"Non-significant\",\"Significant\"))\n}\n\ngwr_bonferroni_sig &lt;- gwr_fixed_tadj$SDF %&gt;%\n  as_tibble() %&gt;% \n  select(contains(\"_bo\")) %&gt;%\n  mutate_all(sig_recode)\n\ngwr_sf_fixed &lt;- cbind(uga_fin_sf1, gwr_fixed_output, gwr_bonferroni_sig)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-local-r2",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-local-r2",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "6.3 Visualising Local R2",
    "text": "6.3 Visualising Local R2\nThe map of local R² values is shown below. The plot indicates that R² values are higher in eastern Uganda and decrease toward the west, with local R² ranging from 0.817 to 0.892.\n\ntmap_mode(\"view\")\ntm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"Local_R2\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(6,9))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-residuals",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-residuals",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "6.4 Visualising Residuals",
    "text": "6.4 Visualising Residuals\nThe map below displays the GWR residuals, which range from -0.759 to 0.753. These residuals are relatively small compared to the financial inclusion score range of 0 to 7.\n\ntmap_mode(\"view\")\ntm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"mlr_residuals\",\n          alpha = 0.6,\n          style =\"quantile\",\n          title = \"Residuals\") +\n  tm_view(set.zoom.limits = c(6,9))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-coefficients-se-and-p-value",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-coefficients-se-and-p-value",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "6.5 Visualising Coefficients SE and p-value",
    "text": "6.5 Visualising Coefficients SE and p-value\n\nAge (25-34)Age (35-44)Education (Sec)Agriculture BusinessEarned Income (Medium)Earned Income (High)Own Mobile PhoneFinancial Literacy (Planning & Budgeting)Financial Literacy (Saving Behaviour)Financial Literacy (Awareness of Financial Products)\n\n\nThe plot shows that the p-value for the Age (25–34) variable is statistically significant across all districts. However, the standard error varies geographically, with smaller errors at the center of Uganda and increasing errors moving outward from the center.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"age25_34_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"age25_34_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe plot shows that the p-value for the Age (35–44) variable is statistically significant in most districts, except for those in western Uganda, where it is not significant. The standard error also varies geographically, with smaller errors at the center of Uganda and increasing errors toward the outer regions.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"age35_44_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"age35_44_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe plot shows that the p-value for the Education (Sec) variable is statistically significant across all districts. However, the standard error varies geographically, with smaller errors at the center of Uganda and increasing errors moving outward from the center.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"education_sec_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"education_sec_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe plot shows that the p-value for the Agricultural Business variable is statistically significant across all districts. However, the standard error varies geographically, with smaller errors at the center of Uganda and increasing errors moving outward from the center.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"is_agribusiness_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"is_agribusiness_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe plot shows that the p-value for the Earned Income (Medium) variable is statistically significant across all districts. However, the standard error varies geographically, with smaller errors at the center of Uganda and increasing errors moving outward from the center.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"earned_med_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"earned_med_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe observed similar pattern for Earned Income (High) variable as well. However, we noticed that the range of standard error is higher for this variable.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"earned_high_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"earned_high_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe observed similar pattern for Own Mobile Phone variable as well.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"own_mobile_phone_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"own_mobile_phone_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe observed similar pattern for Financial Literacy (Planning & Budgeting) variable as well.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"finliteracy_plan_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"finliteracy_plan_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe plot shows that the p-value for the Financial Literacy (Saving Behaviour) variable is statistically significant in most districts, except for a few in southern Uganda, where it is not significant. The standard error also varies geographically, with smaller errors at the center of Uganda and increasing errors toward the outer regions.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"finliteracy_save_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"finliteracy_save_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe plot shows that the p-value for the Financial Literacy (Awareness of Financial Products) variable is non-statistically significant in all the districts.\n\n\nCode\ntmap_mode(\"view\")\nSE &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"finliteracy_aware_SE\",\n          alpha = 0.6,\n          style=\"quantile\",\n          title = \"Std Error\") +\n  tm_view(set.zoom.limits = c(6,9))\n\npval &lt;- tm_shape(uga_fin_sf1) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(gwr_sf_fixed) +  \n  tm_dots(col = \"finliteracy_aware_p_bo\",\n          alpha = 0.6,\n          palette = c(\"lightgrey\", \"red\"),\n          title = \"Significance\") +\n  tm_view(set.zoom.limits = c(6,9))\n\ntmap_arrange(SE, pval, asp=1, ncol=2, sync = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#earned-income",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#earned-income",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.2 Earned Income",
    "text": "2.2 Earned Income\nTo determine individuals’ earned income, the following steps were performed:\n\nHandling Missing Data: income1, income2, and income3 represent the reported income levels of individuals. Values coded as missing in these three variables were replaced with NA_real_.\nFiltering Earned Income: Earned income was considered only if the income source was employment-related (i.e., not from investments, social transfers, or gifts). If income was derived from these non-earned sources or the individual was not working, the income was set to 0.\nSelecting Highest Income Bracket: Among the three earned income variables, the highest income bracket was chosen to represent earned income using pmax(). These values could not be summed as they are in income brackets rather than absolute amounts.\nCategorising Income Levels: We created three earned income categories: low (up to UGX 250K per month), medium (up to UGX 1M per month), and high.\n\n\nfin_df2 &lt;- fin_df1 %&gt;%\n  mutate(income1 = if_else(income1 %in% c(8,9,99,997,998), NA_real_, income1),\n         income2 = if_else(income2 %in% c(8,9,99,997,998), NA_real_, income2),\n         income3 = if_else(income3 %in% c(8,9,99,997,998), NA_real_, income3),\n         earned_income1 = case_when(income_source1 %in% c(5,6,7,8,9,10,11) ~ 0,\n                                    income_source1 %in% c(1,2,3,4) ~ income1,\n                                    employment_nonworking == 1 ~ 0,\n                                    TRUE ~ NA_real_),\n         earned_income2 = case_when(income_source2 %in% c(5,6,7,8,9,10,11) ~ 0,\n                                    income_source2 %in% c(1,2,3,4) ~ income2,\n                                    employment_nonworking == 1 ~ 0,\n                                    TRUE ~ NA_real_),\n         earned_income3 = case_when(income_source3 %in% c(5,6,7,8,9,10,11) ~ 0,\n                                    income_source3 %in% c(1,2,3,4) ~ income3,\n                                    employment_nonworking == 1 ~ 0,\n                                    TRUE ~ NA_real_),\n         earned_income = pmax(earned_income1, earned_income2, earned_income3)) %&gt;%\n  mutate(earned_low = case_when(earned_income %in% c(1,2) ~ 1,\n                                is.na(earned_income) ~ NA_real_,\n                                TRUE ~ 0),\n         earned_med = case_when(earned_income %in% c(3,4) ~ 1,\n                                is.na(earned_income) ~ NA_real_,\n                                TRUE ~ 0),\n         earned_high = case_when(earned_income %in% c(5,6,7) ~ 1,\n                                is.na(earned_income) ~ NA_real_,\n                                TRUE ~ 0))\n\nAdditionally, we created a variable, income_source_cnt, to capture the number of income sources (earned, investment, social, and gift). Using the rowwise() function, we computed the total income sources for each individual, followed by ungroup() to reset the data frame and remove unnecessary variables.\n\nfin_df2 &lt;- fin_df2 %&gt;%\n  rowwise() %&gt;%\n  mutate(income_source_cnt = sum(!income_source1 %in% c(10,11),\n                                 !income_source2 %in% c(10,11),\n                                 !income_source3 %in% c(10,11))) %&gt;%\n  ungroup() %&gt;%\n  select(-c(income1, income2, income3, earned_income,\n            earned_income1, earned_income2, earned_income3,\n            income_source1, income_source2, income_source3,\n            employment_nonworking))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-literacy-planningbudgeting",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-literacy-planningbudgeting",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.4.1 Financial Literacy (Planning/Budgeting)",
    "text": "2.4.1 Financial Literacy (Planning/Budgeting)\nFinancial literacy is multifaceted and encompasses several dimensions. In this study, we assessed financial literacy through three key aspects, calculating a score for each:\n\nFinancial Planning and Budgeting\nSaving Behaviours\nAwareness of Financial Products\n\nFor Financial Planning and Budgeting, we computed a composite mean score for each individual based on their responses to the following five survey questions:\n\nYou keep track of the money that you receive and spend\nYou know how much money you spent last week\nYou adjust your expenses according to the money you have available\nYou make a plan or budget to manage your income and expenses\nI set long term financial goals and try to achieve them\n\nThe five questions were recoded to binary values (1 for positive responses and 0 otherwise). To compute the composite mean score, rowwise() was applied, allowing the mean score to be computed for each individual. We removed variables that were no longer needed.\n\nfin_df4 &lt;- fin_df3 %&gt;%\n  mutate(finliteracy_plan1 = if_else(finliteracy_plan1 == 1, 1, 0),\n         finliteracy_plan2 = if_else(finliteracy_plan2 == 1, 1, 0),\n         finliteracy_plan3 = if_else(finliteracy_plan3 == 1, 1, 0),\n         finliteracy_plan4 = if_else(finliteracy_plan4 == 1, 1, 0),\n         finliteracy_plan5 = if_else(finliteracy_plan5 == 1, 1, 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finliteracy_plan = mean(c(finliteracy_plan1, finliteracy_plan2, \n                                   finliteracy_plan3, finliteracy_plan4,\n                                   finliteracy_plan5))) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finliteracy_plan1, finliteracy_plan2, finliteracy_plan3, \n            finliteracy_plan4, finliteracy_plan5))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-literacy-saving-behaviours",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-literacy-saving-behaviours",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.4.2 Financial Literacy (Saving Behaviours)",
    "text": "2.4.2 Financial Literacy (Saving Behaviours)\nFor Saving Behaviours, we computed a composite mean score for each individual based on their responses to the following three survey questions:\n\nYou sometimes do not buy things that you want so that you save money instead\nYou get information about different ways of savings before you decide where/how to save\nYou try different savings options to find the one where you can get the most interest.\n\nThe three questions were recoded to binary values (1 for positive responses and 0 otherwise). To compute the composite mean score, rowwise() was applied, allowing the mean score to be computed for each individual. We removed variables that were no longer needed.\n\nfin_df4 &lt;- fin_df4 %&gt;%\n  mutate(finliteracy_save1 = if_else(finliteracy_save1 == 1, 1, 0),\n         finliteracy_save2 = if_else(finliteracy_save2 == 1, 1, 0),\n         finliteracy_save3 = if_else(finliteracy_save3 == 1, 1, 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finliteracy_save = mean(c(finliteracy_save1, finliteracy_save2, finliteracy_save3))) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finliteracy_save1, finliteracy_save2, finliteracy_save3))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-literacy-awareness-of-financial-products",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-literacy-awareness-of-financial-products",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.4.3 Financial Literacy (Awareness of Financial Products)",
    "text": "2.4.3 Financial Literacy (Awareness of Financial Products)\nFor Awareness of Financial Products, we computed a composite mean score for each individual based on their awareness of the following common financial products:\n\nDigital loans\nDebit Cards\nCredit Cards\nMobile or Internet Banking\nMobile Money wallets or E-money wallets\nRemittance Channels, e.g., MoneyGram, Western Union\n\nThe six questions were recoded to binary values (1 for positive responses and 0 otherwise). To compute the composite mean score, rowwise() was applied, allowing the mean score to be computed for each individual. We removed variables that were no longer needed.\n\nfin_df4 &lt;- fin_df4 %&gt;%\n  mutate(finliteracy_aware1 = if_else(finliteracy_aware1 == 1, 1, 0),\n         finliteracy_aware2 = if_else(finliteracy_aware2 == 1, 1, 0),\n         finliteracy_aware3 = if_else(finliteracy_aware3 == 1, 1, 0),\n         finliteracy_aware4 = if_else(finliteracy_aware4 == 1, 1, 0),\n         finliteracy_aware5 = if_else(finliteracy_aware5 == 1, 1, 0),\n         finliteracy_aware6 = if_else(finliteracy_aware6 == 1, 1, 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finliteracy_aware = mean(c(finliteracy_aware1, finliteracy_aware2, \n                                    finliteracy_aware3, finliteracy_aware4,\n                                    finliteracy_aware5, finliteracy_aware6))) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finliteracy_aware1, finliteracy_aware2, finliteracy_aware3, \n            finliteracy_aware4, finliteracy_aware5, finliteracy_aware6))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-insurance-products",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-insurance-products",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.5.1 Financial Inclusion (Insurance Products)",
    "text": "2.5.1 Financial Inclusion (Insurance Products)\nWe followed the methodology used by Nguyen et al. (2021) to calculate a composite score for financial inclusion, focusing on aspects aligned with its core definition:\n\nAccess to Insurance Products\nAccess to Common Savings Mechanisms\nAccess to Remittance Services\nAccess to Common Payment Channels\nCredit Access\n\nEach respondent could receive a maximum score of 1 for having access to insurance, remittance, or credit products/services. For savings and payments, a maximum score of 2 was assigned, reflecting their centrality in everyday financial activity. This higher weighting acknowledges their frequent usage in daily transactions.\nFor insurance products, the assessment relied on a single question:\n\nDo you have any existing insurance policy?\n\nResponses were recoded to binary values (1 for positive responses, 0 otherwise) and relocated to the last column of the dataset.\n\nfin_df5 &lt;- fin_df4 %&gt;%\n  mutate(finincl_risk = if_else(finincl_risk == 1, 1, 0)) %&gt;%\n  relocate(finincl_risk, .after = last_col())"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-savings-mechanisms",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-savings-mechanisms",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.5.2 Financial Inclusion (Savings Mechanisms)",
    "text": "2.5.2 Financial Inclusion (Savings Mechanisms)\nFor Savings Mechanism, we computed a composite score (maximum 2 points) for each individual based on responses to the following common saving mechanisms:\n\nHave you ever saved electronically?\n\nSaved in the last 12 months in… - Commercial Bank - Credit Institution - MDI - Savings and credit cooperatives (SACCOs) including shares - Microfinance Institutions - Mobile money - Savings group (VSLA, ROSCA) - Investment club\nEach question was recoded to binary values (1 for positive responses and 0 otherwise). To compute the composite score, rowwise() was applied to sum the responses for each individual. We used pmin() to cap the total at 2 points. Variables no longer needed were removed.\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  mutate(finincl_save1 = if_else(finincl_save1 == 1, 1, 0),\n         finincl_save2 = case_when(finincl_save2 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save3 = case_when(finincl_save3 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save4 = case_when(finincl_save4 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save5 = case_when(finincl_save5 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save6 = case_when(finincl_save6 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save7 = case_when(finincl_save7 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save8 = case_when(finincl_save8 == 1 ~ 1,\n                                   TRUE ~ 0),\n         finincl_save9 = case_when(finincl_save9 == 1 ~ 1,\n                                   TRUE ~ 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finincl_save = sum(finincl_save1, finincl_save2, finincl_save3,\n                            finincl_save4, finincl_save5, finincl_save6,\n                            finincl_save7, finincl_save8, finincl_save9),\n         finincl_save = pmin(finincl_save, 2)) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finincl_save1, finincl_save2, finincl_save3,\n            finincl_save4, finincl_save5, finincl_save6,\n            finincl_save7, finincl_save8, finincl_save9))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-remittance-services",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-remittance-services",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.5.3 Financial Inclusion (Remittance Services)",
    "text": "2.5.3 Financial Inclusion (Remittance Services)\nFor Remittance Services, we computed a composite score (maximum 1 point) for each individual based on responses to the following 2 questions:\n\nIn the past 12 months, have you sent money to someone in a different place within the country or outside of Uganda?\nIn the past 12 months, have you received money from someone in a different place within the country or from outside the country?\n\nEach question was recoded to binary values (1 for positive responses and 0 otherwise). We used pmax() to cap the total at 1 point. Variables no longer needed were removed.\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  mutate(finincl_remit1 = if_else(finincl_remit1 == 1, 1, 0),\n         finincl_remit2 = if_else(finincl_remit2 == 1, 1, 0),\n         finincl_remit = pmax(finincl_remit1, finincl_remit2)) %&gt;%\n  select(-c(finincl_remit1, finincl_remit2))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-payment-channels",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-payment-channels",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.5.4 Financial Inclusion (Payment Channels)",
    "text": "2.5.4 Financial Inclusion (Payment Channels)\nFor Payment Channels, we computed a composite score (maximum 2 points) for each individual based on their usage to the following 5 common payment channels in the last 12 months:\n\nATM / Debit card\nCredit card\nBank transfer\nMobile money\nCheque\n\nEach question was recoded to binary values (1 for positive responses and 0 otherwise). To compute the composite score, rowwise() was applied to sum the responses for each individual. We used pmin() to cap the total at 2 points. Variables no longer needed were removed.\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  mutate(finincl_pay1 = if_else(finincl_pay1 != 5, 1, 0),\n         finincl_pay2 = if_else(finincl_pay2 != 5, 1, 0),\n         finincl_pay3 = if_else(finincl_pay3 != 5, 1, 0),\n         finincl_pay4 = if_else(finincl_pay4 != 5, 1, 0),\n         finincl_pay5 = if_else(finincl_pay5 != 5, 1, 0)) %&gt;%\n  rowwise() %&gt;%\n  mutate(finincl_pay = sum(finincl_pay1, finincl_pay2, finincl_pay3,\n                           finincl_pay4, finincl_pay5),\n         finincl_pay = pmin(finincl_pay, 2)) %&gt;%\n  ungroup() %&gt;%\n  select(-c(finincl_pay1, finincl_pay2, finincl_pay3,\n            finincl_pay4, finincl_pay5))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-credit",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#financial-inclusion-credit",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.5.4 Financial Inclusion (Credit)",
    "text": "2.5.4 Financial Inclusion (Credit)\nFor Credits, we computed a composite score (maximum 1 point) for each individual based on responses to the following 5 questions:\n\nHave you ever applied for a loan electronically?\nHave you ever received a loan disbursement/pay-out electronically?\nHave you made a loan payment electronically?\nHave you, in the past 12 months, been paying back money that you borrowed (e.g. mortgage, Boda loan etc) from anybody or any institution?\nHave you ever borrowed money through mobile money services?\n\nEach question was recoded to binary values (1 for positive responses and 0 otherwise). We used pmax() to cap the total at 1 point. Variables no longer needed were removed.\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  mutate(finincl_loan1 = if_else(finincl_loan1 == 1, 1, 0),\n         finincl_loan2 = if_else(finincl_loan2 == 1, 1, 0),\n         finincl_loan3 = if_else(finincl_loan3 == 1, 1, 0),\n         finincl_loan4 = if_else(finincl_loan4 == 1, 1, 0),\n         finincl_loan5 = if_else(finincl_loan5 == 1, 1, 0),\n         finincl_loan = pmax(finincl_loan1, finincl_loan2, finincl_loan3,\n                             finincl_loan4, finincl_loan5)) %&gt;%\n  select(-c(finincl_loan1, finincl_loan2, finincl_loan3,\n                             finincl_loan4, finincl_loan5))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#total-financial-inclusion",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#total-financial-inclusion",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.5.6 Total Financial Inclusion",
    "text": "2.5.6 Total Financial Inclusion\nThe total score for financial inclusion was a summation of their scores to:\n\nAccess to Insurance Products (max 1 point)\nAccess to Common Savings Mechanisms (max 2 points)\nAccess to Remittance Services (max 1 point)\nAccess to Common Payment Channels (max 2 points)\nCredit Access (max 1 point)\n\n\nfin_df5 &lt;- fin_df5 %&gt;%\n  rowwise() %&gt;%\n  mutate(fin_inclusion = sum(finincl_risk, finincl_save, finincl_remit,\n                             finincl_pay, finincl_loan)) %&gt;%\n  ungroup()\nhead(fin_df5)\n\n# A tibble: 6 × 33\n  id    district age16_24 age25_34 age35_44 age45_54 gender_female education_pri\n  &lt;chr&gt; &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n1 0010… ABIM            0        1        0        0             1             0\n2 0010… ABIM            0        0        1        0             1             1\n3 0010… ABIM            0        1        0        0             1             0\n4 0010… ABIM            0        1        0        0             0             1\n5 0010… ABIM            0        0        1        0             1             1\n6 0010… ABIM            1        0        0        0             0             1\n# ℹ 25 more variables: education_sec &lt;dbl&gt;, education_voc &lt;dbl&gt;,\n#   education_deg &lt;dbl&gt;, household_big &lt;dbl&gt;, is_rural &lt;dbl&gt;,\n#   employment_formal &lt;dbl&gt;, employment_self &lt;dbl&gt;,\n#   employment_unemployed &lt;dbl&gt;, is_agribusiness &lt;dbl&gt;, earned_low &lt;dbl&gt;,\n#   earned_med &lt;dbl&gt;, earned_high &lt;dbl&gt;, income_source_cnt &lt;int&gt;,\n#   own_mobile_phone &lt;dbl&gt;, access_internet &lt;dbl&gt;, digital_literacy &lt;int&gt;,\n#   finliteracy_plan &lt;dbl&gt;, finliteracy_save &lt;dbl&gt;, finliteracy_aware &lt;dbl&gt;, …"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#checking-missing-data",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#checking-missing-data",
    "title": "Take Home Ex 3: Financial Inclusion in Uganda: An Explanatory Study Using Geographically Weighted Regression",
    "section": "2.6 Checking Missing Data",
    "text": "2.6 Checking Missing Data\nBefore aggregating scores at the district level, we examined the percentage of missing data across variables. Employment-related variables have 0.6% missing data, while earned income variables have 12.7%. All other variables are complete. The level of missing data is considered acceptable, and cases with missing values were retained. During district-level aggregation for employment and earned income, missing values were ignored in the calculation of the mean, effectively imputing the mean for these cases.\n\ncolMeans(is.na(fin_df5))\n\n                   id              district              age16_24 \n          0.000000000           0.000000000           0.000000000 \n             age25_34              age35_44              age45_54 \n          0.000000000           0.000000000           0.000000000 \n        gender_female         education_pri         education_sec \n          0.000000000           0.000000000           0.000000000 \n        education_voc         education_deg         household_big \n          0.000000000           0.000000000           0.000000000 \n             is_rural     employment_formal       employment_self \n          0.000000000           0.006612091           0.006612091 \nemployment_unemployed       is_agribusiness            earned_low \n          0.006612091           0.000000000           0.127204030 \n           earned_med           earned_high     income_source_cnt \n          0.127204030           0.127204030           0.000000000 \n     own_mobile_phone       access_internet      digital_literacy \n          0.000000000           0.000000000           0.000000000 \n     finliteracy_plan      finliteracy_save     finliteracy_aware \n          0.000000000           0.000000000           0.000000000 \n         finincl_risk          finincl_save         finincl_remit \n          0.000000000           0.000000000           0.000000000 \n          finincl_pay          finincl_loan         fin_inclusion \n          0.000000000           0.000000000           0.000000000"
  }
]