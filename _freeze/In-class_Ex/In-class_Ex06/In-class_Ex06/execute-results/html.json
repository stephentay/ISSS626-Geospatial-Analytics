{
  "hash": "cc6377b8017ed26ce886d26334bad6d1",
  "result": {
    "markdown": "---\ntitle: \"In-class Ex 6\"\nsubtitle: \"\"\nauthor: \"Stephen Tay\"\ndate: \"30 Sep 2024\"\ndate-modified:  \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  warning: false\n  freeze: true \n---\n\n\n# Overview\nIn this exercise, we will perform an **Emerging Hot Spot Analysis**, a spatio-temporal method used to identify and describe the evolution of hot spots and cold spots over time. The analysis involves four main steps:\n\n-\tBuilding a space-time cube.\n-\tCalculating the Getis-Ord Gi* statistic for each bin using an FDR correction (there are some differences in calculating Gi* when we are using time series data).\n-\tEvaluating hot and cold spot trends with the Mann-Kendall (MK) trend test.\n-\tCategorising each study area location based on the trend’s z-score and p-value, along with the hot spot z-score and p-value.\n\nThe `plotly` package enables the creation of interactive plots, allowing you to explore and monitor trends over time.\nThe `Kendall` package is used for conducting Mann-Kendall trend tests.\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, plotly, tidyverse, Kendall)\n```\n:::\n\n\n# 1. Importing & Transforming Data\nTwo datasets will be used in this in-class exercise:\n\n- **Hunan County Boundary Layer**: A geospatial dataset in ESRI shapefile format.\n- **Hunan_GDPPC.csv**: A CSV file containing GDPPC indicator for Hunan counties, from 2005 to 2021.\n\n::: panel-tabset\n## Hunan shapefile\nIn this in-class exercise, there’s no need to convert the Geographical Coordinate System to a projected coordinate system.\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Hunan' from data source \n  `/Users/stephentay/stephentay/ISSS626-Geospatial-Analytics/In-class_Ex/In-class_Ex06/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\nglimpse(hunan)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 88\nColumns: 8\n$ NAME_2     <chr> \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       <int> 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 211…\n$ NAME_3     <chr> \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ ENGTYPE_3  <chr> \"County\", \"County\", \"County City\", \"County\", \"County\", \"Cou…\n$ Shape_Leng <dbl> 1.869074, 2.360691, 1.425620, 3.474325, 2.289506, 4.171918,…\n$ Shape_Area <dbl> 0.10056190, 0.19978745, 0.05302413, 0.18908121, 0.11450357,…\n$ County     <chr> \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ geometry   <POLYGON [°]> POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 …\n```\n:::\n:::\n\n## Hunan's GDPPC\n\n::: {.cell}\n\n```{.r .cell-code}\nGDPPC <- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\nglimpse(GDPPC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,496\nColumns: 3\n$ Year   <dbl> 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 200…\n$ County <chr> \"Longshan\", \"Changsha\", \"Wangcheng\", \"Ningxiang\", \"Liuyang\", \"Z…\n$ GDPPC  <dbl> 3469, 24612, 14659, 11687, 13406, 8546, 10944, 8040, 7383, 1168…\n```\n:::\n:::\n\n:::\n\n# 2. Creating a Time Series Cube\n`spacetime()` function of the `sfdep` package is used to create an spatio-temporal cube. In using the spacetime cube, **the space entity (e.g. administrative boundary or the hexagon) must remain constant over time**; only the attribute in the space entity changes over time.\nIt is useful to verify that your object is a space-time cube object using the `is_spacetime_cube()` function.\n\nNote that your time field must be an integer (it cannot be a real number, e.g. you may have to drop the time values in order to make it an integer time value.)\n\n::: {.cell}\n\n```{.r .cell-code}\nGDPPC_st <- spacetime(GDPPC, # attribute datafile\n                      hunan, # geospatial datefile\n                      .loc_col = \"County\", # spatial field\n                      .time_col = \"Year\" # time field which must be in integer\n                      )\nis_spacetime_cube(GDPPC_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n# 3. Computing Gi*\nWe are computing local Gi* statistics which includes self (Gi statistic does not include self).\nWhen computing Gi* over time, we need to activate the geometry context using `activate(\"geometry\")`.\n\nThe code below identifies neighbours and derives inverse distance weights.\n\nWe use `set_nbs()` and `set_wts()` to copy the \"nb\" and \"wt\" columns to each time slice. This dataset now has neighbours and weights for each time-slice.\n\nDo not rearrange the rows as row order is very important in the analysis.\n\n::: {.cell}\n\n```{.r .cell-code}\nGDPPC_nb <- GDPPC_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wt = st_inverse_distance(nb, # we are using the inverse distance weight\n                             geometry,\n                             scale = 1,\n                             alpha = 1),\n    .before = 1) %>%\n  set_nbs(\"nb\") %>% # we fix them as row order is very important \n  set_wts(\"wt\")\n```\n:::\n\n\nNext, we calculate the local Gi* for each location by grouping the data by year and using the `local_gstar_perm()` function from the `sfdep` package. Then, we use `unnest()` to expand the `gi_star` column in the newly created gi_star data frame.\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_star <- GDPPC_nb %>%\n  group_by(Year) %>%\n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %>%\n  tidyr::unnest(gi_star)\n```\n:::\n\n\n# 4. Mann-Kendall Test\nThe Mann-Kendall (MK) test is a statistical method used to confirm the presence of a monotonic trend in a time series. The hypotheses are as follows:\n\n- H0: No monotonic trend.\n- H1: A monotonic trend (increasing or decreasing) is present.\n\nWe reject the null hypothesis if the p-value is smaller than the chosen alpha level. The tau value, which ranges from -1 to 1, indicates the direction and strength of the trend: \n\n- -1 represents a perfectly decreasing trend\n- 1 signifies a perfectly increasing trend.\n\nTo perform an MK test, at least 12 time periods of data are required.\n\n::: panel-tabset\n## Changsha example\nUsing the computed local Gi* statistics, we can assess the trend at each location with the MK test. \n\nLet’s take Changsha County as an example and plot its Gi* statistics from 2005 to 2021.\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg <- gi_star %>%\n  ungroup() %>%\n  filter(County == \"Changsha\") %>%\n  select(County, Year, gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cbg, aes(x = Year, y = gi_star)) +\n  geom_line() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Changsha's interactive Mann-Kendall plot\nWe can create an interactive MK plot using `ggplotly()` function from the `plotly` package.\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(data = cbg, aes(x = Year, y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-7d08e6ec05cebc7fee5b\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7d08e6ec05cebc7fee5b\">{\"x\":{\"data\":[{\"x\":[2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"y\":[5.0282995066289065,5.1692011079782327,5.2958892892912894,5.6039537096873984,6.2788862246004742,5.9357455762937326,5.7508709054298892,5.6942475830114585,5.7085054237054784,5.760812156173353,6.0971272412571889,6.0036547779673155,6.2028053540357915,6.0371816202738309,6.579432171885526,5.7669155664195504,5.7486534794156494],\"text\":[\"Year: 2005<br />gi_star: 5.028300\",\"Year: 2006<br />gi_star: 5.169201\",\"Year: 2007<br />gi_star: 5.295889\",\"Year: 2008<br />gi_star: 5.603954\",\"Year: 2009<br />gi_star: 6.278886\",\"Year: 2010<br />gi_star: 5.935746\",\"Year: 2011<br />gi_star: 5.750871\",\"Year: 2012<br />gi_star: 5.694248\",\"Year: 2013<br />gi_star: 5.708505\",\"Year: 2014<br />gi_star: 5.760812\",\"Year: 2015<br />gi_star: 6.097127\",\"Year: 2016<br />gi_star: 6.003655\",\"Year: 2017<br />gi_star: 6.202805\",\"Year: 2018<br />gi_star: 6.037182\",\"Year: 2019<br />gi_star: 6.579432\",\"Year: 2020<br />gi_star: 5.766916\",\"Year: 2021<br />gi_star: 5.748653\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283108,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2004.2,2021.8],\"tickmode\":\"array\",\"ticktext\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"tickvals\":[2005,2010,2015,2020],\"categoryorder\":\"array\",\"categoryarray\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[4.9507428733660754,6.656988805148357],\"tickmode\":\"array\",\"ticktext\":[\"5.0\",\"5.5\",\"6.0\",\"6.5\"],\"tickvals\":[5,5.5,6,6.5],\"categoryorder\":\"array\",\"categoryarray\":[\"5.0\",\"5.5\",\"6.0\",\"6.5\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"811d4adf2bfd\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"811d4adf2bfd\",\"visdat\":{\"811d4adf2bfd\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## Changsha's MK test report\nIn the results, `sl` represents the p-value. Since the p-value is less than 0.05 and tau is greater than 0, we reject the null hypothesis, indicating a slight upward trend.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n    tau      sl     S     D  varS\n  <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 0.485 0.00742    66  136.  589.\n```\n:::\n:::\n\n## Dataframe of MK test for each location\nWe can perform the Mann-Kendall test for all locations simultaneously at once using `group_by(County)`.\n\nThe resulting dataframe reveals that some counties exhibit statistically significant trends, while others do not. Additionally, some show positive trends, while others display a decline.\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- gi_star %>%\n  group_by(County) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\nhead(ehsa)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  County        tau        sl     S     D  varS\n  <chr>       <dbl>     <dbl> <dbl> <dbl> <dbl>\n1 Anhua      0.191  0.303        26  136.  589.\n2 Anren     -0.294  0.108       -40  136.  589.\n3 Anxiang    0      1             0  136.  589.\n4 Baojing   -0.691  0.000128    -94  136.  589.\n5 Chaling   -0.0882 0.650       -12  136.  589.\n6 Changning -0.750  0.0000318  -102  136.  589.\n```\n:::\n:::\n\n\n## Sorting of dataframe\nWe could sort the dataframe to show significant emerging hot/cold spots.\n\n::: {.cell}\n\n```{.r .cell-code}\nemerging <- ehsa %>%\n  arrange(sl, abs(tau)) %>%\n  slice(1:10)\nhead(emerging)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  County        tau         sl     S     D  varS\n  <chr>       <dbl>      <dbl> <dbl> <dbl> <dbl>\n1 Shuangfeng  0.868 0.00000143   118  136.  589.\n2 Xiangtan    0.868 0.00000143   118  136.  589.\n3 Xiangxiang  0.868 0.00000143   118  136.  589.\n4 Chengbu    -0.824 0.00000482  -112  136.  589.\n5 Dongan     -0.824 0.00000482  -112  136.  589.\n6 Wugang     -0.809 0.00000712  -110  136.  589.\n```\n:::\n:::\n\n:::\n\n# 5. Emerging Hotspot Analysis\n\n::: panel-tabset\n## `emerging_hotspot_analysis()`\nLastly, we perform Emerging Hot Spot Analysis (EHSA) using the `emerging_hotspot_analysis()` function from the `sfdep` package. For the `x` argument, we pass the spacetime object (e.g., GDPPC_st), and for `.var`, we specify the variable of interest (e.g., GDPPC). The `k` argument, which sets the number of time lags, defaults to 1. In the `nsim` argument, we define the number of simulations to run; setting it to 99, for example, results in 100 simulations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- emerging_hotspot_analysis(\n  x = GDPPC_st,\n  .var = \"GDPPC\",\n  k = 1,\n  nsim = 99\n)\n```\n:::\n\n\n## Visualising distribution of EHSA classes\nWe can visualise the distribution of EHSA classes using a bar chart.\n\nNote that this is a basic plot and does not account for statistical significance. If significance were considered, non-statistically significant areas would fall into the “no pattern detected” category.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## EHSA choropleth map\nBefore plotting the geographic distribution of EHSA classes, we need to join the `ehsa` dataframe with the `hunan` sf dataframe.\n\nNext, we use the `tmap` functions to create a categorical choropleth map.\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_ehsa <- hunan %>%\n  left_join(ehsa, by = join_by(County == location))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig <- hunan_ehsa %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(ehsa_sig) +\n  tm_fill(\"classification\") +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n:::\n",
    "supporting": [
      "In-class_Ex06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}